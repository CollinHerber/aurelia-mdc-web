{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/base/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/base/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/dom/events.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/dom/ponyfill.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/floating-label/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/floating-label/constants.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/floating-label/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/floating-label/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/line-ripple/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/line-ripple/constants.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/line-ripple/dist/mdc.line-ripple.css?bb79","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/line-ripple/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/line-ripple/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/notched-outline/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/notched-outline/constants.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/notched-outline/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/notched-outline/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/ripple/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/ripple/constants.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/ripple/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/ripple/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/ripple/util.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/character-counter/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/character-counter/constants.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/character-counter/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/character-counter/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/constants.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/helper-text/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/helper-text/constants.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/helper-text/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/helper-text/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/icon/component.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/icon/constants.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/icon/foundation.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/icon/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-binding/dist/es2015/aurelia-binding.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-bootstrapper/dist/es2015/aurelia-bootstrapper.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-dependency-injection/dist/es2015/aurelia-dependency-injection.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-history/dist/es2015/aurelia-history.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-loader-webpack/dist/es2015/aurelia-loader-webpack.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-loader/dist/es2015/aurelia-loader.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-logging/dist/es2015/aurelia-logging.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-metadata/dist/es2015/aurelia-metadata.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-pal/dist/es2015/aurelia-pal.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-path/dist/es2015/aurelia-path.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-polyfills/dist/es2015/aurelia-polyfills.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-route-recognizer/dist/es2015/aurelia-route-recognizer.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-router/dist/es2015/aurelia-router.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-task-queue/dist/es2015/aurelia-task-queue.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-templating/dist/es2015/aurelia-templating.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-typed-observable-plugin/dist/es2015/index.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-webpack-plugin/runtime/empty-entry.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-webpack-plugin/runtime/pal-loader-entry.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/line-ripple/dist/mdc.line-ripple.css","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/css-loader/dist/runtime/api.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/process/browser.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///../base/src/index.ts","webpack:///../base/src/mdc-component-adapters.ts","webpack:///../base/src/mdc-component.ts","webpack:///../floating-label/src/index.ts","webpack:///../floating-label/src/mdc-floating-label.ts","webpack:///../floating-label/src/mdc-floating-label.html","webpack:///../line-ripple/src/index.ts","webpack:///../line-ripple/src/mdc-line-ripple.ts","webpack:///../notched-outline/src/index.ts","webpack:///../notched-outline/src/mdc-notched-outline.ts","webpack:///../notched-outline/src/mdc-notched-outline.html","webpack:///../text-field/src/index.ts","webpack:///../text-field/src/mdc-text-field.ts","webpack:///../text-field/src/mdc-text-field-character-counter.ts","webpack:///../text-field/src/mdc-text-field-helper-line.ts","webpack:///../text-field/src/mdc-text-field-helper-text/mdc-text-field-helper-text.ts","webpack:///../text-field/src/mdc-text-field-helper-text/mdc-text-field-helper-text.html","webpack:///../text-field/src/mdc-text-field-icon.ts","webpack:///../text-field/src/mdc-text-field.html","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/floating-label/dist/mdc.floating-label.css","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/notched-outline/dist/mdc.notched-outline.css","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/@material/textfield/dist/mdc.textfield.css","webpack:///./src/app.ts","webpack:///./src/app.html","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-event-aggregator/dist/es2015/aurelia-event-aggregator.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-framework/dist/es2015/aurelia-framework.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-history-browser/dist/es2015/aurelia-history-browser.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-logging-console/dist/es2015/aurelia-logging-console.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-pal-browser/dist/es2015/aurelia-pal-browser.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-templating-binding/dist/es2015/aurelia-templating-binding.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-templating-resources/dist/es2015/aurelia-templating-resources.js","webpack:///C:/Dev/au/aurelia-mdc-web/node_modules/aurelia-templating-router/dist/es2015/aurelia-templating-router.js","webpack:///./src/main.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACI;AAC7C;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,oCAAoC,sDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,0CAA0C,yDAAa,GAAG;AAC1D;AACA,0EAA0E;AAC1E;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACe,2EAAY,EAAC;AAC5B,qC;;;;;;;;;;;;ACtGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oDAAoD;AACpD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACwB;AACzB;AACe,4EAAa,EAAC;AAC7B,sC;;;;;;;;;;;;AC3EA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,+BAA+B,oBAAoB;AACnD;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsB;AACK;AACH;AAC1D;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4CAA4C,EAAE;AAC1F,+CAA+C,+CAA+C,EAAE;AAChG,mCAAmC,QAAQ,kFAAmB,aAAa,EAAE;AAC7E;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,sEAA0B;AAC7C;AACA;AACA,CAAC,CAAC,qEAAY;AACc;AAC5B,qC;;;;;;;;;;;;AChFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACc;AACjB;AACzC;AACA,IAAI,uDAAS;AACb;AACA,sCAAsC,sDAAQ,CAAC,sDAAQ,GAAG;AAC1D,uDAAuD,yCAAyC;AAChG;AACA;AACA;AACA;AACA,mBAAmB,qDAAU;AAC7B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB,EAAE;AAC3D,0CAA0C,kBAAkB,EAAE;AAC9D,uCAAuC,UAAU,EAAE;AACnD,yDAAyD,kBAAkB,EAAE;AAC7E,2DAA2D,kBAAkB,EAAE;AAC/E;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,uEAAa;AACuB;AACtC;AACe,yFAA0B,EAAC;AAC1C,sC;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4B;AACA;AACC;AAC7B,iC;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsB;AACD;AACvD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4CAA4C,EAAE;AAC1F,+CAA+C,+CAA+C,EAAE;AAChG,4CAA4C,iDAAiD,EAAE;AAC/F,sDAAsD,0DAA0D,EAAE;AAClH,+DAA+D,uCAAuC,EAAE;AACxG,iEAAiE,yCAAyC,EAAE;AAC5G;AACA;AACA,mBAAmB,mEAAuB;AAC1C;AACA;AACA,CAAC,CAAC,qEAAY;AACW;AACzB,qC;;;;;;;;;;;;ACvEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;AACtB,qC;;;;;;;;;;;AC3BA,UAAU,mBAAO,CAAC,gJAAiE;AACnF,0BAA0B,mBAAO,CAAC,2KAAyD;;AAE3F;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA,sC;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACc;AACjB;AACzC;AACA,IAAI,uDAAS;AACb;AACA,sCAAsC,sDAAQ,CAAC,sDAAQ,GAAG;AAC1D,sDAAsD,uCAAuC;AAC7F;AACA;AACA;AACA;AACA,mBAAmB,qDAAU;AAC7B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB,EAAE;AAC3D,0CAA0C,kBAAkB,EAAE;AAC9D,uCAAuC,cAAc,EAAE;AACvD,uCAAuC,kBAAkB,EAAE;AAC3D,mDAAmD,kBAAkB,EAAE;AACvE,qDAAqD,kBAAkB,EAAE;AACzE;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAU;AAC3C,8BAA8B,qDAAU;AACxC;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAU;AACxC;AACA;AACA;AACA;AACA,mDAAmD,qDAAU;AAC7D;AACA;AACA,yCAAyC,qDAAU;AACnD,yCAAyC,qDAAU;AACnD;AACA;AACA;AACA;AACA,CAAC,CAAC,uEAAa;AACoB;AACnC;AACe,sFAAuB,EAAC;AACvC,sC;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4B;AACA;AACC;AAC7B,iC;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsB;AACyB;AAC/B;AACS;AAC3D;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kDAAO;AAC3C,kDAAkD,8FAA0B;AAC5E;AACA;AACA,oCAAoC,qDAAU;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA,oCAAoC,qDAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4CAA4C,EAAE;AAC1F,+CAA+C,+CAA+C,EAAE;AAChG;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,uEAA2B;AAC9C;AACA;AACA,CAAC,CAAC,qEAAY;AACe;AAC7B,qC;;;;;;;;;;;;ACpFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACxC,qC;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACc;AACC;AAC3D;AACA,IAAI,uDAAS;AACb;AACA,iCAAiC,sDAAQ,CAAC,sDAAQ,GAAG;AACrD;AACA;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,qDAAU;AAC7B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB,EAAE;AAC3D,0CAA0C,kBAAkB,EAAE;AAC9D,oDAAoD,kBAAkB,EAAE;AACxE,uDAAuD,kBAAkB,EAAE;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAO,uBAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,uEAAa;AACwB;AACvC;AACe,0FAA2B,EAAC;AAC3C,sC;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4B;AACA;AACC;AAC7B,iC;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsB;AACJ;AACH;AACE;AACpB;AAC/B;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,+CAA+C,EAAE;AAC7F,iDAAiD,QAAQ,0DAAyB,SAAS,EAAE;AAC7F,8CAA8C,8CAA8C,EAAE;AAC9F,oDAAoD,uCAAuC,EAAE;AAC7F;AACA,sFAAsF,yEAAY;AAClG,aAAa;AACb;AACA;AACA,2DAA2D,yEAAY;AACvE,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,yBAAyB,+CAA+C;AACxE,aAAa;AACb,0CAA0C,QAAQ,sEAAO,2BAA2B,EAAE;AACtF,4CAA4C,mCAAmC,EAAE;AACjF,sCAAsC,oCAAoC,EAAE;AAC5E;AACA,mFAAmF,yEAAY;AAC/F,aAAa;AACb;AACA;AACA,wDAAwD,yEAAY;AACpE,aAAa;AACb;AACA;AACA,aAAa;AACb,+CAA+C,kDAAkD,EAAE;AACnG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+DAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,qEAAY;AACO;AACrB,qC;;;;;;;;;;;;ACzHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACc;AACC;AACT;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,sCAAsC,sDAAQ,CAAC,sDAAQ,GAAG;AAC1D;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,+CAA+C,2BAA2B;AAC1E,gDAAgD,4BAA4B;AAC5E,2CAA2C,4BAA4B;AACvE,0CAA0C,2BAA2B;AACrE,4CAA4C,uBAAuB;AACnE;AACA;AACA;AACA;AACA,mBAAmB,qDAAU;AAC7B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uCAAuC,kBAAkB,EAAE;AAC3D,qDAAqD,aAAa,EAAE;AACpE,kDAAkD,UAAU,4DAA4D,EAAE,EAAE;AAC5H,kDAAkD,aAAa,EAAE;AACjE,mEAAmE,kBAAkB,EAAE;AACvF,2DAA2D,kBAAkB,EAAE;AAC/E,sDAAsD,kBAAkB,EAAE;AAC1E,kDAAkD,UAAU,aAAa,EAAE,EAAE;AAC7E,8CAA8C,aAAa,EAAE;AAC7D,gDAAgD,aAAa,EAAE;AAC/D,0CAA0C,aAAa,EAAE;AACzD,iEAAiE,kBAAkB,EAAE;AACrF,yDAAyD,kBAAkB,EAAE;AAC7E,oDAAoD,kBAAkB,EAAE;AACxE,0CAA0C,kBAAkB,EAAE;AAC9D,gDAAgD,kBAAkB,EAAE;AACpE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0EAA0E,EAAE;AACvH;AACA;AACA;AACA,2CAA2C,6EAA6E,EAAE;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kDAAkD,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,yCAAyC,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA,yBAAyB,sEAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,kDAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAmD,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sDAAQ,GAAG;AAC/B;AACA,+CAA+C,0CAA0C,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,uEAAa;AACgB;AAC/B;AACe,kFAAmB,EAAC;AACnC,sC;;;;;;;;;;;;ACndA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;AACf;AACY;AACA;AACC;AAC7B,iC;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACO;AACP,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,gC;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsB;AACc;AACtE;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,kFAAsC;AACzD;AACA;AACA,CAAC,CAAC,qEAAY;AAC0B;AACxC,qC;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;AAC/B,qC;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACc;AACR;AAClD;AACA,IAAI,uDAAS;AACb;AACA,iCAAiC,sDAAQ,CAAC,sDAAQ,GAAG;AACrD;AACA;AACA;AACA,mBAAmB,qDAAU;AAC7B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,0CAA0C;AAC1D;AACA;AACA;AACA,yCAAyC,kBAAkB,EAAE;AAC7D;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,uEAAa;AACmC;AAClD;AACe,qGAAsC,EAAC;AACtD,sC;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4B;AACC;AAC0E;AACvG,iC;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACY;AACJ;AACD;AACmB;AACN;AACQ;AACjB;AACW;AACY;AACU;AACtC;AACI;AACY;AACU;AACxB;AACpD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4CAA4C,YAAY,oEAAS,iBAAiB,GAAG;AAC5H,2CAA2C,oCAAoC,YAAY,6EAAa,KAAK,GAAG;AAChH,2CAA2C,oCAAoC,YAAY,8EAAsB,KAAK,GAAG;AACzH,iDAAiD,0CAA0C,YAAY,yFAA4B,KAAK,GAAG;AAC3I,qCAAqC,8BAA8B,YAAY,iEAAgB,KAAK,GAAG;AACvG,sCAAsC,+BAA+B,YAAY,mFAAgB,KAAK,GAAG;AACzG,wCAAwC,iCAAiC,YAAY,qFAAiB,KAAK,GAAG;AAC9G,8CAA8C,mDAAO;AACrD,mDAAmD,mDAAO;AAC1D;AACA,wDAAwD,mDAAO;AAC/D;AACA,qDAAqD,mDAAO;AAC5D;AACA;AACA,gCAAgC,yFAAgC;AAChE;AACA,yFAAyF,sDAAU;AACnG;AACA;AACA;AACA,sCAAsC,qGAAsC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mDAAO;AAC3D;AACA;AACA,qDAAqD,mDAAO;AAC5D;AACA;AACA,+CAA+C,mDAAO;AACtD,+CAA+C,mDAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ,CAAC,sDAAQ,CAAC,sDAAQ,CAAC,sDAAQ,CAAC,sDAAQ,GAAG;AACrE;AACA,mBAAmB,mEAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,4CAA4C,4CAA4C,EAAE;AAC1F,+CAA+C,+CAA+C,EAAE;AAChG,4CAA4C,iDAAiD,EAAE;AAC/F,8EAA8E,uCAAuC,EAAE;AACvH,gFAAgF,yCAAyC,EAAE;AAC3H;AACA;AACA;AACA,kDAAkD,+BAA+B,EAAE;AACnF,0DAA0D,sBAAsB,EAAE;AAClF;AACA,8EAA8E,kDAAkD,EAAE;AAClI,8BAA8B;AAC9B;AACA;AACA,aAAa;AACb,6EAA6E,8BAA8B,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB,EAAE;AAChE,oCAAoC,gDAAgD,EAAE;AACtF;AACA,uEAAuE,yEAAY;AACnF,aAAa;AACb;AACA,0EAA0E,yEAAY;AACtF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wDAAwD,EAAE;AAC1G,wCAAwC,mDAAmD,EAAE;AAC7F,mCAAmC,8BAA8B,EAAE;AACnE,gDAAgD,wDAAwD,EAAE;AAC1G,qDAAqD,6DAA6D,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uCAAuC,sDAAsD,EAAE;AAC/F,qCAAqC,gCAAgC,EAAE;AACvE,iDAAiD,2DAA2D,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,sDAAU;AAChE,sDAAsD,sDAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ,CAAC,sDAAQ,GAAG,EAAE,oEAAS,wBAAwB,+BAA+B,QAAQ,8DAAgB,0BAA0B,EAAE,2DAA2D,wDAAwD,yEAAY,IAAI,EAAE;AACrS,0EAA0E,yEAAY;AACtF,aAAa,EAAE;AACf;AACA,4CAA4C,+EAAmB;AAC/D;AACA;AACA,CAAC,CAAC,qEAAY;AACU;AACxB,qC;;;;;;;;;;;;ACxeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuF;AACvF,qC;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACc;AACgD;AAC1G;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D,sCAAsC,sDAAQ,CAAC,sDAAQ,GAAG;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,8BAA8B;AAC9E,+CAA+C,gCAAgC;AAC/E,gDAAgD,4BAA4B;AAC5E,mDAAmD,sCAAsC;AACzF,0DAA0D,2CAA2C;AACrG,6EAA6E,8DAA8D;AAC3I;AACA;AACA;AACA;AACA,mBAAmB,qDAAU;AAC7B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,6DAAkB;AACrC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB,EAAE;AAC3D,0CAA0C,kBAAkB,EAAE;AAC9D,uCAAuC,aAAa,EAAE;AACtD,kEAAkE,kBAAkB,EAAE;AACtF,oEAAoE,kBAAkB,EAAE;AACxF,8DAA8D,kBAAkB,EAAE;AAClF,gEAAgE,kBAAkB,EAAE;AACpF,uEAAuE,0CAA0C,kBAAkB,EAAE,EAAE,EAAE;AACzI,yEAAyE,kBAAkB,EAAE;AAC7F,6CAA6C,aAAa,EAAE;AAC5D,wCAAwC,cAAc,EAAE;AACxD,iDAAiD,kBAAkB,EAAE;AACrE,mDAAmD,kBAAkB,EAAE;AACvE,2DAA2D,kBAAkB,EAAE;AAC/E,yCAAyC,kBAAkB,EAAE;AAC7D,yCAAyC,kBAAkB,EAAE;AAC7D,+CAA+C,kBAAkB,EAAE;AACnE,uCAAuC,cAAc,EAAE;AACvD,4CAA4C,UAAU,EAAE;AACxD,yCAAyC,cAAc,EAAE;AACzD,2CAA2C,kBAAkB,EAAE;AAC/D,2CAA2C,kBAAkB,EAAE;AAC/D;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAyB;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,kDAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC,CAAC,uEAAa;AACmB;AAClC;AACe,qFAAsB,EAAC;AACtC,sC;;;;;;;;;;;;ACleA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsB;AACQ;AAChE;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4CAA4C,EAAE;AAC1F,+CAA+C,+CAA+C,EAAE;AAChG,4CAA4C,iDAAiD,EAAE;AAC/F,6CAA6C,6CAA6C,EAAE;AAC5F,yCAAyC,yCAAyC,EAAE;AACpF;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,4EAAgC;AACnD;AACA;AACA,CAAC,CAAC,qEAAY;AACoB;AAClC,qC;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;AAC/B,qC;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACc;AACR;AAClD;AACA,IAAI,uDAAS;AACb;AACA,iCAAiC,sDAAQ,CAAC,sDAAQ,GAAG;AACrD;AACA;AACA;AACA,mBAAmB,qDAAU;AAC7B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,oCAAoC;AACpD;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB,EAAE;AAC3D,0CAA0C,kBAAkB,EAAE;AAC9D,uCAAuC,cAAc,EAAE;AACvD,sCAAsC,kBAAkB,EAAE;AAC1D,yCAAyC,kBAAkB,EAAE;AAC7D,yCAAyC,kBAAkB,EAAE;AAC7D;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qDAAU;AAC5C;AACA;AACA,qCAAqC,qDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qDAAU;AAC5C;AACA;AACA,qCAAqC,qDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kDAAO;AACvC;AACA;AACA;AACA;AACA;AACA,2DAA2D,qDAAU;AACrE,8DAA8D,qDAAU;AACxE;AACA;AACA,iCAAiC,kDAAO;AACxC;AACA;AACA,oCAAoC,kDAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kDAAO;AACpC;AACA;AACA,CAAC,CAAC,uEAAa;AAC6B;AAC5C;AACe,+FAAgC,EAAC;AAChD,sC;;;;;;;;;;;;AC7HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4B;AACC;AACkE;AAC/F,iC;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACsB;AACE;AAC1D;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sCAAsC,EAAE;AAC9E,6CAA6C,6CAA6C,EAAE;AAC5F,yCAAyC,yCAAyC,EAAE;AACpF;AACA;AACA,aAAa;AACb,qEAAqE,uCAAuC,EAAE;AAC9G,uEAAuE,yCAAyC,EAAE;AAClH,2CAA2C,mBAAmB,sEAA0B,uBAAuB,yCAAyC,EAAE;AAC1J;AACA;AACA,mBAAmB,sEAA0B;AAC7C;AACA;AACA,CAAC,CAAC,qEAAY;AACc;AAC5B,qC;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;AAC/B,qC;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4C;AACc;AACR;AAClD;AACA;AACA,IAAI,uDAAS;AACb;AACA,sCAAsC,sDAAQ,CAAC,sDAAQ,GAAG;AAC1D;AACA,oDAAoD,qCAAqC;AACzF;AACA;AACA;AACA;AACA,mBAAmB,kDAAO;AAC1B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,qDAAU;AAC7B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA,sCAAsC,aAAa,EAAE;AACrD,sCAAsC,kBAAkB,EAAE;AAC1D,yCAAyC,kBAAkB,EAAE;AAC7D,yCAAyC,kBAAkB,EAAE;AAC7D,yDAAyD,kBAAkB,EAAE;AAC7E,2DAA2D,kBAAkB,EAAE;AAC/E,+CAA+C,kBAAkB,EAAE;AACnE;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kDAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,uEAAa;AACuB;AACtC;AACe,yFAA0B,EAAC;AAC1C,sC;;;;;;;;;;;;ACjHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4B;AACC;AACsD;AACnF,iC;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4B;AACA;AACC;AACa;AACN;AACP;AAC7B,irC;AACA;;AAEP;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC,iCAAiC,EAAE;AACnC,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,oDAAQ;AACjC;AACA;AACA;AACA;;AAEA;AACA,IAAI,oDAAQ;AACZ,GAAG;AACH;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oDAAQ;AACZ;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA,mBAAmB,cAAc;AACjC,qBAAqB,iBAAiB;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA;;AAEA,iBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,yDAAoB;AACtB,CAAC;AACD,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;;AAEA;AACA,2CAA2C,KAAK;AAChD;;AAEA;AACA,2CAA2C,KAAK;AAChD;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D;AACA,kCAAkC,UAAU;AAC5C;AACA,mDAAmD,UAAU,iCAAiC,gBAAgB;AAC9G;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,eAAe;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,eAAe;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,2BAA2B,SAAS;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C,YAAY;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,YAAY;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C,YAAY;AACvD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,cAAc;;AAEnC,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,eAAe;;AAEpC,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,YAAY;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,cAAc;AAClC;;AAEA;AACA;;AAEA;;AAEA,+CAA+C,YAAY;AAC3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,2CAA2C,YAAY;AACvD;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;;AAEA,mBAAmB;AACnB;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;;AAEA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,sCAAsC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,2BAA2B,EAAE;AAC7B,qDAAqD,IAAI;AACzD;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,SAAS;AAC7C,qCAAqC,QAAQ,aAAa,OAAO,kBAAkB,SAAS;AAC5F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,yCAAyC,iCAAixF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,yDAAoB;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qCAAqC;AAChF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,+CAAG;AACT;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,MAAM,+CAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,+CAAG;AACT;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,MAAM,+CAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA,OAAO;AACP,0EAA0E,4FAA4F;AACtK;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA,OAAO;AACP,6DAA6D,yCAAyC;AACtG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,eAAe,yDAAoB;;AAE5B;AACP;AACA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,kBAAkB,iBAAiB,KAAK,IAAI,eAAe;AACtF;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8CAA8C,kBAAkB;AAChE;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,sBAAsB,gBAAgB,kBAAkB;AACjG;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,sBAAsB,gBAAgB,kBAAkB;AACjG;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,sMAAsM,YAAY;AAClN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,sBAAsB,gBAAgB,kBAAkB;AACjG;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,+CAAG;AAC1B;AACA;AACA,KAAK;AACL,4CAA4C,sDAAsD;AAClG;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACfcAAc,+CAAG;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACA;AACA;AACA;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,yDAAoB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,+CAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,+CAAG,2BAA2B,+CAAG,2EAA2E,+CAAG;AACpK;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,+CAAG;AAC1B;AACA;AACA;AACA,qEAAqE,+CAAG;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,qBAAqB,4DAAS;;AAExB;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA,MAAM,yDAAQ,QAAQ,yDAAQ;AAC9B;AACA;;AAEA,EAAE,yDAAQ,QAAQ,yDAAQ;AAC1B;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA,MAAM,yDAAQ,QAAQ,yDAAQ;AAC9B;AACA;;AAEA,EAAE,yDAAQ,QAAQ,yDAAQ;AAC1B;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qEAAqE,gBAAgB;AACrF;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,QAAQ;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,IAAI;;AAElE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,oBAAoB;;AAE3E;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;AC5jKA;AAAA;AAAA;AAAA;AAAA;AAA2B;AAC2B;;AAEtD;AACA;;AAEA;AACA,aAAa,oDAAQ;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,MAAM,oDAAQ;AACd,+BAA+B,oDAAQ;AACvC;;AAEA,MAAM,KAA0C,EAAE,EAsB/C;;AAEH;AACA;;AAEA;AACA,MAAM,yDAAa;;AAEnB;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA,0FAA0F,yDAAa;AACvG;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,iCAAiC,mBAAkE;;AAEnG;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,eAAe;AACpE;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;;AAEO,uB;;;;;;;;;;;;;ACrIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACT;;AAE7C;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yDAAQ,QAAQ,yDAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,yDAAQ;AACzB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAQ;AACR,yiCAAiC,yDAAQ,KAAK,yDAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,yDAAQ,KAAK,yDAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0DAAc,mBAAmB,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAQ,QAAQ,yDAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAQ,QAAQ,yDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,yDAAQ,QAAQ,yDAAQ;AAChC;AACA;AACA;AACA;AACA,QAAQ,yDAAQ,QAAQ,yDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,yDAAQ,QAAQ,yDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEgX;;;;;;;;;;;;;;;;;ACnlBhX;AACA,4CAA4C,KAAK;AACjD;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AAC0C;AACF;AACI;AAC5C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+CAAG;AAChC,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAM,iBAAiB,uDAAM;AACjC;AACA;AACA;AACA;AACA,gBAAgB,uDAAM,wBAAwB,uDAAM;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4BAA4B,qDAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,KAAU,EAAE,EAYf;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,QAAQ,oDAAQ;AAChB,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA,oBAAoB,KAAwB,EAAE,EAE7B;AACjB;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,2CAA2C,SAAS;AACpD,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA,8DAA8D,SAAS;AACvE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW,GAAG,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAQ;;;;;;;;;;;;;;ACxOR;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACJ;;AAEnC;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yCAAyC,QAAQ;AACjD;AACA;;AAEA;AACA,gDAAgD,QAAQ;AACxD;;AAEA,+CAA+C,mEAAc;;AAE7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,mEAAc,sBAAsB,uDAAM;;AAEvF;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;;;;;;;;;;;;;;ACnHO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,8BAA8B,KAAK;AACnC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA,uCAAuC,KAAK;AAC5C;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;ACzKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAEvN;;AAEvC;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,+CAA+C;;AAE7E;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,oDAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA,+BAA+B,wBAAwB,GAAG,IAAI;AAC9D,+BAA+B;AAC/B,mCAAmC,gBAAgB;;AAEnD;AACA;AACA;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;;AAEO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;;;;;;;;;;ACrPO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,UAAU;;AAE5B;AACA,6BAA6B,WAAW;AACxC,KAAK;AACL;AACA,+BAA+B,mBAAmB;AAClD,OAAO;AACP,kFAAkF,uCAAuC;AACzH;;AAEA;AACA,4CAA4C,iBAAiB;AAC7D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;;AAEA;AACP,WAAW;AACX,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAEM;AACA;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA,C;;;;;;;;;;;;;;;;;;;AClFA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA,uBAAuB,eAAe,GAAG,iBAAiB;AAC1D,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,mBAAmB,eAAe,GAAG,cAAc;AACnD;AACA;AACA;;AAEO;AACP;AACA,qCAAqC;AACrC,oCAAoC,SAAS;AAC7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,gFAAgF;AAChF,KAAK;AACL;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC3MA;AAAA;AAAuC;;AAEvC;;AAEA;AACA;;AAEA;;AAEA;AACA,YAAY,oDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,+BAA+B;AAC/B;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA,+CAA+C,eAAe;AAC9D;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa,IAAI;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gCAAgC;AAC3F;AACA;AACA,SAAS;AACT;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,QAAQ;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8CAA8C;AAC9C;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wDAAwD,0BAA0B,IAAI;AACtF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE,oDAAQ;AACb;;AAEA;;AAEA;;AAEA,aAAa,oDAAQ;AACrB,IAAI,oDAAQ;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC70BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;;AAE3D;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,OAAO;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sEAAsE,KAAK;;AAE3E;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA,gBAAgB,4EAA4E;AAC5F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,cAAc,kCAAkC;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA,cAAc,iCAAiC;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;;AAEA;;AAEA,kDAAkD,QAAQ;AAC1D;AACA;;AAEA;AACA;AACA,wBAAwB,gBAAgB;AACxC,OAAO;AACP;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,kBAAkB;AACzD;AACA;;AAEA,qBAAqB,uCAAuC;;AAE5D,oCAAoC,qBAAqB;AACzD;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;;AAEA,wCAAwC,OAAO;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sEAAsE,aAAa,cAAc,YAAY;AAC7G;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,qEAAgB;AACtC,gCAAgC,YAAY;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,qEAAgB;AACpC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yCAAyC,QAAQ;AACjD;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,KAAK,YAAY,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;;AAEA,iBAAiB,sEAAsE;AACvF;;AAEA;AACA;;AAEA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA,GAAG;;AAEH;AACA,C;;;;;;;;;;;;ACncA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACa;AACf;AACiB;AACA;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB,gCAAgC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,6BAA6B;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB,WAAW,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,aAAa,8EAA8E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wEAAe;AAC9C,oCAAoC,wEAAe;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF,iBAAiB,OAAO;AACxB;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,YAAY,4CAA4C,YAAY;AACtH;AACA;AACA;AACA,qCAAqC,+BAA+B,EAAE,WAAW;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,yBAAyB,iBAAiB;AAC1C,+FAA+F;AAC/F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E,6BAA6B,iBAAiB;AAC9C,mGAAmG;AACnG;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,IAAI;AAC1E;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc,qBAAqB,EAAE,+BAA+B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,IAAI;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sCAAsC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS,sEAAS,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,KAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,iEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS,sEAAS,EAAE,uDAAO,oBAAoB,wEAAe,EAAE;AACrF;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,cAAc;AACpG;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,uBAAuB;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,gCAAgC;AAC3E;AACA;AACA,+CAA+C,+BAA+B;AAC9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;;AAEuV;AACpY;;;;;;;;;;;;;AClqEA;AAAA;AAAA;AAA2C;;AAE3C;AACA;;AAEA;AACA,iBAAiB,+CAAG;AACpB;AACA,aAAa,+CAAG;AAChB;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,mDAAO;AACf;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,kBAAkB;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,C;;;;;;;;;;;;AC3KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE8C;AACgB;AACT;AACU;AACjB;AACoK;AACvI;AAC5B;;AAExC;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,IAAI,yDAAQ,QAAQ,yDAAQ;AAC5B;;AAEA;AACA;;AAEO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC,gBAAgB,+CAAG,+BAA+B,8BAA8B;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEO,qBAAqB,yDAAQ;AACpC;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,8BAA8B,oDAAQ;AACtC;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,mEAAc;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,mEAAc;AACxC;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,oEAAqB;;AAElD;AACA;;AAEA;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,oEAAqB;AAClD,qBAAqB,+CAAG;;AAExB;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAEM;;AAEP;AACA,wDAAwD,+CAAG;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gFAAgF,WAAW;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uDAAM;;AAEzB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM,yDAAQ;AACd;AACA;;AAEA,iBAAiB,uDAAM;AACvB,mBAAmB,yDAAQ;;AAE3B;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,oDAAoD,KAAK;AACzD;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA,YAAY,+CAAG;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,6CAA6C,QAAQ;AACrD;;AAEA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,6CAA6C,QAAQ;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,+CAAG;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,QAAQ;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,OAAO;AACP;AACA;AACA,eAAe;AACf,SAAS;AACT;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,OAAO;AACP;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,KAAK,qDAAqD,KAAK;AAC9G;;AAEA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA,IAAI,yDAAoB,wBAAwB,KAAK,mBAAmB,KAAK,mCAAmC,QAAQ;AACxH;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA,iCAAiC;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,2BAA2B,sEAAsB,CAAC,iEAAS;AAC3D;AACA;AACA,2BAA2B,uEAAuB,CAAC,iEAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,+DAA+D,EAAE,eAAe,YAAY;AAC5F;AACA;;AAEA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mEAAc;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,yDAAQ,QAAQ,yDAAQ;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,yGAAyG,sEAAsB,0BAA0B,uEAAuB;AAChL;AACA;AACA;AACA;AACA,MAAM,yDAAQ,QAAQ,yDAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8CAA8C,6EAAqB;;AAEnE;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,kBAAkB;AAClB,eAAe;AACf,iBAAiB;AACjB,mBAAmB;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,6EAAQ;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA,cAAc,+CAAG;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,+CAAG;;AAElB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,+CAAG;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,+CAAG;AAC3B;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,IAAI,+CAAG;AACP;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,iDAAiD,QAAQ;AACzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,+CAAG;AACxB,EAAE,+CAAG;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,+CAAG;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,+CAAG;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,+CAAG;AACnB,KAAK;AACL;AACA;;AAEA,+EAA+E,mDAAO;AACtF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,+CAAG;AAClC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAG;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,KAAK;AACL;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,yBAAyB,yDAAQ,KAAK,yDAAQ;;AAE9C;AACA;AACA;AACA,QAAQ,yDAAQ,QAAQ,yDAAQ;AAChC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,yDAAQ,KAAK,yDAAQ;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO,mCAAmC,oEAAqB;AAC/D;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU,yDAAQ,QAAQ,yDAAQ;AAClC,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;;AAEA,UAAU,yDAAQ,QAAQ,yDAAQ;AAClC,SAAS,yBAAyB,sEAAsB,oBAAoB,uEAAuB;AACnG;AACA,UAAU,yDAAQ,QAAQ,yDAAQ;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,yDAAoB;;AAEjC;AACA,oCAAoC,oEAAqB;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEO;;AAEP;AACA,YAAY,qDAAM,EAAE,sEAAS;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,yDAAQ,QAAQ,yDAAQ;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,sBAAsB;;AAElE;AACA,8BAA8B,yDAAQ;AACtC;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA,qDAAqD,uDAAM,qBAAqB,mEAAc;;AAE9F;AACA;AACA;AACA;AACA;AACA,0DAA0D,sCAAsC;AAChG;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB,uDAAM;AAC/B;;AAEA;AACA,0DAA0D,aAAa;AACvE;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA,uBAAuB,uDAAM;;AAE7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,6EAAqB;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,0BAA0B,6EAAqB;AAC/C,OAAO;AACP,0BAA0B,6EAAqB;AAC/C;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO,wCAAwC,4EAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,mBAAmB,yDAAQ,KAAK,yDAAQ;AACxC;AACA,0BAA0B,sEAAS,iBAAiB,sEAAS;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,2DAAW;AAC3C,KAAK;AACL,gCAAgC,2DAAW,wBAAwB,2DAAW;AAC9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0FAA0F;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,wCAAwC,kBAAkB;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,kEAAkE;AAClG,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,+DAAe;AACxD,mCAAmC,4DAAS;;AAE5C;AACA,iDAAiD,mDAAO;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;AACL,yCAAyC,QAAQ;AACjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,uDAAM;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,+CAAG;AAC1B,uBAAuB,+CAAG;AAC1B;AACA;;AAEA;AACA,QAAQ,+CAAG;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,yDAAyD,+CAAG;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,+CAAG;AACf;AACA,WAAW;AACX;AACA,cAAc,+CAAG;AACjB,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,+CAAG;AACtC,OAAO;AACP;AACA;AACA,qCAAqC,+CAAG;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C,yCAAyC,+CAAG;AAC5C;;AAEA;AACA;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,OAAO;AACP,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA,KAAK;AACL,gDAAgD,QAAQ;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,QAAQ;AAC/C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yDAAQ,QAAQ,yDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA,wCAAwC,QAAQ;AAChD;AACA;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,+CAAG;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEO,iCAAiC,2EAAM;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0CAA0C,+CAAG;AAC7C;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;;AAE5C;;AAEA;;AAEA,iCAAiC;;AAEjC;AACA,sCAAsC,+CAAG;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAEM;AACP;;AAEA;;AAEA;AACA;AACA,qCAAqC,4DAAY;AACjD;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,yDAAQ,QAAQ,yDAAQ;AAC9B;AACA;AACA;;AAEO;AACP;AACA;AACA,MAAM,yDAAQ,QAAQ,yDAAQ;AAC9B,KAAK;AACL,cAAc,yDAAQ,gBAAgB,yDAAQ;AAC9C;AACA;AACA;AACA;;AAEO;AACP;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;AACA;AACA;;AAEO;AACP;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;AACA;;AAEA;AACA;;AAEA,iCAAiC;;AAE1B;AACP;;AAEA;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;AACA;AACA;AACA,OAAO;AACP,QAAQ,yDAAoB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;AACA;AACA;AACA,OAAO;AACP,QAAQ,yDAAoB;AAC5B;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA,YAAY,yDAAQ,gBAAgB,yDAAQ;AAC5C;AACA;;AAEA;AACA;;AAEO;AACP;AACA,IAAI,yDAAQ;AACZ;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,IAAI,yDAAQ;AACZ;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA,IAAI,yDAAQ,QAAQ,yDAAQ;AAC5B;;AAEA;AACA;;AAEO;AACP;AACA,IAAI,yDAAQ;AACZ;AACA;;AAEO,gCAAgC,2EAAM,CAAC,sEAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,+CAAG;AAClC,qBAAqB;AACrB;;AAEA,gCAAgC;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA,oBAAoB,+CAAG;AACvB;;AAEA;AACA;AACA,CAAC,e;;;;;;;;;;;;AC50JD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAC0D;AAC1D;;AAE5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAAS;AACjB,sEAAsE,UAAU,OAAO,QAAQ;AAC/F;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAAwB;AACxB;AACA;AACA,QAAQ,iEAAS;AACjB,yEAAyE,6BAA6B;AACtG;AACA;AACA;AACA;AACA;AACA,2EAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA;AACA,yBAAyB,2EAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,mEAAgB;AAChB,iCAAiC,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2EAAwB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAQ,gBAAgB,yDAAQ,WAAW,uEAAoB;AACjF;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAQ,QAAQ,yDAAQ;AACnD;AACA;AACA;AACA,wBAAwB,iEAAS;AACjC,yFAAyF,6BAA6B;AACtH;AACA;AACA;AACA;AACA;AACA,mBAAmB,mEAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,IAAI;AACrC;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,+EAA+E,6BAA6B;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;;AAEA,yBAAyB,iEAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,6BAA6B;AAC1H;AACA;AACA;AACA,uBAAuB,yDAAQ,QAAQ,yDAAQ;AAC/C;AACA;AACA;AACA,qFAAqF,cAAc;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,IAAI;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oBAAoB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,qCAAqC,IAAI;AACzC;AACA;AACA;AACA,+EAA+E,6BAA6B;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;;AAEqO;;;;;;;;;;;;ACxfrO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEuC;;AAEvC;;AAEA,sBAAsB,oDAAQ;AAC9B;AACA,+BAA+B,mBAAO,CAAC,+GAAwB;AAC/D,GAAG;AACH;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC/BD;AACA,kCAAkC,mBAAO,CAAC,kGAAyC;AACnF;AACA;AACA,cAAc,QAAS,+TAA+T,uBAAuB,cAAc,YAAY,gBAAgB,+BAA+B,kBAAkB,GAAG,4BAA4B,6BAA6B,eAAe,GAAG,2BAA2B,iCAAiC,iCAAiC,6BAA6B,eAAe,eAAe,GAAG,2BAA2B,iHAAiH,yGAAyG,+JAA+J,GAAG,qCAAqC,iCAAiC,iCAAiC,eAAe,GAAG,2CAA2C,eAAe,GAAG;AAC9vC;AACA;;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA,4CAA4C,qBAAqB;AACjE;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,C;;;;;;;;;;;AC7FA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;ACvLzB;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAwC,GAAG,sBAAiB,GAAG,SAAI;;AAEnF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,qEAAqE,qBAAqB,aAAa;;AAEvG;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,yDAAyD;AACzD,GAAG;;AAEH;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,6BAA6B;AACjD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC5QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;;AAEM;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEA;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClOA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;ICvBS,yHAAY;IACZ,kJAAoB;;;;;;;;;;;;;;;;;;ICmB7B;QAKE,8BAAoB,eAAgC;YAAhC,oBAAe,GAAf,eAAe,CAAiB;YAJ5C,oBAAe,GAAY,KAAK,CAAC;YACjC,aAAQ,GAA8C,EAAE,CAAC;QAGT,CAAC;QAEjD,4CAAa,GAArB;YAAA,iBAoBC;YAnBC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;gBAC9B,WAAW,EAAE,UAAC,GAAY,EAAE,YAAoB,EAAE,UAA8B;oBAC9E,IAAI,GAAG,YAAY,OAAO,EAAE;wBAC1B,IAAM,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC;wBAC9D,IAAM,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;wBAC1C,IAAI,CAAC,UAAU,EAAE;4BACf,OAAO,IAAI,CAAC;yBACb;wBACD,IAAM,eAAe,GAAG,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;wBAC5D,IAAI,eAAe,EAAE;4BACnB,IAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,EAAE,KAAI,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;4BAClG,IAAI,QAAQ,EAAE;gCACZ,OAAO,QAAQ,CAAC;6BACjB;yBACF;qBACF;oBACD,OAAO,IAAW,CAAC;gBACrB,CAAC;aACF,CAAC,CAAC;QACL,CAAC;QAEO,4DAA6B,GAArC,UAAsC,OAAe;YACnD,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBACzB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;YACD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;YAC3E,IAAI,CAAC,eAAe,EAAE;gBACpB,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,OAAO,WAAE,UAAU,EAAE,EAAE,EAAE,CAAC;aACrG;YACD,OAAO,eAAe,CAAC;QACzB,CAAC;QAEO,mEAAoC,GAA5C;YACE,IAAM,GAAG,GAAG,IAAI,CAAC;YACjB,IAAM,UAAU,GAAG,8CAAiB,CAAC,SAAS,CAAC,2BAA2B,CAAC;YAE3E,8CAAiB,CAAC,SAAS,CAAC,2BAA2B,GAAG,UAExD,OAAgB,EAChB,QAAgB,EAChB,OAAa;gBAEb,IAAM,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC;gBACtE,IAAM,UAAU,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACzC,IAAI,UAAU,EAAE;oBACd,IAAM,eAAe,GAAG,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;oBACxD,IAAI,eAAe,EAAE;wBACnB,OAAO,eAAe,CAAC,kBAAkB,CAAC;qBAC3C;iBACF;gBACD,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC3D,CAAC,CAAC;QACJ,CAAC;QAEM,2DAA4B,GAAnC,UAAoC,OAAe,EAAE,UAAsD;YACzG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBACzB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;YACD,IAAM,eAAe,GAAG,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QACxD,CAAC;QAEM,uDAAwB,GAA/B,UAAgC,eAA0C;YACxE,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;gBAChC,IAAI,CAAC,oCAAoC,EAAE,CAAC;gBAC5C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;aACpC;YACD,IAAI,CAAC,4BAA4B,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,eAAe,CAAC,UAAU,CAAC,CAAC;QACvG,CAAC;QA/EU,oBAAoB;YADhC,0BAAM,CAAC,mCAAe,CAAC;WACX,oBAAoB,CAgFhC;QAAD,2BAAC;KAAA;IAhFY,oDAAoB;;;;;;;;;;;;;;;;;;IClBjC;QACE,sBAAmB,IAAiB;YAApC,iBAAyC;YAAtB,SAAI,GAAJ,IAAI,CAAa;YAIpC,gBAAW,GAAG,IAAI,OAAO,CAAC,WAAC,IAAI,YAAI,CAAC,kBAAkB,GAAG,CAAC,EAA3B,CAA2B,CAAC,CAAC;QAJpB,CAAC;QAOnC,iCAAU,GAAhB;;;;SAAsB;QAEhB,+BAAQ,GAAd;;;;gCACE,qBAAM,IAAI,CAAC,UAAU,EAAE;;4BAAvB,SAAuB,CAAC;4BACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;4BAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;4BACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;;;;;SAC3B;QAED,8BAAO,GAAP,cAAY,CAAC;QAEb,+BAAQ,GAAR;YACE,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC;QAID,6BAAM,GAAN,UAAO,OAAe,EAAE,OAAsB,EAAE,OAA2C;YACzF,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACxD,CAAC;QAED,+BAAQ,GAAR,UAAS,OAAe,EAAE,OAAsB,EAAE,OAA2C;YAC3F,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAC3D,CAAC;QAED;;WAEG;QACH,2BAAI,GAAJ,UAAuB,OAAe,EAAE,OAAU,EAAE,YAAoB;YAApB,mDAAoB;YACtE,IAAI,GAAmB,CAAC;YACxB,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;gBACrC,GAAG,GAAG,IAAI,WAAW,CAAI,OAAO,EAAE;oBAChC,OAAO,EAAE,YAAY;oBACrB,MAAM,EAAE,OAAO;iBAChB,CAAC,CAAC;aACJ;iBAAM;gBACL,GAAG,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;gBAC1C,GAAG,CAAC,eAAe,CAAC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAC5D;YAED,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC;QACH,mBAAC;IAAD,CAAC;IAnDqB,oCAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICAzB,sIAAgB;IAEzB,SAAgB,SAAS,CAAC,MAA8B;QACtD,MAAM,CAAC,eAAe,CAAC;YACrB,sBAA2C;SAC5C,CAAC,CAAC;IACL,CAAC;IAJD,8BAIC;;;;;;;;;;;;;;;;;;ICAD;QAAsC,4CAAwC;QAA9E;;QAmCA,CAAC;QAlCC,gCAAK,GAAL,UAAM,WAAoB;YACxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACrC,CAAC;QAED;;;WAGG;QACH,gCAAK,GAAL,UAAM,WAAoB;YACxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACrC,CAAC;QAED;;;WAGG;QACH,sCAAW,GAAX,UAAY,UAAmB;YAC7B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC1C,CAAC;QAED,mCAAQ,GAAR;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QAED,+CAAoB,GAApB;YAAA,iBASC;YARC,IAAM,OAAO,GAA4B;gBACvC,QAAQ,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAlC,CAAkC;gBAC3D,WAAW,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAArC,CAAqC;gBACjE,QAAQ,EAAE,cAAM,qCAAmB,CAAC,KAAI,CAAC,IAAI,CAAC,EAA9B,CAA8B;gBAC9C,0BAA0B,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,EAA7B,CAA6B;gBAC/E,4BAA4B,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,EAA/B,CAA+B;aACpF,CAAC;YACF,OAAO,IAAI,2CAA0B,CAAC,OAAO,CAAC,CAAC;QACjD,CAAC;QAlCU,gBAAgB;YAH5B,0BAAM,CAAC,OAAO,CAAC;YACf,iCAAa,CAAC,oBAAoB,CAAC;YACnC,2BAAO,CAAC,2BAA2B,CAAC;WACxB,gBAAgB,CAmC5B;QAAD,uBAAC;KAAA,CAnCqC,mBAAY,GAmCjD;IAnCY,4CAAgB;;;;;;;;;;;;;;ACR7B;AACA;AACA;AACA,sB;;;;;;;;;;;;;;;ICDS,6HAAa;IAEtB,SAAgB,SAAS,CAAC,MAA8B;QACtD,MAAM,CAAC,eAAe,CAAC;YACrB,mBAAwC;SACzC,CAAC,CAAC;IACL,CAAC;IAJD,8BAIC;;;;;;;;;;;;;;;;;;ICAD;QAAmC,yCAAqC;QAAxE;;QAkCA,CAAC;QAjCC;;WAEG;QACH,gCAAQ,GAAR;YACE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC7B,CAAC;QAED;;WAEG;QACH,kCAAU,GAAV;YACE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAC/B,CAAC;QAED;;;WAGG;QACH,uCAAe,GAAf,UAAgB,WAAmB;YACjC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QAC/C,CAAC;QAED,4CAAoB,GAApB;YAAA,iBAUC;YATC,IAAM,OAAO,GAAyB;gBACpC,QAAQ,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAlC,CAAkC;gBAC3D,WAAW,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAArC,CAAqC;gBACjE,QAAQ,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAvC,CAAuC;gBAChE,QAAQ,EAAE,UAAC,YAAY,EAAE,KAAK,IAAK,OAAC,KAAI,CAAC,IAAoB,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,EAAjE,CAAiE;gBACpG,oBAAoB,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,EAA7B,CAA6B;gBACzE,sBAAsB,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,EAA/B,CAA+B;aAC9E,CAAC;YACF,OAAO,IAAI,qCAAuB,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC;QAjCU,aAAa;YAHzB,0BAAM,CAAC,OAAO,CAAC;YACf,iCAAa,CAAC,iBAAiB,CAAC;YAChC,8BAAU,CAAC,+CAA+C,CAAC;WAC/C,aAAa,CAkCzB;QAAD,oBAAC;KAAA,CAlCkC,mBAAY,GAkC9C;IAlCY,sCAAa;;;;;;;;;;;;;;;;;;ICNjB,yIAAiB;IAE1B,SAAgB,SAAS,CAAC,MAA8B;QACtD,MAAM,CAAC,eAAe,CAAC;YACrB,uBAA4C;SAC7C,CAAC,CAAC;IACL,CAAC;IAJD,8BAIC;;;;;;;;;;;;;;;;;;ICAD;QAAuC,6CAAyC;QAAhF;;QA2CA,CAAC;QAxCO,sCAAU,GAAhB;;;;oBACQ,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAc,GAAG,GAAG,2CAA0B,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBACrG,IAAI,KAAK,EAAE;wBACT,KAAK,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBACtC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,4BAAU,CAAC,gBAAgB,CAAC,CAAC;wBACrD,qBAAqB,CAAC;4BACpB,KAAK,CAAC,KAAK,CAAC,kBAAkB,GAAG,EAAE,CAAC;wBACtC,CAAC,CAAC,CAAC;qBACJ;yBAAM;wBACL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,4BAAU,CAAC,QAAQ,CAAC,CAAC;qBAC9C;;;;SACF;QAED;;;WAGG;QACH,iCAAK,GAAL,UAAM,UAAkB;YACtB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC;QAED;;WAEG;QACH,sCAAU,GAAV;YACE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAC/B,CAAC;QAED,gDAAoB,GAApB;YAAA,iBAUC;YATC,sGAAsG;YACtG,yGAAyG;YACzG,IAAM,OAAO,GAA6B;gBACxC,QAAQ,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAlC,CAAkC;gBAC3D,WAAW,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAArC,CAAqC;gBACjE,qBAAqB,EAAE,UAAC,KAAK,IAAK,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,GAAG,IAAI,CAAC,EAA3D,CAA2D;gBAC7F,wBAAwB,EAAE,cAAM,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,EAAhD,CAAgD;aACjF,CAAC;YACF,OAAO,IAAI,6CAA2B,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC;QAzCU,iBAAiB;YAH7B,0BAAM,CAAC,OAAO,CAAC;YACf,2BAAO,CAAC,4BAA4B,CAAC;YACrC,iCAAa,CAAC,qBAAqB,CAAC;WACxB,iBAAiB,CA2C7B;QAAD,wBAAC;KAAA,CA3CsC,mBAAY,GA2ClD;IA3CY,8CAAiB;;;;;;;;;;;;;;ACR9B;AACA;AACA;AACA,sB;;;;;;;;;;;;;;;ICAS,0HAAY;IAErB,SAAgB,SAAS,CAAC,MAA8B;QACtD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,2BAAoB,CAAC,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC;QAErF,MAAM,CAAC,eAAe,CAAC;YACrB,kBAAuC;YACvC,uBAA4C;YAC5C,8BAAmD;YACnD,yDAA8E;YAC9E,oCAAyD;SAC1D,CAAC,CAAC;IACL,CAAC;IAVD,8BAUC;IAED,IAAM,eAAe,GAAG;QACtB,OAAO,EAAE,gBAAgB;QACzB,UAAU,EAAE;YACV,KAAK,EAAE;gBACL,kBAAkB,EAAE,+BAAW,CAAC,MAAM;gBACtC,WAAW,EAAX,UAAY,OAAgB;oBAC1B,OAAO,IAAI,0CAAsB,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,mCAAe,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;gBAChG,CAAC;aACF;SACF;KACF,CAAC;;;;;;;;;;;;;;;;;;;ICVF;;;;;OAKG;IACH,IAAM,uBAAuB,GAAG,GAAG,CAAC;IAMpC;QAAkC,wCAAoC;QACpE,sBAAY,IAAiB;YAA7B,YACE,kBAAM,IAAI,CAAC,SAEZ;YAeD,QAAE,GAAW,EAAE,cAAY,CAAC,EAAE,CAAC;YAW/B,oEAAoE;YAC5D,0BAAoB,GAAW,CAAC,CAAC;YA5BvC,6BAA6B,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;;QAC3C,CAAC;yBAJU,YAAY;QAMhB,2BAAc,GAArB,UAAsB,aAA2B,EAAE,UAAyB,EAAE,OAAgB,EAAE,YAAiC;YAC/H,IAAM,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,MAAI,oCAAc,CAAC,SAAS,UAAK,oCAAc,CAAC,OAAO,MAAG,CAAC,CAAC;YACtG,IAAI,WAAW,EAAE;gBACf,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;aAClD;YACD,IAAM,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC,MAAI,oCAAc,CAAC,SAAS,UAAK,oCAAc,CAAC,QAAQ,MAAG,CAAC,CAAC;YACxG,IAAI,YAAY,EAAE;gBAChB,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;aACpD;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QAoCD,sBAAI,+BAAK;iBAAT;gBACE,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;iBACnC;qBAAM;oBACL,OAAO,IAAI,CAAC,YAAY,CAAC;iBAC1B;YACH,CAAC;iBACD,UAAU,KAAa;gBACrB,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;wBACxC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;wBACtC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;qBAC/B;iBACF;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC3B;YACH,CAAC;;;WAVA;QAYK,iCAAU,GAAhB;;;;;;;4BACE,IAAI,CAAC,YAAY,SAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAA2B,MAAI,oCAAc,CAAC,SAAS,UAAK,oCAAc,CAAC,OAAO,MAAG,CAAC,0CAAE,EAAE,CAAC,qBAAqB,EAAE,SAAS,CAAC;4BACvK,IAAI,CAAC,aAAa,SAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAA2B,MAAI,oCAAc,CAAC,SAAS,UAAK,oCAAc,CAAC,QAAQ,MAAG,CAAC,0CAAE,EAAE,CAAC,qBAAqB,EAAE,SAAS,CAAC;4BACzK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,UAAC,EAAE,EAAE,UAAU,IAAK,WAAI,kBAAS,CAAC,EAAE,EAAE,UAAU,CAAC,EAA7B,CAA6B,CAAC,CAAC;4BAC9E,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;iCAC7C,aAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,MAAK,sBAAU,CAAC,WAAW,CAAC,WAAW,EAAE,GAA7D,wBAA6D;4BAC/D,IAAI,CAAC,WAAW,SAAG,WAAW,CAAC,aAAa,CAAiC,6BAAiB,CAAC,aAAa,CAAC,0CAAE,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC;4BACvI,IAAI,CAAC,iBAAiB,SAAG,WAAW,CAAC,aAAa,CAAuC,iCAAqB,CAAC,aAAa,CAAC,0CAAE,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC;4BACvJ,qBAAM,OAAO,CAAC,GAAG,CAAC,OAAC,IAAI,CAAC,WAAW,0CAAE,WAAW,QAAE,IAAI,CAAC,iBAAiB,0CAAE,WAAW,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,EAAD,CAAC,CAAC,CAAC;;4BAAtG,SAAsG,CAAC;;;;;;SAE1G;QAEK,+BAAQ,GAAd;;;;gCACE,qBAAM,iBAAM,QAAQ,WAAE;;4BAAtB,SAAsB,CAAC;4BACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;;;;;SACnD;QAED,8BAAO,GAAP;;YACE,UAAI,CAAC,MAAM,0CAAE,OAAO,GAAG;QACzB,CAAC;QAED,2CAAoB,GAApB;YACE,IAAM,OAAO,4FACR,IAAI,CAAC,sBAAsB,EAAE,GAC7B,IAAI,CAAC,uBAAuB,EAAE,GAC9B,IAAI,CAAC,uBAAuB,EAAE,GAC9B,IAAI,CAAC,4BAA4B,EAAE,GACnC,IAAI,CAAC,yBAAyB,EAAE,CACpC,CAAC;YACF,OAAO,IAAI,kCAAsB,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;QACvE,CAAC;QAEO,6CAAsB,GAA9B;YAAA,iBAoBC;YAnBC,OAAO;gBACL,QAAQ,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAlC,CAAkC;gBAC3D,WAAW,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAArC,CAAqC;gBACjE,QAAQ,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAvC,CAAuC;gBAChE,mCAAmC,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,EAA7B,CAA6B;gBACxF,qCAAqC,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,EAA/B,CAA+B;gBAC5F,wCAAwC,EAAE,UAAC,OAAO;oBAChD,IAAM,iBAAiB,GAAG,UAAC,aAA+B;wBACxD,OAAO,aAAa;6BACjB,GAAG,CAAC,UAAC,QAAQ,IAAK,eAAQ,CAAC,aAAa,EAAtB,CAAsB,CAAC;6BACzC,MAAM,CAAC,UAAC,aAAa,IAAK,oBAAa,EAAb,CAAa,CAAa,CAAC;oBAC1D,CAAC,CAAC;oBACF,IAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,UAAC,aAAa,IAAK,cAAO,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,EAAzC,CAAyC,CAAC,CAAC;oBACpG,IAAM,MAAM,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;oBACpC,QAAQ,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;oBACtC,OAAO,QAAQ,CAAC;gBAClB,CAAC;gBACD,0CAA0C,EAAE,UAAC,QAAQ,IAAK,eAAQ,CAAC,UAAU,EAAE,EAArB,CAAqB;aAChF,CAAC;QACJ,CAAC;QAEO,8CAAuB,GAA/B;YAAA,iBAOC;YANC,OAAO;gBACL,cAAc,EAAE,cAAM,YAAI,CAAC,MAAM,EAAX,CAAW;gBACjC,SAAS,EAAE,cAAM,eAAQ,CAAC,aAAa,KAAK,KAAI,CAAC,MAAM,EAAtC,CAAsC;gBACvD,+BAA+B,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,qBAAY,EAAE,CAAC,EAA9D,CAA8D;gBACrH,iCAAiC,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,qBAAY,EAAE,CAAC,EAAjE,CAAiE;aAC3H,CAAC;QACJ,CAAC;QAEO,8CAAuB,GAA/B;YAAA,iBAQC;YAPC,OAAO;gBACL,UAAU,EAAE,UAAC,WAAW,IAAK,YAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,EAA7C,CAA6C;gBAC1E,aAAa,EAAE,cAAM,YAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAxC,CAAwC;gBAC7D,QAAQ,EAAE,cAAM,cAAO,CAAC,KAAI,CAAC,MAAM,CAAC,EAApB,CAAoB;gBACpC,UAAU,EAAE,UAAC,WAAW,IAAK,YAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,EAA7C,CAA6C;gBAC1E,gBAAgB,EAAE,UAAC,UAAU,IAAK,YAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,EAAlD,CAAkD;aACrF,CAAC;QACJ,CAAC;QAEO,mDAA4B,GAApC;YAAA,iBAMC;YALC,OAAO;gBACL,kBAAkB,EAAE,cAAM,YAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAA/C,CAA+C;gBACzE,oBAAoB,EAAE,cAAM,YAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAjD,CAAiD;gBAC7E,4BAA4B,EAAE,UAAC,WAAW,IAAK,YAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,WAAW,CAAC,EAAjE,CAAiE;aACjH,CAAC;QACJ,CAAC;QAEO,gDAAyB,GAAjC;YAAA,iBAMC;YALC,OAAO;gBACL,YAAY,EAAE,cAAM,YAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,EAA3C,CAA2C;gBAC/D,UAAU,EAAE,cAAM,cAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,EAAtB,CAAsB;gBACxC,YAAY,EAAE,UAAC,UAAU,IAAK,YAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,EAAhD,CAAgD;aAC/E,CAAC;QACJ,CAAC;QAED;;WAEG;QACK,wCAAiB,GAAzB;YACE,OAAO;gBACL,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS;gBACpG,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS;gBAClF,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS;gBACrF,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS;aACzF,CAAC;QACJ,CAAC;QAEO,oCAAa,GAArB,UAAsB,aAA+B;YAArD,iBAkBC;YAjBC,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAU,CAAC,QAAQ,CAAC,CAAC;YACrE,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAU,CAAC,QAAQ,CAAC,CAAC;YAErE,IAAI,UAAU,IAAI,UAAU,EAAE;gBAC5B,OAAO,IAAI,CAAC;aACb;YAED,sGAAsG;YACtG,yGAAyG;YACzG,IAAM,OAAO,yCACR,kBAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAChC,eAAe,EAAE,cAAM,eAAQ,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,EAAE,SAAS,CAAC,EAAxC,CAAwC,EAC/D,0BAA0B,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,qBAAY,EAAE,CAAC,EAA9D,CAA8D,EAChH,4BAA4B,EAAE,UAAC,OAAO,EAAE,OAAO;oBAC7C,YAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,qBAAY,EAAE,CAAC;gBAAjE,CAAiE,GACpE,CAAC;YACF,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,4BAAmB,CAAC,OAAO,CAAC,CAAC,CAAC;QACpE,CAAC;QAED,yCAAkB,GAAlB,UAAmB,GAA4B;YAC7C,IAAI,GAAG,YAAY,UAAU,EAAE;gBAC7B,IAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,oBAAoB,GAAG,uBAAuB,CAAC;gBAEvH,IAAI,gBAAgB,EAAE;oBACpB,OAAO;iBACR;aACF;iBAAM;gBACL,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;aACxC;YAED,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,8BAAO,GAAP,UAAQ,GAAU;YAChB,IAAM,KAAK,GAAS,GAAG,CAAC,MAAO,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC;QAEK,8BAAO,GAAb;;;;gCACE,qBAAM,IAAI,CAAC,WAAW;;4BAAtB,SAAsB,CAAC;4BACvB,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;;;;;SACjC;QAED,+BAAQ,GAAR,UAAS,GAAU;YACjB,IAAM,KAAK,GAAI,GAAG,CAAC,MAA2B,CAAC,KAAK,CAAC;YACrD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAChC,CAAC;QAED,6BAAM,GAAN;YACE,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;QACpC,CAAC;QAED,4BAAK,GAAL;YACE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC;QAED,2BAAI,GAAJ;YACE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC;;QAvNM,eAAE,GAAG,CAAC,CAAC;QAgBd;YADC,0CAAQ;mDACK;QAGd;YADC,0CAAQ,CAAC,WAAW;sDACH;QAGlB;YADC,0CAAQ,CAAC,MAAM;uDACE;QAGlB;YADC,0CAAQ;oDACM;QAGf;YADC,0CAAQ;oDACM;QAGf;YADC,0CAAQ,CAAC,WAAW;sDACH;QAjDP,YAAY;YAJxB,0BAAM,CAAC,OAAO,CAAC;YACf,2BAAO,CAAC,uBAAuB,CAAC;YAChC,iCAAa,CAAC,gBAAgB,CAAC;YAC/B,kCAAc,CAAC,cAAY,CAAC,cAAc,CAAC;WAC/B,YAAY,CA0OxB;QAAD,mBAAC;KAAA,CA1OiC,mBAAY,GA0O7C;IA1OY,oCAAY;IAoPzB,SAAS,6BAA6B,CAAC,OAAoB;QACzD,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC/B,KAAK,EAAE;gBACL,GAAG,EAAH;oBACE,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC5C,CAAC;gBACD,GAAG,EAAH,UAAgC,KAAU;oBACxC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC7C,CAAC;gBACD,YAAY,EAAE,IAAI;aACnB;YACD,KAAK,EAAE;gBACL,KAAK,EAAL;oBACE,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvC,CAAC;gBACD,YAAY,EAAE,IAAI;aACnB;YACD,IAAI,EAAE;gBACJ,KAAK,EAAL;oBACE,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBACtC,CAAC;gBACD,YAAY,EAAE,IAAI;aACnB;SACF,CAAC,CAAC;IACL,CAAC;IAAA,CAAC;;;;;;;;;;;;;;;;;;IClSF;QAAkD,wDAAoD;QAAtG;;QAgBA,CAAC;QAdC,sBAAI,gEAAsB;YAD1B,gDAAgD;iBAChD;gBACE,OAAO,IAAI,CAAC,UAAU,CAAC;YACzB,CAAC;;;WAAA;QAED,2DAAoB,GAApB;YAAA,iBASC;YARC,sGAAsG;YACtG,yGAAyG;YACzG,IAAM,OAAO,GAAwC;gBACnD,UAAU,EAAE,UAAC,OAAO;oBAClB,KAAI,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;gBAClC,CAAC;aACF,CAAC;YACF,OAAO,IAAI,kDAAsC,CAAC,OAAO,CAAC,CAAC;QAC7D,CAAC;QAfU,4BAA4B;YAHxC,0BAAM,CAAC,OAAO,CAAC;YACf,8BAAU,CAAC,uBAAoB,oCAAwB,CAAC,IAAI,mBAAe,CAAC;YAC5E,iCAAa,CAAC,oCAAwB,CAAC,IAAI,CAAC;WAChC,4BAA4B,CAgBxC;QAAD,mCAAC;KAAA,CAhBiD,mBAAY,GAgB7D;IAhBY,oEAA4B;;;;;;;;;;;;;;;;;;ICFzC;QAAA;QAEA,CAAC;QAFY,sBAAsB;YAHlC,0BAAM,CAAC,OAAO,CAAC;YACf,8BAAU,CAAC,uEAAuE,CAAC;YACnF,iCAAa,CAAC,4BAA4B,CAAC;WAC/B,sBAAsB,CAElC;QAAD,6BAAC;KAAA;IAFY,wDAAsB;;;;;;;;;;;;;;;;;;ICGnC;QAA4C,kDAA8C;QAA1F;YAAA,qEA6BC;YA5BC,0BAAoB,GAAG,gCAAoB,CAAC;;QA4B9C,CAAC;QAnBC,sBAAI,0DAAsB;YAD1B,gDAAgD;iBAChD;gBACE,OAAO,IAAI,CAAC,UAAU,CAAC;YACzB,CAAC;;;WAAA;QAED,qDAAoB,GAApB;YAAA,iBAcC;YAbC,sGAAsG;YACtG,yGAAyG;YACzG,IAAM,OAAO,GAAkC;gBAC7C,QAAQ,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAlC,CAAkC;gBAC3D,WAAW,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAArC,CAAqC;gBACjE,QAAQ,EAAE,UAAC,SAAS,IAAK,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAvC,CAAuC;gBAChE,OAAO,EAAE,UAAC,IAAI,EAAE,KAAK,IAAK,YAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,EAAnC,CAAmC;gBAC7D,UAAU,EAAE,UAAC,IAAI,IAAK,YAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAA/B,CAA+B;gBACrD,UAAU,EAAE,UAAC,OAAO;oBAClB,KAAI,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;gBAClC,CAAC;aACF,CAAC;YACF,OAAO,IAAI,4CAAgC,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC;QAxBD;YADC,0CAAQ,CAAC,WAAW;kEACD;QAGpB;YADC,0CAAQ,CAAC,WAAW;kEACD;QAPT,sBAAsB;YAHlC,0BAAM,CAAC,OAAO,CAAC;YACf,2BAAO,CAAC,mCAAmC,CAAC;YAC5C,iCAAa,CAAC,gCAAoB,CAAC,IAAI,CAAC;WAC5B,sBAAsB,CA6BlC;QAAD,6BAAC;KAAA,CA7B2C,mBAAY,GA6BvD;IA7BY,wDAAsB;;;;;;;;;;;;;;ACRnC;AACA,gCAAgC,0BAA0B,GAAG,6DAA6D,GAAG,iEAAiE;AAC9L;AACA,sB;;;;;;;;;;;;;;;ICCa,sBAAc,GAAG;QAC5B,SAAS,EAAE,qBAAqB;QAChC,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE,UAAU;KACrB,CAAC;IAIF;QAAsC,4CAAwC;QAA9E;;QAkCA,CAAC;QAjCO,qCAAU,GAAhB;;;oBACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,0BAAc,CAAC,IAAI,CAAC,CAAC;oBAC7C,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,sBAAc,CAAC,OAAO,CAAC,EAAE;wBAClD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAI,0BAAc,CAAC,IAAI,UAAK,sBAAc,CAAC,OAAS,CAAC,CAAC;qBAC9E;oBACD,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,sBAAc,CAAC,QAAQ,CAAC,EAAE;wBACnD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAI,0BAAc,CAAC,IAAI,UAAK,sBAAc,CAAC,QAAU,CAAC,CAAC;qBAC/E;;;;SACF;QAGD,sBAAI,oDAAsB;YAD1B,gDAAgD;iBAChD;gBACE,OAAO,IAAI,CAAC,UAAU,CAAC;YACzB,CAAC;;;WAAA;QAED,+CAAoB,GAApB;YAAA,iBAgBC;YAfC,sGAAsG;YACtG,yGAAyG;YACzG,IAAM,OAAO,GAA4B;gBACvC,OAAO,EAAE,UAAC,IAAI,IAAK,YAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAA5B,CAA4B;gBAC/C,OAAO,EAAE,UAAC,IAAI,EAAE,KAAK,IAAK,YAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,EAAnC,CAAmC;gBAC7D,UAAU,EAAE,UAAC,IAAI,IAAK,YAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAA/B,CAA+B;gBACrD,UAAU,EAAE,UAAC,OAAO;oBAClB,KAAI,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;gBAClC,CAAC;gBACD,0BAA0B,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,EAA7B,CAA6B;gBAC/E,4BAA4B,EAAE,UAAC,OAAO,EAAE,OAAO,IAAK,YAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,EAA/B,CAA+B;gBACnF,gBAAgB,EAAE,cAAM,YAAI,CAAC,IAAI,CAC/B,sCAA0B,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,EADnE,CACmE;aAC5F,CAAC;YACF,OAAO,IAAI,sCAA0B,CAAC,OAAO,CAAC,CAAC;QACjD,CAAC;QAhCU,gBAAgB;YAF5B,0BAAM,CAAC,OAAO,CAAC;YACf,mCAAe,CAAC,sBAAc,CAAC,SAAS,CAAC;WAC7B,gBAAgB,CAkC5B;QAAD,uBAAC;KAAA,CAlCqC,mBAAY,GAkCjD;IAlCY,4CAAgB;;;;;;;;;;;;;;ACZ7B;AACA,kEAAkE,iCAAiC,GAAG,wDAAwD,GAAG,0DAA0D,kQAAkQ,OAAO,8eAA8e,OAAO,iJAAiJ,MAAM,kRAAkR,MAAM;AACx4C;AACA,sB;;;;;;;;;;;ACHA;AACA,kCAAkC,mBAAO,CAAC,kGAAyC;AACnF;AACA;AACA,cAAc,QAAS,iSAAiS,uCAAuC,wCAAwC,oCAAoC,wIAAwI,oBAAoB,mFAAmF,qBAAqB,sFAAsF,+BAA+B,mGAAmG,6BAA6B,0GAA0G,sFAAsF,4BAA4B,gGAAgG,uBAAuB,6BAA6B,wDAAwD,uCAAuC,yBAAyB,qBAAqB,4BAA4B,wBAAwB,iBAAiB,qBAAqB,+CAA+C,+GAA+G,uGAAuG,6JAA6J,GAAG,+DAA+D,8BAA8B,gCAAgC,yDAAyD,wCAAwC,uCAAuC,GAAG,sCAAsC,iBAAiB,GAAG,0CAA0C,sCAAsC,uCAAuC,mBAAmB,GAAG,iGAAiG,oCAAoC,uCAAuC,GAAG,sCAAsC,qDAAqD,qDAAqD,GAAG,gCAAgC,6EAA6E,6EAA6E,GAAG,sEAAsE,QAAQ,gFAAgF,gFAAgF,KAAK,SAAS,kFAAkF,kFAAkF,iFAAiF,iFAAiF,KAAK,SAAS,0FAA0F,0FAA0F,kFAAkF,kFAAkF,KAAK,UAAU,gFAAgF,gFAAgF,KAAK,GAAG,8DAA8D,QAAQ,gFAAgF,gFAAgF,KAAK,SAAS,kFAAkF,kFAAkF,iFAAiF,iFAAiF,KAAK,SAAS,0FAA0F,0FAA0F,kFAAkF,kFAAkF,KAAK,UAAU,gFAAgF,gFAAgF,KAAK,GAAG;AACpiK;AACA;;;;;;;;;;;;ACNA;AACA,kCAAkC,mBAAO,CAAC,kGAAyC;AACnF;AACA;AACA,cAAc,QAAS,kSAAkS,kBAAkB,uBAAuB,WAAW,aAAa,YAAY,2BAA2B,gBAAgB,oBAAoB,iBAAiB,sCAAsC,yBAAyB,GAAG,iEAAiE,uCAAuC,GAAG,8FAA8F,2BAA2B,iBAAiB,0BAA0B,6BAA6B,yBAAyB,GAAG,iCAAiC,4CAA4C,wCAAwC,gBAAgB,GAAG,mFAAmF,uCAAuC,6CAA6C,GAAG,kCAAkC,uCAAuC,6CAA6C,iBAAiB,GAAG,qFAAqF,4CAA4C,wCAAwC,GAAG,+BAA+B,mBAAmB,gBAAgB,qCAAqC,GAAG,4CAA4C,0BAA0B,uBAAuB,oBAAoB,GAAG,yDAAyD,wBAAwB,GAAG,mEAAmE,iCAAiC,GAAG,+DAA+D,qCAAqC,wCAAwC,qBAAqB,GAAG,2IAA2I,uCAAuC,sCAAsC,GAAG,gEAAgE,eAAe,GAAG;AAClzE;AACA;;;;;;;;;;;;ACNA;AACA,kCAAkC,mBAAO,CAAC,kGAAyC;AACnF;AACA;AACA,cAAc,QAAS,iSAAiS,uCAAuC,wCAAwC,oCAAoC,wIAAwI,oBAAoB,mFAAmF,qBAAqB,sFAAsF,+BAA+B,mGAAmG,6BAA6B,0GAA0G,sFAAsF,4BAA4B,gGAAgG,uBAAuB,6BAA6B,wDAAwD,uCAAuC,yBAAyB,qBAAqB,4BAA4B,wBAAwB,iBAAiB,qBAAqB,+CAA+C,+GAA+G,uGAAuG,6JAA6J,GAAG,+DAA+D,8BAA8B,gCAAgC,yDAAyD,wCAAwC,uCAAuC,GAAG,sCAAsC,iBAAiB,GAAG,0CAA0C,sCAAsC,uCAAuC,mBAAmB,GAAG,iGAAiG,oCAAoC,uCAAuC,GAAG,sCAAsC,qDAAqD,qDAAqD,GAAG,gCAAgC,6EAA6E,6EAA6E,GAAG,sEAAsE,QAAQ,gFAAgF,gFAAgF,KAAK,SAAS,kFAAkF,kFAAkF,iFAAiF,iFAAiF,KAAK,SAAS,0FAA0F,0FAA0F,kFAAkF,kFAAkF,KAAK,UAAU,gFAAgF,gFAAgF,KAAK,GAAG,8DAA8D,QAAQ,gFAAgF,gFAAgF,KAAK,SAAS,kFAAkF,kFAAkF,iFAAiF,iFAAiF,KAAK,SAAS,0FAA0F,0FAA0F,kFAAkF,kFAAkF,KAAK,UAAU,gFAAgF,gFAAgF,KAAK,GAAG,qDAAqD,uBAAuB,cAAc,YAAY,gBAAgB,+BAA+B,kBAAkB,GAAG,4BAA4B,6BAA6B,eAAe,GAAG,2BAA2B,iCAAiC,iCAAiC,6BAA6B,eAAe,eAAe,GAAG,2BAA2B,iHAAiH,yGAAyG,+JAA+J,GAAG,qCAAqC,iCAAiC,iCAAiC,eAAe,GAAG,2CAA2C,eAAe,GAAG,0BAA0B,kBAAkB,uBAAuB,WAAW,aAAa,YAAY,2BAA2B,gBAAgB,oBAAoB,iBAAiB,sCAAsC,yBAAyB,GAAG,iEAAiE,uCAAuC,GAAG,8FAA8F,2BAA2B,iBAAiB,0BAA0B,6BAA6B,yBAAyB,GAAG,iCAAiC,4CAA4C,wCAAwC,gBAAgB,GAAG,mFAAmF,uCAAuC,6CAA6C,GAAG,kCAAkC,uCAAuC,6CAA6C,iBAAiB,GAAG,qFAAqF,4CAA4C,wCAAwC,GAAG,+BAA+B,mBAAmB,gBAAgB,qCAAqC,GAAG,4CAA4C,0BAA0B,uBAAuB,oBAAoB,GAAG,yDAAyD,wBAAwB,GAAG,mEAAmE,iCAAiC,GAAG,+DAA+D,qCAAqC,wCAAwC,qBAAqB,GAAG,2IAA2I,uCAAuC,sCAAsC,GAAG,gEAAgE,eAAe,GAAG,gDAAgD,UAAU,sEAAsE,sEAAsE,qFAAqF,qFAAqF,KAAK,QAAQ,+GAA+G,+GAA+G,KAAK,GAAG,wCAAwC,UAAU,sEAAsE,sEAAsE,qFAAqF,qFAAqF,KAAK,QAAQ,+GAA+G,+GAA+G,KAAK,GAAG,+CAA+C,UAAU,gDAAgD,gDAAgD,iBAAiB,KAAK,QAAQ,+CAA+C,KAAK,GAAG,uCAAuC,UAAU,gDAAgD,gDAAgD,iBAAiB,KAAK,QAAQ,+CAA+C,KAAK,GAAG,gDAAgD,UAAU,gDAAgD,gDAAgD,+CAA+C,KAAK,QAAQ,iBAAiB,KAAK,GAAG,wCAAwC,UAAU,gDAAgD,gDAAgD,+CAA+C,KAAK,QAAQ,iBAAiB,KAAK,GAAG,2BAA2B,4BAA4B,yBAAyB,wBAAwB,6BAA6B,qCAAqC,uCAAuC,kDAAkD,GAAG,oHAAoH,uBAAuB,uBAAuB,eAAe,yBAAyB,kBAAkB,GAAG,2DAA2D,kEAAkE,eAAe,GAAG,+EAA+E,4DAA4D,4DAA4D,GAAG,8EAA8E,WAAW,6BAA6B,gCAAgC,gCAAgC,4CAA4C,4CAA4C,GAAG,yFAAyF,kCAAkC,qDAAqD,GAAG,qGAAqG,sGAAsG,sGAAsG,GAAG,uGAAuG,uDAAuD,uDAAuD,6GAA6G,6GAA6G,GAAG,oHAAoH,0BAA0B,4CAA4C,gBAAgB,iBAAiB,GAAG,8EAA8E,2CAA2C,4CAA4C,GAAG,6BAA6B,uBAAuB,WAAW,YAAY,gBAAgB,iBAAiB,yBAAyB,GAAG,qBAAqB,gCAAgC,iCAAiC,kCAAkC,iCAAiC,oBAAoB,yBAAyB,0BAA0B,uBAAuB,2BAA2B,qBAAqB,+DAA+D,GAAG,sEAAsE,8BAA8B,GAAG,yEAAyE,+BAA+B,GAAG,cAAc,sGAAsG,iCAAiC,KAAK,iGAAiG,iCAAiC,KAAK,kGAAkG,iCAAiC,KAAK,wFAAwF,iCAAiC,KAAK,GAAG,cAAc,iGAAiG,iCAAiC,KAAK,GAAG,0CAA0C,yBAAyB,uEAAuE,GAAG,4GAA4G,8BAA8B,GAAG,qMAAqM,8BAA8B,GAAG,iFAAiF,+BAA+B,GAAG,kFAAkF,+BAA+B,GAAG,iFAAiF,8BAA8B,GAAG,iFAAiF,8BAA8B,GAAG,uCAAuC,aAAa,wCAAwC,wCAAwC,yBAAyB,GAAG,qDAAqD,qCAAqC,yCAAyC,GAAG,2HAA2H,wCAAwC,sCAAsC,GAAG,sDAAsD,wCAAwC,sCAAsC,GAAG,6HAA6H,qCAAqC,yCAAyC,GAAG,wFAAwF,qCAAqC,sCAAsC,GAAG,iMAAiM,qCAAqC,sCAAsC,GAAG,4BAA4B,uCAAuC,wCAAwC,oCAAoC,wIAAwI,oBAAoB,mFAAmF,qBAAqB,sFAAsF,+BAA+B,mGAAmG,6BAA6B,0GAA0G,sFAAsF,4BAA4B,gGAAgG,iBAAiB,2DAA2D,gBAAgB,iBAAiB,iBAAiB,qBAAqB,qBAAqB,6BAA6B,6BAA6B,6BAA6B,eAAe,GAAG,qCAAqC,kBAAkB,GAAG,gCAAgC,kBAAkB,GAAG,kCAAkC,qBAAqB,GAAG,2CAA2C,6BAA6B,GAAG,cAAc,uDAAuD,4DAA4D,iBAAiB,KAAK,kDAAkD,4DAA4D,iBAAiB,KAAK,mDAAmD,4DAA4D,iBAAiB,KAAK,yCAAyC,4DAA4D,iBAAiB,KAAK,GAAG,cAAc,kDAAkD,4DAA4D,iBAAiB,KAAK,GAAG,cAAc,2OAA2O,6BAA6B,iCAAiC,iBAAiB,KAAK,4NAA4N,6BAA6B,iCAAiC,iBAAiB,KAAK,+NAA+N,6BAA6B,iCAAiC,iBAAiB,KAAK,iMAAiM,6BAA6B,iCAAiC,iBAAiB,KAAK,GAAG,cAAc,4NAA4N,6BAA6B,iCAAiC,iBAAiB,KAAK,GAAG,4BAA4B,uCAAuC,wCAAwC,oCAAoC,wIAAwI,oBAAoB,mFAAmF,qBAAqB,sFAAsF,+BAA+B,mGAAmG,6BAA6B,0GAA0G,sFAAsF,4BAA4B,gGAAgG,iBAAiB,2DAA2D,eAAe,wBAAwB,GAAG,4GAA4G,eAAe,GAAG,oCAAoC,qCAAqC,wCAAwC,GAAG,qFAAqF,uCAAuC,sCAAsC,GAAG,+DAA+D,qCAAqC,yCAAyC,GAAG,+IAA+I,wCAAwC,sCAAsC,GAAG,oCAAoC,wCAAwC,sCAAsC,GAAG,qFAAqF,qCAAqC,yCAAyC,GAAG,+DAA+D,uCAAuC,sCAAsC,GAAG,+IAA+I,qCAAqC,wCAAwC,GAAG,mEAAmE,oDAAoD,oDAAoD,iBAAiB,GAAG,6BAA6B,iBAAiB,GAAG,oHAAoH,0CAA0C,GAAG,iEAAiE,kBAAkB,GAAG,4LAA4L,8BAA8B,kBAAkB,GAAG,mCAAmC,0BAA0B,aAAa,iBAAiB,kBAAkB,sBAAsB,GAAG,0DAA0D,iCAAiC,GAAG,mFAAmF,6CAA6C,GAAG,yFAAyF,6CAA6C,GAAG,mDAAmD,iCAAiC,+EAA+E,GAAG,+CAA+C,gCAAgC,oCAAoC,GAAG,+GAA+G,mCAAmC,iCAAiC,GAAG,4DAA4D,qDAAqD,qDAAqD,GAAG,2EAA2E,iBAAiB,GAAG,wEAAwE,kBAAkB,GAAG,4DAA4D,kBAAkB,GAAG,+BAA+B,iBAAiB,sBAAsB,GAAG,8DAA8D,qDAAqD,qDAAqD,GAAG,8DAA8D,uBAAuB,GAAG,wLAAwL,wDAAwD,wDAAwD,GAAG,wLAAwL,oBAAoB,GAAG,wDAAwD,wFAAwF,wFAAwF,GAAG,+EAA+E,QAAQ,mFAAmF,mFAAmF,KAAK,SAAS,kFAAkF,kFAAkF,oFAAoF,oFAAoF,KAAK,SAAS,0FAA0F,0FAA0F,qFAAqF,qFAAqF,KAAK,UAAU,mFAAmF,mFAAmF,KAAK,GAAG,uEAAuE,QAAQ,mFAAmF,mFAAmF,KAAK,SAAS,kFAAkF,kFAAkF,oFAAoF,oFAAoF,KAAK,SAAS,0FAA0F,0FAA0F,qFAAqF,qFAAqF,KAAK,UAAU,mFAAmF,mFAAmF,KAAK,GAAG,oDAAoD,iBAAiB,GAAG,2QAA2Q,sCAAsC,GAAG,sbAAsb,sCAAsC,GAAG,mVAAmV,0BAA0B,wEAAwE,GAAG,gFAAgF,iDAAiD,gDAAgD,mDAAmD,oDAAoD,GAAG,iLAAiL,+CAA+C,kDAAkD,qDAAqD,kDAAkD,GAAG,iFAAiF,+CAA+C,kDAAkD,qDAAqD,kDAAkD,GAAG,mLAAmL,iDAAiD,gDAAgD,mDAAmD,oDAAoD,GAAG,uFAAuF,qBAAqB,GAAG,wHAAwH,kBAAkB,GAAG,iDAAiD,+BAA+B,oCAAoC,GAAG,mHAAmH,mCAAmC,gCAAgC,GAAG,oDAAoD,kBAAkB,4BAA4B,kCAAkC,GAAG,+BAA+B,2BAA2B,wBAAwB,gBAAgB,iBAAiB,eAAe,qBAAqB,GAAG,iDAAiD,cAAc,GAAG,uFAAuF,4BAA4B,4BAA4B,GAAG,oDAAoD,iBAAiB,iBAAiB,uBAAuB,uBAAuB,qBAAqB,2BAA2B,iBAAiB,oBAAoB,wBAAwB,GAAG,4DAA4D,kBAAkB,GAAG,qFAAqF,wDAAwD,wDAAwD,GAAG,+EAA+E,oFAAoF,oFAAoF,GAAG,2EAA2E,QAAQ,mFAAmF,mFAAmF,KAAK,SAAS,kFAAkF,kFAAkF,oFAAoF,oFAAoF,KAAK,SAAS,0FAA0F,0FAA0F,qFAAqF,qFAAqF,KAAK,UAAU,mFAAmF,mFAAmF,KAAK,GAAG,mEAAmE,QAAQ,mFAAmF,mFAAmF,KAAK,SAAS,kFAAkF,kFAAkF,oFAAoF,oFAAoF,KAAK,SAAS,0FAA0F,0FAA0F,qFAAqF,qFAAqF,KAAK,UAAU,mFAAmF,mFAAmF,KAAK,GAAG,2EAA2E,qBAAqB,uBAAuB,GAAG,oGAAoG,qBAAqB,wBAAwB,GAAG,gHAAgH,mBAAmB,GAAG,uFAAuF,qDAAqD,qDAAqD,GAAG,uFAAuF,uBAAuB,GAAG,0OAA0O,wDAAwD,wDAAwD,GAAG,0OAA0O,oBAAoB,GAAG,iFAAiF,sFAAsF,sFAAsF,GAAG,6EAA6E,QAAQ,mFAAmF,mFAAmF,KAAK,SAAS,kFAAkF,kFAAkF,oFAAoF,oFAAoF,KAAK,SAAS,0FAA0F,0FAA0F,qFAAqF,qFAAqF,KAAK,UAAU,mFAAmF,mFAAmF,KAAK,GAAG,qEAAqE,QAAQ,mFAAmF,mFAAmF,KAAK,SAAS,kFAAkF,kFAAkF,oFAAoF,oFAAoF,KAAK,SAAS,0FAA0F,0FAA0F,qFAAqF,qFAAqF,KAAK,UAAU,mFAAmF,mFAAmF,KAAK,GAAG,6EAA6E,qBAAqB,wBAAwB,GAAG,0EAA0E,cAAc,GAAG,0FAA0F,uBAAuB,GAAG,qGAAqG,yBAAyB,oBAAoB,GAAG,4GAA4G,0BAA0B,aAAa,iBAAiB,kBAAkB,0BAA0B,GAAG,6GAA6G,kBAAkB,GAAG,8BAA8B,wBAAwB,yBAAyB,2BAA2B,iBAAiB,qBAAqB,oBAAoB,qBAAqB,mCAAmC,gCAAgC,2BAA2B,kDAAkD,0DAA0D,qBAAqB,iBAAiB,GAAG,oDAAoD,wCAAwC,wCAAwC,GAAG,gKAAgK,uCAAuC,uCAAuC,GAAG,sDAAsD,yDAAyD,yDAAyD,GAAG,6HAA6H,wDAAwD,wDAAwD,GAAG,oKAAoK,uDAAuD,uDAAuD,GAAG,4WAA4W,wDAAwD,wDAAwD,GAAG,gCAAgC,eAAe,gBAAgB,GAAG,sFAAsF,6CAA6C,GAAG,gFAAgF,6CAA6C,GAAG,6DAA6D,kBAAkB,GAAG,oFAAoF,iBAAiB,GAAG,iFAAiF,kBAAkB,GAAG,qEAAqE,kBAAkB,GAAG,wLAAwL,kBAAkB,GAAG,4FAA4F,kCAAkC,GAAG,gFAAgF,qBAAqB,GAAG,mFAAmF,iCAAiC,gCAAgC,oCAAoC,GAAG,mLAAmL,mCAAmC,iCAAiC,GAAG,8FAA8F,+CAA+C,GAAG,mFAAmF,gCAAgC,oCAAoC,GAAG,uLAAuL,mCAAmC,iCAAiC,GAAG,+HAA+H,iCAAiC,GAAG,gGAAgG,uEAAuE,uEAAuE,GAAG,iNAAiN,sEAAsE,sEAAsE,GAAG,gGAAgG,uBAAuB,GAAG,4PAA4P,0EAA0E,0EAA0E,GAAG,4hBAA4hB,yEAAyE,yEAAyE,GAAG,4PAA4P,oBAAoB,GAAG,0FAA0F,qGAAqG,qGAAqG,GAAG,4FAA4F,QAAQ,qFAAqF,qFAAqF,KAAK,SAAS,kFAAkF,kFAAkF,sFAAsF,sFAAsF,KAAK,SAAS,0FAA0F,0FAA0F,uFAAuF,uFAAuF,KAAK,UAAU,qFAAqF,qFAAqF,KAAK,GAAG,oFAAoF,QAAQ,qFAAqF,qFAAqF,KAAK,SAAS,kFAAkF,kFAAkF,sFAAsF,sFAAsF,KAAK,SAAS,0FAA0F,0FAA0F,uFAAuF,uFAAuF,KAAK,UAAU,qFAAqF,qFAAqF,KAAK,GAAG,qMAAqM,qGAAqG,qGAAqG,GAAG,gGAAgG,QAAQ,sFAAsF,sFAAsF,KAAK,SAAS,kFAAkF,kFAAkF,uFAAuF,uFAAuF,KAAK,SAAS,0FAA0F,0FAA0F,wFAAwF,wFAAwF,KAAK,UAAU,sFAAsF,sFAAsF,KAAK,GAAG,wFAAwF,QAAQ,sFAAsF,sFAAsF,KAAK,SAAS,kFAAkF,kFAAkF,uFAAuF,uFAAuF,KAAK,SAAS,0FAA0F,0FAA0F,wFAAwF,wFAAwF,KAAK,UAAU,sFAAsF,sFAAsF,KAAK,GAAG,oFAAoF,iCAAiC,GAAG,+FAA+F,+CAA+C,GAAG,gIAAgI,iCAAiC,GAAG,sHAAsH,iCAAiC,GAAG,iIAAiI,+CAA+C,GAAG,iCAAiC,kBAAkB,mCAAmC,2BAA2B,GAAG,iDAAiD,wBAAwB,uBAAuB,GAAG,+CAA+C,2BAA2B,GAAG,iFAAiF,kCAAkC,GAAG,2KAA2K,sBAAsB,GAAG,uIAAuI,eAAe,GAAG,+GAA+G,qBAAqB,GAAG,wIAAwI,mBAAmB,GAAG,4FAA4F,iCAAiC,6EAA6E,GAAG,mFAAmF,iCAAiC,6EAA6E,GAAG,+EAA+E,mBAAmB,+DAA+D,GAAG,6JAA6J,mBAAmB,+DAA+D,GAAG,mDAAmD,yBAAyB,qEAAqE,GAAG,2FAA2F,mBAAmB,+DAA+D,GAAG,oFAAoF,iCAAiC,6EAA6E,GAAG,wQAAwQ,0BAA0B,sEAAsE,GAAG,mbAAmb,0BAA0B,sEAAsE,GAAG,gVAAgV,0BAA0B,sEAAsE,GAAG,sGAAsG,eAAe,GAAG,+BAA+B,yBAAyB,GAAG,oDAAoD,+BAA+B,GAAG,cAAc,iFAAiF,iCAAiC,KAAK,4EAA4E,iCAAiC,KAAK,6EAA6E,iCAAiC,KAAK,mEAAmE,iCAAiC,KAAK,GAAG,cAAc,4EAA4E,iCAAiC,KAAK,GAAG,iDAAiD,+BAA+B,GAAG,uFAAuF,+BAA+B,GAAG,2JAA2J,+BAA+B,GAAG,4DAA4D,8BAA8B,GAAG,6DAA6D,8BAA8B,GAAG,4DAA4D,+BAA+B,GAAG,4DAA4D,+BAA+B,GAAG,sDAAsD,6CAA6C,GAAG,8KAA8K,sCAAsC,GAAG,iDAAiD,iFAAiF,sBAAsB,KAAK,4EAA4E,sBAAsB,KAAK,6EAA6E,sBAAsB,KAAK,mEAAmE,sBAAsB,KAAK,GAAG,iDAAiD,4EAA4E,sBAAsB,KAAK,GAAG,iDAAiD,mDAAmD,sBAAsB,KAAK,GAAG,iDAAiD,yFAAyF,sBAAsB,KAAK,GAAG,iDAAiD,6JAA6J,sBAAsB,KAAK,GAAG,iDAAiD,8DAA8D,sBAAsB,KAAK,GAAG,iDAAiD,+DAA+D,sBAAsB,KAAK,GAAG,iDAAiD,8DAA8D,sBAAsB,KAAK,GAAG,iDAAiD,8DAA8D,sBAAsB,KAAK,GAAG,iDAAiD,wDAAwD,oCAAoC,KAAK,GAAG,iDAAiD,gLAAgL,6BAA6B,KAAK,GAAG,iDAAiD,oBAAoB,GAAG,oDAAoD,8BAA8B,GAAG,4EAA4E,kBAAkB,GAAG,oDAAoD,yBAAyB,GAAG,yDAAyD,uCAAuC,GAAG,+HAA+H,sCAAsC,GAAG,oPAAoP,oCAAoC,GAAG,yIAAyI,qCAAqC,wCAAwC,GAAG,yIAAyI,wCAAwC,sCAAsC,GAAG,yIAAyI,aAAa,GAAG,yIAAyI,aAAa,GAAG,yHAAyH,aAAa,GAAG,yIAAyI,aAAa,GAAG,2IAA2I,aAAa,GAAG,iLAAiL,uCAAuC,GAAG,iMAAiM,yCAAyC,GAAG,iMAAiM,uCAAuC,GAAG,iCAAiC,uCAAuC,wCAAwC,oCAAoC,sIAAsI,uBAAuB,oFAAoF,yBAAyB,wFAAwF,qBAAqB,oFAAoF,mCAAmC,qGAAqG,6BAA6B,wGAAwG,oFAAoF,4BAA4B,8FAA8F,mBAAmB,kBAAkB,4CAA4C,cAAc,eAAe,yBAAyB,2DAA2D,GAAG,uCAAuC,0BAA0B,aAAa,iBAAiB,kBAAkB,sBAAsB,GAAG,6CAA6C,qBAAqB,eAAe,yBAAyB,GAAG,uCAAuC,uCAAuC,wCAAwC,oCAAoC,sIAAsI,uBAAuB,oFAAoF,yBAAyB,wFAAwF,qBAAqB,oFAAoF,mCAAmC,qGAAqG,6BAA6B,wGAAwG,oFAAoF,4BAA4B,8FAA8F,mBAAmB,kBAAkB,4CAA4C,uCAAuC,qCAAqC,wCAAwC,sCAAsC,wBAAwB,GAAG,6CAA6C,0BAA0B,aAAa,iBAAiB,kBAAkB,sBAAsB,GAAG,2FAA2F,oCAAoC,wCAAwC,GAAG,2FAA2F,qCAAqC,yCAAyC,GAAG,2BAA2B,uBAAuB,oBAAoB,GAAG,iFAAiF,oBAAoB,yBAAyB,GAAG,6BAA6B,mBAAmB,GAAG,oCAAoC,uCAAuC,uCAAuC,GAAG,qFAAqF,sCAAsC,wCAAwC,GAAG,qCAAqC,uCAAuC,wCAAwC,GAAG,uFAAuF,uCAAuC,wCAAwC,GAAG;AACrziE;AACA;;;;;;;;;;;;;;;;ICNA;QACE;YAEA,UAAK,GAAG,KAAK,CAAC;QAFE,CAAC;QAGnB,UAAC;IAAD,CAAC;IAJY,kBAAG;;;;;;;;;;;;;;ACAhB;AACA,6gCAA6gC,MAAM;AACnhC;AACA,sB;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAA8C;;AAE9C,eAAe,yDAAoB;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA,C;;;;;;;;;;;;AC9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACQ;AACjB;AACkH;AAC9G;AACQ;;AAEpD;AACA,EAAE,+CAAG;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA,gCAAgC,oDAAQ;AACxC,sCAAsC,sEAAS;AAC/C,sCAAsC,gEAAa;AACnD;AACA,kBAAkB,yDAAuB;AACzC;AACA;;AAEA;AACA,sBAAsB,qDAAM;AAC5B,sBAAsB,gEAAa;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,kEAAe;AACrD;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,+CAAG,uCAAuC,kCAAkC;AAC5F,MAAM,+CAAG;AACT;AACA,KAAK;AACL;;AAEA,6BAA6B;AAC7B,2CAA2C,+CAAG;;AAE9C;AACA,sCAAsC,mEAAgB;AACtD,kCAAkC,2GAA2G;AAC7I;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oCAAoC,mEAAgB;AACpD,yCAAyC,yEAAsB;AAC/D;;AAEA;AACA;AACA,eAAe,mEAAc;AAC7B,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,+CAAG;AACrB,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,2DAAQ;AAChC;AACA,oCAAoC,+CAAG;AACvC;;AAEA;AACA,cAAc,+CAAG,wCAAwC,kCAAkC;AAC3F,qBAAqB,+CAAG;AACxB;AACA;;AAEA,eAAe,yDAAuB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,cAAc;AAC/C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,gFAAgF;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,4CAA4C,cAAc;AAC1D,SAAS;AACT;;AAEA;AACA,oCAAoC,cAAc;AAClD,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,6DAAU;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,KAAK,IAAI,IAAI,KAAK,KAAK;AAC3C;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAoD;AAC5E;;AAEA;AACA,wBAAwB,wCAAwC,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yDAAI;AACvB;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA,8BAA8B,uEAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,gFAAgF;AAChG;AACA;AACA,gBAAgB,8CAA8C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sEAAsE;AACxF;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,wDAAsB;;AAEjD;AACA,iBAAiB,wDAAsB;AACvC;;AAEA;AACA;AACA;AACA,UAAU,2DAAyB;AACnC,UAAU,wDAAsB;AAChC,SAAS;AACT,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAE6C;AACb;AACC;AACE;AACJ;AACI;AACN;AACD;;AAErB,mBAAmB,4CAAa,C;;;;;;;;;;;;ACnevC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACE;;AAE5C;AACA,uBAAuB;AACvB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAG;AACf;AACA;AACA;AACA,QAAQ,+CAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oDAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,uDAAO;AACpC;AACA;AACA;AACA;AACA,wBAAwB,oDAAQ;AAChC,uBAAuB,oDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,GAAG,YAAY;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE,+CAAG;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAQ;AAChB,QAAQ,oDAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO,EAAE,UAAU;AACrC;AACA,wBAAwB,kCAAkC,KAAK;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,EAAE,+CAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAG;AACX;AACA;AACA;AACA,oCAAoC;AACpC,aAAa,yBAAyB;AACtC;AACA,8CAA8C,SAAS,EAAE,OAAO,EAAE,KAAK;AACvE;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS,IAAI,SAAS,EAAE,uBAAuB;AAC7D;;AAEA;AACA;AACA,sBAAsB,uDAAO;AAC7B;AACA;;AAEsE;AACtE;;;;;;;;;;;;;;;;AC3PO;AACP;AACA,4BAA4B,UAAU;AACtC;;AAEA;AACA,0BAA0B,UAAU;AACpC;;AAEA;AACA,0BAA0B,UAAU;AACpC;;AAEA;AACA,4BAA4B,UAAU;AACtC;AACA,E;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;;AAEpD;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6CAA6C,cAAc;AAC3D;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEO;AACP,MAAM,yDAAa;AACnB;AACA;;AAEA,EAAE,iEAAa;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL,GAAG;AACH,C;;;;;;;;;;;;AChjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE8C;AAC4N;AAChM;;AAEnE;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iEAAS;AACpB;AACA,CAAC,mBAAmB,2DAAW;;AAExB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,yDAAoB;AACxB,GAAG;AACH;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,QAAQ;AACnD,sCAAsC,EAAE;AACxC,yBAAyB,2DAAW;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA,0BAA0B,EAAE;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;;AAEO,wCAAwC,mEAAW;AAC1D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,2DAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,2DAAW;AACjC,MAAM,6EAAqB;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO,0BAA0B,mEAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,6DAAa;AACjC;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,6EAAqB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6FAA6F,2DAAW;AACxG;AACA,wGAAwG,2DAAW;AACnH;AACA;;AAEO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,yDAAoB;AACxB;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,2DAAW;AACxB;;AAEA,wIAAwI,2DAAW;AACnJ;AACA;;AAEA,WAAW,2DAAW;AACtB;;AAEA;AACA,6CAA6C,sEAAmB;;AAEhE,gDAAgD,iEAAiB;;AAEjE;AACA;;AAEA;AACA,eAAe,kEAAkB,sEAAsE,kEAAkB;AACzH;;AAEA;AACA,eAAe,kEAAkB,sEAAsE,kEAAkB;AACzH;;AAEA;AACA,eAAe,kEAAkB,sEAAsE,kEAAkB;AACzH;;AAEA;AACA,6CAA6C,sEAAmB;;AAEhE,gDAAgD,8DAAc;;AAE9D;AACA;;AAEA;AACA,6CAA6C,sEAAmB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,QAAQ;AAC9C;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,sEAAmB;;AAE5D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,uCAAuC,iEAAiB,6DAA6D,2DAAW;;AAEhI;AACA;;AAEA;AACA,6CAA6C,sEAAmB;;AAEhE,gDAAgD,iEAAiB,iHAAiH,2DAAW;;AAE7L;AACA;;AAEA;AACA,6CAA6C,sEAAmB;;AAEhE,gDAAgD,iEAAiB,iHAAiH,2DAAW;;AAE7L;AACA;;AAEA;AACA,6CAA6C,sEAAmB;;AAEhE,gDAAgD,iEAAiB,iHAAiH,2DAAW;;AAE7L;AACA;;AAEA;AACA,6CAA6C,sEAAmB;;AAEhE,gDAAgD,iEAAiB,iHAAiH,2DAAW;;AAE7L;AACA;AACA,CAAC,oBAAoB,sDAAM,EAAE,+DAAe,EAAE,4DAAY;;AAE1D;;AAEA;;AAEO,4FAA4F,kEAAe;;AAElH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,8DAAc;AAC5C;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4BAA4B,8DAAc;AAC1C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,qJAAqJ,2DAAW;AAChK;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2CAA2C,sEAAmB;AAC9D;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,yDAAoB,gFAAgF,SAAS,iBAAiB,SAAS;AACjJ;AACA;AACA,iEAAiE,iEAAS;AAC1E,OAAO;AACP,mBAAmB,iEAAS;AAC5B;AACA;AACA,UAAU,yDAAoB,+FAA+F,SAAS,QAAQ,UAAU,QAAQ,SAAS,IAAI,EAAE,WAAW;AAC1L;AACA;AACA;AACA,SAAS;AACT,iFAAiF,6DAAa;AAC9F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0FAA0F,2DAAW;AACrG;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA,SAAS,qBAAqB;AAC9B;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,oBAAoB,sDAAM,EAAE,+DAAe;;AAErC;AACP,qCAAqC,kEAAe;AACpD,iCAAiC,kEAAe;AAChD,C;;;;;;;;;;;;AC3yBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AAChC;AACI;AACmM;AACP;AAC/L;AACJ;AACM;AACL;;AAEzC;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAG,UAAU,sEAAS,EAAE,oEAAiB,EAAE,2DAAQ,EAAE,gEAAa,EAAE,4DAAS;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,yDAAM;AACV,IAAI,wEAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mEAAQ,EAAE,wBAAwB;AACtC;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,0EAAe;AACnB,IAAI,qEAAkB;AACtB,IAAI,2EAAM,CAAC,mEAAgB,EAAE,2DAAQ;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0EAAe;AACnB,IAAI,qEAAkB;AACtB,IAAI,2EAAM,CAAC,mEAAgB,EAAE,2DAAQ;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6EAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0EAAe;AACnB,IAAI,qEAAkB;AACtB,IAAI,2EAAM,CAAC,mEAAgB,EAAE,2DAAQ;AACrC;;AAEA,gBAAgB,2DAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,UAAU,qBAAqB;AAC/B;AACA;AACA;AACA;AACA;AACA,0BAA0B,6EAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+DAAe;AAChD;AACA;AACA,iCAAiC,8DAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+DAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6DAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD,qBAAqB,6BAA6B;AAClD,gBAAgB,mEAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sBAAsB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sCAAsC;AACvD,aAAa,+BAA+B;AAC5C,iBAAiB,sCAAsC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,2DAAQ;AACZ;AACA;AACA,IAAI,0EAAe;AACnB,IAAI,qEAAkB;AACtB,IAAI,2EAAM,CAAC,mEAAgB,EAAE,oEAAiB,EAAE,2DAAQ,EAAE,gEAAa,EAAE,+DAAe;AACxF;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,qBAAqB,EAAE,yBAAyB,EAAE;AAC/E;AACA,IAAI,+CAAG;AACP;AACA;AACA,QAAQ,mDAAO;AACf;AACA,QAAQ,+CAAG;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAG,UAAU,2DAAQ,EAAE,qEAAQ,IAAI,+CAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0EAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAG,UAAU,2DAAQ,EAAE,qEAAQ,IAAI,+CAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0EAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iEAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sEAAc;AAClB,IAAI,2EAAM;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0EAAe;AACnB,IAAI,qEAAkB;AACtB,IAAI,2EAAM,CAAC,mEAAgB,EAAE,2DAAQ;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAG,UAAU,4DAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,+CAAG;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,0EAAe,UAAU,2DAAW;AACxC;;AAEA;AACA;AACA;AACA,6DAA6D,QAAQ;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAc;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qDAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAG;AACnB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAG;AACf;AACA,iBAAiB,mDAAO;AACxB,4BAA4B,+CAAG;AAC/B;AACA;AACA;AACA,YAAY,+CAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mEAAQ;AAChB;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,qEAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2DAAW;AAC/B;AACA;AACA;AACA,IAAI,8DAAK;AACT,IAAI,uEAAe;AACnB;AACA;AACA;AACA,oBAAoB,2DAAW;AAC/B;AACA;AACA;AACA,IAAI,8DAAK;AACT,IAAI,uEAAe;AACnB;AACA;AACA;AACA,oBAAoB,2DAAW;AAC/B;AACA;AACA;AACA,IAAI,8DAAK;AACT,IAAI,uEAAe;AACnB;AACA;AACA;AACA,oBAAoB,2DAAW;AAC/B;AACA;AACA;AACA,IAAI,8DAAK;AACT,IAAI,uEAAe;AACnB;AACA;AACA;AACA,oBAAoB,2DAAW;AAC/B;AACA;AACA;AACA,IAAI,8DAAK;AACT,IAAI,uEAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,2DAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2DAAW,oBAAoB,2DAAW,YAAY,6DAAa,GAAG,6DAAa;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6DAAa;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2DAAW,4BAA4B,2DAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+DAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uEAAe;AACnB;;AAEA,gCAAgC,iDAAiD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wEAAa;AACrB,QAAQ,kEAAO;AACf;AACA,8CAA8C,QAAQ;AACtD,QAAQ,mEAAQ;AAChB;AACA;AACA;AACA,YAAY,uEAAY,EAAE,eAAe;AACzC;AACA;AACA,YAAY,uEAAY,EAAE,iBAAiB;AAC3C;AACA;AACA,YAAY,uEAAY;AACxB;AACA;AACA;AACA;AACA,YAAY,iEAAS;AACrB,+FAA+F,iBAAiB;AAChH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,6DAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gCAAgC,iDAAiD;AACzG,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,6DAAU;AACpD;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAE4sB;AAC5sB;;;;;;;;;;;;;AC/yDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACtB;AACI;AAC4I;AACjI;AACD;AACtB;AACU;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAAG,UAAU,sEAAS,EAAE,2DAAQ,EAAE,qDAAM,EAAE,8DAAW,EAAE,yEAAsB,EAAE,oEAAiB;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sEAAmB;AAC5E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iEAAc,oBAAoB,iEAAc;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAS;AACzB;AACA;AACA,0CAA0C,6EAAqB;AAC/D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAAU;AACV;AACA;AACA;AACA,oCAAoC,0DAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mEAAc,WAAW,uDAAM;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qDAAM;AACjD,sCAAsC,qDAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,oEAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wEAAa;AACjB,IAAI,kEAAO;AACX;AACA;;AAEA,eAAe,iEAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAM,EAAE,+CAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uEAAuE;AAChF,SAAS,iDAAiD;AAC1D;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,0DAAW;AAC9B,mBAAmB,qDAAM,EAAE,wDAAS;AACpC;AACA,mCAAmC,qDAAM,EAAE,wDAAS;AACpD;;AAEmE;AACnE;;;;;;;;;;;;;;;;IC5XA,SAAsB,SAAS,CAAC,OAAgB;;;;;wBAC9C,OAAO;6BACJ,GAAG;6BACH,kBAAkB,EAAE;6BACpB,qBAAqB,EAAE;6BACvB,MAAM,CAAC,iCAAsD,CAAC;6BAC9D,MAAM,CAAC,8BAAmD,CAAC;6BAC3D,MAAM,CAAC,kCAAuD,CAAC;6BAC/D,MAAM,CAAC,6BAAkD,CAAC,CAAC;wBAE9D,qBAAM,OAAO,CAAC,KAAK,EAAE;;wBAArB,SAAqB,CAAC;wBACtB,qBAAM,OAAO,CAAC,OAAO,CAAC,KAA0B,CAAC;;wBAAjD,SAAiD,CAAC;;;;;KACnD;IAZD,8BAYC","file":"app.26a61f893ec49b3f2152.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __read, __spread } from \"tslib\";\nimport { MDCFoundation } from './foundation';\nvar MDCComponent = /** @class */ (function () {\n    function MDCComponent(root, foundation) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        this.root = root;\n        this.initialize.apply(this, __spread(args));\n        // Note that we initialize foundation here and not within the constructor's default param so that\n        // this.root_ is defined and can be used within the foundation class.\n        this.foundation =\n            foundation === undefined ? this.getDefaultFoundation() : foundation;\n        this.foundation.init();\n        this.initialSyncWithDOM();\n    }\n    MDCComponent.attachTo = function (root) {\n        // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n        // returns an instantiated component with its root set to that element. Also note that in the cases of\n        // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n        // from getDefaultFoundation().\n        return new MDCComponent(root, new MDCFoundation({}));\n    };\n    /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */\n    MDCComponent.prototype.initialize = function () {\n        var _args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _args[_i] = arguments[_i];\n        }\n        // Subclasses can override this to do any additional setup work that would be considered part of a\n        // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n        // initialized. Any additional arguments besides root and foundation will be passed in here.\n    };\n    MDCComponent.prototype.getDefaultFoundation = function () {\n        // Subclasses must override this method to return a properly configured foundation class for the\n        // component.\n        throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n            'foundation class');\n    };\n    MDCComponent.prototype.initialSyncWithDOM = function () {\n        // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n        // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n        // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n        // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n    };\n    MDCComponent.prototype.destroy = function () {\n        // Subclasses may implement this method to release any resources / deregister any listeners they have\n        // attached. An example of this might be deregistering a resize event from the window object.\n        this.foundation.destroy();\n    };\n    MDCComponent.prototype.listen = function (evtType, handler, options) {\n        this.root.addEventListener(evtType, handler, options);\n    };\n    MDCComponent.prototype.unlisten = function (evtType, handler, options) {\n        this.root.removeEventListener(evtType, handler, options);\n    };\n    /**\n     * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n     */\n    MDCComponent.prototype.emit = function (evtType, evtData, shouldBubble) {\n        if (shouldBubble === void 0) { shouldBubble = false; }\n        var evt;\n        if (typeof CustomEvent === 'function') {\n            evt = new CustomEvent(evtType, {\n                bubbles: shouldBubble,\n                detail: evtData,\n            });\n        }\n        else {\n            evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n        }\n        this.root.dispatchEvent(evt);\n    };\n    return MDCComponent;\n}());\nexport { MDCComponent };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCComponent;\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCFoundation = /** @class */ (function () {\n    function MDCFoundation(adapter) {\n        if (adapter === void 0) { adapter = {}; }\n        this.adapter = adapter;\n    }\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"strings\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"numbers\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n        get: function () {\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n            // validation.\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCFoundation.prototype.init = function () {\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    };\n    MDCFoundation.prototype.destroy = function () {\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    };\n    return MDCFoundation;\n}());\nexport { MDCFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Determine whether the current browser supports passive event listeners, and\n * if so, use them.\n */\nexport function applyPassive(globalObj) {\n    if (globalObj === void 0) { globalObj = window; }\n    return supportsPassiveOption(globalObj) ?\n        { passive: true } :\n        false;\n}\nfunction supportsPassiveOption(globalObj) {\n    if (globalObj === void 0) { globalObj = window; }\n    // See\n    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n    var passiveSupported = false;\n    try {\n        var options = {\n            // This function will be called when the browser\n            // attempts to access the passive property.\n            get passive() {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        var handler = function () { };\n        globalObj.document.addEventListener('test', handler, options);\n        globalObj.document.removeEventListener('test', handler, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n    return passiveSupported;\n}\n//# sourceMappingURL=events.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\nexport function closest(element, selector) {\n    if (element.closest) {\n        return element.closest(selector);\n    }\n    var el = element;\n    while (el) {\n        if (matches(el, selector)) {\n            return el;\n        }\n        el = el.parentElement;\n    }\n    return null;\n}\nexport function matches(element, selector) {\n    var nativeMatches = element.matches\n        || element.webkitMatchesSelector\n        || element.msMatchesSelector;\n    return nativeMatches.call(element, selector);\n}\n/**\n * Used to compute the estimated scroll width of elements. When an element is\n * hidden due to display: none; being applied to a parent element, the width is\n * returned as 0. However, the element will have a true width once no longer\n * inside a display: none context. This method computes an estimated width when\n * the element is hidden or returns the true width when the element is visble.\n * @param {Element} element the element whose width to estimate\n */\nexport function estimateScrollWidth(element) {\n    // Check the offsetParent. If the element inherits display: none from any\n    // parent, the offsetParent property will be null (see\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n    // This check ensures we only clone the node when necessary.\n    var htmlEl = element;\n    if (htmlEl.offsetParent !== null) {\n        return htmlEl.scrollWidth;\n    }\n    var clone = htmlEl.cloneNode(true);\n    clone.style.setProperty('position', 'absolute');\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n    document.documentElement.appendChild(clone);\n    var scrollWidth = clone.scrollWidth;\n    document.documentElement.removeChild(clone);\n    return scrollWidth;\n}\n//# sourceMappingURL=ponyfill.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { estimateScrollWidth } from '@material/dom/ponyfill';\nimport { MDCFloatingLabelFoundation } from './foundation';\nvar MDCFloatingLabel = /** @class */ (function (_super) {\n    __extends(MDCFloatingLabel, _super);\n    function MDCFloatingLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCFloatingLabel.attachTo = function (root) {\n        return new MDCFloatingLabel(root);\n    };\n    /**\n     * Styles the label to produce the label shake for errors.\n     * @param shouldShake If true, shakes the label by adding a CSS class; otherwise, stops shaking by removing the class.\n     */\n    MDCFloatingLabel.prototype.shake = function (shouldShake) {\n        this.foundation.shake(shouldShake);\n    };\n    /**\n     * Styles the label to float/dock.\n     * @param shouldFloat If true, floats the label by adding a CSS class; otherwise, docks it by removing the class.\n     */\n    MDCFloatingLabel.prototype.float = function (shouldFloat) {\n        this.foundation.float(shouldFloat);\n    };\n    /**\n     * Styles the label as required.\n     * @param isRequired If true, adds an asterisk to the label, indicating that it is required.\n     */\n    MDCFloatingLabel.prototype.setRequired = function (isRequired) {\n        this.foundation.setRequired(isRequired);\n    };\n    MDCFloatingLabel.prototype.getWidth = function () {\n        return this.foundation.getWidth();\n    };\n    MDCFloatingLabel.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            getWidth: function () { return estimateScrollWidth(_this.root); },\n            registerInteractionHandler: function (evtType, handler) {\n                return _this.listen(evtType, handler);\n            },\n            deregisterInteractionHandler: function (evtType, handler) {\n                return _this.unlisten(evtType, handler);\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCFloatingLabelFoundation(adapter);\n    };\n    return MDCFloatingLabel;\n}(MDCComponent));\nexport { MDCFloatingLabel };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var cssClasses = {\n    LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n    LABEL_REQUIRED: 'mdc-floating-label--required',\n    LABEL_SHAKE: 'mdc-floating-label--shake',\n    ROOT: 'mdc-floating-label',\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses } from './constants';\nvar MDCFloatingLabelFoundation = /** @class */ (function (_super) {\n    __extends(MDCFloatingLabelFoundation, _super);\n    function MDCFloatingLabelFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCFloatingLabelFoundation.defaultAdapter), adapter)) || this;\n        _this.shakeAnimationEndHandler_ = function () { return _this.handleShakeAnimationEnd_(); };\n        return _this;\n    }\n    Object.defineProperty(MDCFloatingLabelFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFloatingLabelFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCFloatingLabelAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                getWidth: function () { return 0; },\n                registerInteractionHandler: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCFloatingLabelFoundation.prototype.init = function () {\n        this.adapter.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n    };\n    MDCFloatingLabelFoundation.prototype.destroy = function () {\n        this.adapter.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n    };\n    /**\n     * Returns the width of the label element.\n     */\n    MDCFloatingLabelFoundation.prototype.getWidth = function () {\n        return this.adapter.getWidth();\n    };\n    /**\n     * Styles the label to produce a shake animation to indicate an error.\n     * @param shouldShake If true, adds the shake CSS class; otherwise, removes shake class.\n     */\n    MDCFloatingLabelFoundation.prototype.shake = function (shouldShake) {\n        var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\n        if (shouldShake) {\n            this.adapter.addClass(LABEL_SHAKE);\n        }\n        else {\n            this.adapter.removeClass(LABEL_SHAKE);\n        }\n    };\n    /**\n     * Styles the label to float or dock.\n     * @param shouldFloat If true, adds the float CSS class; otherwise, removes float and shake classes to dock the label.\n     */\n    MDCFloatingLabelFoundation.prototype.float = function (shouldFloat) {\n        var _a = MDCFloatingLabelFoundation.cssClasses, LABEL_FLOAT_ABOVE = _a.LABEL_FLOAT_ABOVE, LABEL_SHAKE = _a.LABEL_SHAKE;\n        if (shouldFloat) {\n            this.adapter.addClass(LABEL_FLOAT_ABOVE);\n        }\n        else {\n            this.adapter.removeClass(LABEL_FLOAT_ABOVE);\n            this.adapter.removeClass(LABEL_SHAKE);\n        }\n    };\n    /**\n     * Styles the label as required.\n     * @param isRequired If true, adds an asterisk to the label, indicating that it is required.\n     */\n    MDCFloatingLabelFoundation.prototype.setRequired = function (isRequired) {\n        var LABEL_REQUIRED = MDCFloatingLabelFoundation.cssClasses.LABEL_REQUIRED;\n        if (isRequired) {\n            this.adapter.addClass(LABEL_REQUIRED);\n        }\n        else {\n            this.adapter.removeClass(LABEL_REQUIRED);\n        }\n    };\n    MDCFloatingLabelFoundation.prototype.handleShakeAnimationEnd_ = function () {\n        var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\n        this.adapter.removeClass(LABEL_SHAKE);\n    };\n    return MDCFloatingLabelFoundation;\n}(MDCFoundation));\nexport { MDCFloatingLabelFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFloatingLabelFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCLineRippleFoundation } from './foundation';\nvar MDCLineRipple = /** @class */ (function (_super) {\n    __extends(MDCLineRipple, _super);\n    function MDCLineRipple() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCLineRipple.attachTo = function (root) {\n        return new MDCLineRipple(root);\n    };\n    /**\n     * Activates the line ripple\n     */\n    MDCLineRipple.prototype.activate = function () {\n        this.foundation.activate();\n    };\n    /**\n     * Deactivates the line ripple\n     */\n    MDCLineRipple.prototype.deactivate = function () {\n        this.foundation.deactivate();\n    };\n    /**\n     * Sets the transform origin given a user's click location.\n     * The `rippleCenter` is the x-coordinate of the middle of the ripple.\n     */\n    MDCLineRipple.prototype.setRippleCenter = function (xCoordinate) {\n        this.foundation.setRippleCenter(xCoordinate);\n    };\n    MDCLineRipple.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            setStyle: function (propertyName, value) { return _this.root.style.setProperty(propertyName, value); },\n            registerEventHandler: function (evtType, handler) { return _this.listen(evtType, handler); },\n            deregisterEventHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCLineRippleFoundation(adapter);\n    };\n    return MDCLineRipple;\n}(MDCComponent));\nexport { MDCLineRipple };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n    LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\nexport { cssClasses };\n//# sourceMappingURL=constants.js.map","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../css-loader/dist/cjs.js!./mdc.line-ripple.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses } from './constants';\nvar MDCLineRippleFoundation = /** @class */ (function (_super) {\n    __extends(MDCLineRippleFoundation, _super);\n    function MDCLineRippleFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCLineRippleFoundation.defaultAdapter), adapter)) || this;\n        _this.transitionEndHandler_ = function (evt) { return _this.handleTransitionEnd(evt); };\n        return _this;\n    }\n    Object.defineProperty(MDCLineRippleFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCLineRippleFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCLineRippleAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                setStyle: function () { return undefined; },\n                registerEventHandler: function () { return undefined; },\n                deregisterEventHandler: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCLineRippleFoundation.prototype.init = function () {\n        this.adapter.registerEventHandler('transitionend', this.transitionEndHandler_);\n    };\n    MDCLineRippleFoundation.prototype.destroy = function () {\n        this.adapter.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n    };\n    MDCLineRippleFoundation.prototype.activate = function () {\n        this.adapter.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n        this.adapter.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n    };\n    MDCLineRippleFoundation.prototype.setRippleCenter = function (xCoordinate) {\n        this.adapter.setStyle('transform-origin', xCoordinate + \"px center\");\n    };\n    MDCLineRippleFoundation.prototype.deactivate = function () {\n        this.adapter.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    };\n    MDCLineRippleFoundation.prototype.handleTransitionEnd = function (evt) {\n        // Wait for the line ripple to be either transparent or opaque\n        // before emitting the animation end event\n        var isDeactivating = this.adapter.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n        if (evt.propertyName === 'opacity') {\n            if (isDeactivating) {\n                this.adapter.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n                this.adapter.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n            }\n        }\n    };\n    return MDCLineRippleFoundation;\n}(MDCFoundation));\nexport { MDCLineRippleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCLineRippleFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFloatingLabelFoundation } from '@material/floating-label/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCNotchedOutlineFoundation } from './foundation';\nvar MDCNotchedOutline = /** @class */ (function (_super) {\n    __extends(MDCNotchedOutline, _super);\n    function MDCNotchedOutline() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCNotchedOutline.attachTo = function (root) {\n        return new MDCNotchedOutline(root);\n    };\n    MDCNotchedOutline.prototype.initialSyncWithDOM = function () {\n        this.notchElement_ =\n            this.root.querySelector(strings.NOTCH_ELEMENT_SELECTOR);\n        var label = this.root.querySelector('.' + MDCFloatingLabelFoundation.cssClasses.ROOT);\n        if (label) {\n            label.style.transitionDuration = '0s';\n            this.root.classList.add(cssClasses.OUTLINE_UPGRADED);\n            requestAnimationFrame(function () {\n                label.style.transitionDuration = '';\n            });\n        }\n        else {\n            this.root.classList.add(cssClasses.NO_LABEL);\n        }\n    };\n    /**\n     * Updates classes and styles to open the notch to the specified width.\n     * @param notchWidth The notch width in the outline.\n     */\n    MDCNotchedOutline.prototype.notch = function (notchWidth) {\n        this.foundation.notch(notchWidth);\n    };\n    /**\n     * Updates classes and styles to close the notch.\n     */\n    MDCNotchedOutline.prototype.closeNotch = function () {\n        this.foundation.closeNotch();\n    };\n    MDCNotchedOutline.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            setNotchWidthProperty: function (width) {\n                return _this.notchElement_.style.setProperty('width', width + 'px');\n            },\n            removeNotchWidthProperty: function () {\n                return _this.notchElement_.style.removeProperty('width');\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCNotchedOutlineFoundation(adapter);\n    };\n    return MDCNotchedOutline;\n}(MDCComponent));\nexport { MDCNotchedOutline };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n    NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch',\n};\nvar numbers = {\n    // This should stay in sync with $mdc-notched-outline-padding * 2.\n    NOTCH_ELEMENT_PADDING: 8,\n};\nvar cssClasses = {\n    NO_LABEL: 'mdc-notched-outline--no-label',\n    OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n    OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',\n};\nexport { cssClasses, numbers, strings };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar MDCNotchedOutlineFoundation = /** @class */ (function (_super) {\n    __extends(MDCNotchedOutlineFoundation, _super);\n    function MDCNotchedOutlineFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCNotchedOutlineFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCNotchedOutlineFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCNotchedOutlineFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCNotchedOutlineFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCNotchedOutlineFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCNotchedOutlineAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                setNotchWidthProperty: function () { return undefined; },\n                removeNotchWidthProperty: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds the outline notched selector and updates the notch width calculated based off of notchWidth.\n     */\n    MDCNotchedOutlineFoundation.prototype.notch = function (notchWidth) {\n        var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\n        if (notchWidth > 0) {\n            notchWidth += numbers.NOTCH_ELEMENT_PADDING; // Add padding from left/right.\n        }\n        this.adapter.setNotchWidthProperty(notchWidth);\n        this.adapter.addClass(OUTLINE_NOTCHED);\n    };\n    /**\n     * Removes notched outline selector to close the notch in the outline.\n     */\n    MDCNotchedOutlineFoundation.prototype.closeNotch = function () {\n        var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\n        this.adapter.removeClass(OUTLINE_NOTCHED);\n        this.adapter.removeNotchWidthProperty();\n    };\n    return MDCNotchedOutlineFoundation;\n}(MDCFoundation));\nexport { MDCNotchedOutlineFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCNotchedOutlineFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { applyPassive } from '@material/dom/events';\nimport { matches } from '@material/dom/ponyfill';\nimport { MDCRippleFoundation } from './foundation';\nimport * as util from './util';\nvar MDCRipple = /** @class */ (function (_super) {\n    __extends(MDCRipple, _super);\n    function MDCRipple() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.disabled = false;\n        return _this;\n    }\n    MDCRipple.attachTo = function (root, opts) {\n        if (opts === void 0) { opts = { isUnbounded: undefined }; }\n        var ripple = new MDCRipple(root);\n        // Only override unbounded behavior if option is explicitly specified\n        if (opts.isUnbounded !== undefined) {\n            ripple.unbounded = opts.isUnbounded;\n        }\n        return ripple;\n    };\n    MDCRipple.createAdapter = function (instance) {\n        return {\n            addClass: function (className) { return instance.root.classList.add(className); },\n            browserSupportsCssVars: function () { return util.supportsCssVariables(window); },\n            computeBoundingRect: function () { return instance.root.getBoundingClientRect(); },\n            containsEventTarget: function (target) { return instance.root.contains(target); },\n            deregisterDocumentInteractionHandler: function (evtType, handler) {\n                return document.documentElement.removeEventListener(evtType, handler, applyPassive());\n            },\n            deregisterInteractionHandler: function (evtType, handler) {\n                return instance.root\n                    .removeEventListener(evtType, handler, applyPassive());\n            },\n            deregisterResizeHandler: function (handler) {\n                return window.removeEventListener('resize', handler);\n            },\n            getWindowPageOffset: function () {\n                return ({ x: window.pageXOffset, y: window.pageYOffset });\n            },\n            isSurfaceActive: function () { return matches(instance.root, ':active'); },\n            isSurfaceDisabled: function () { return Boolean(instance.disabled); },\n            isUnbounded: function () { return Boolean(instance.unbounded); },\n            registerDocumentInteractionHandler: function (evtType, handler) {\n                return document.documentElement.addEventListener(evtType, handler, applyPassive());\n            },\n            registerInteractionHandler: function (evtType, handler) {\n                return instance.root\n                    .addEventListener(evtType, handler, applyPassive());\n            },\n            registerResizeHandler: function (handler) {\n                return window.addEventListener('resize', handler);\n            },\n            removeClass: function (className) { return instance.root.classList.remove(className); },\n            updateCssVariable: function (varName, value) {\n                return instance.root.style.setProperty(varName, value);\n            },\n        };\n    };\n    Object.defineProperty(MDCRipple.prototype, \"unbounded\", {\n        get: function () {\n            return Boolean(this.unbounded_);\n        },\n        set: function (unbounded) {\n            this.unbounded_ = Boolean(unbounded);\n            this.setUnbounded_();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCRipple.prototype.activate = function () {\n        this.foundation.activate();\n    };\n    MDCRipple.prototype.deactivate = function () {\n        this.foundation.deactivate();\n    };\n    MDCRipple.prototype.layout = function () {\n        this.foundation.layout();\n    };\n    MDCRipple.prototype.getDefaultFoundation = function () {\n        return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n    };\n    MDCRipple.prototype.initialSyncWithDOM = function () {\n        var root = this.root;\n        this.unbounded = 'mdcRippleIsUnbounded' in root.dataset;\n    };\n    /**\n     * Closure Compiler throws an access control error when directly accessing a\n     * protected or private property inside a getter/setter, like unbounded above.\n     * By accessing the protected property inside a method, we solve that problem.\n     * That's why this function exists.\n     */\n    MDCRipple.prototype.setUnbounded_ = function () {\n        this.foundation.setUnbounded(Boolean(this.unbounded_));\n    };\n    return MDCRipple;\n}(MDCComponent));\nexport { MDCRipple };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var cssClasses = {\n    // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n    // given that it's an 'upgrade' to an existing component. That being said it is the root\n    // CSS class that all other CSS classes derive from.\n    BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n    FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n    FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n    ROOT: 'mdc-ripple-upgraded',\n    UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n};\nexport var strings = {\n    VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n    VAR_FG_SIZE: '--mdc-ripple-fg-size',\n    VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n    VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n    VAR_LEFT: '--mdc-ripple-left',\n    VAR_TOP: '--mdc-ripple-top',\n};\nexport var numbers = {\n    DEACTIVATION_TIMEOUT_MS: 225,\n    FG_DEACTIVATION_MS: 150,\n    INITIAL_ORIGIN_SCALE: 0.6,\n    PADDING: 10,\n    TAP_DELAY_MS: 300,\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nimport { getNormalizedEventCoords } from './util';\n// Activation events registered on the root element of each instance for activation\nvar ACTIVATION_EVENT_TYPES = [\n    'touchstart', 'pointerdown', 'mousedown', 'keydown',\n];\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nvar POINTER_DEACTIVATION_EVENT_TYPES = [\n    'touchend', 'pointerup', 'mouseup', 'contextmenu',\n];\n// simultaneous nested activations\nvar activatedTargets = [];\nvar MDCRippleFoundation = /** @class */ (function (_super) {\n    __extends(MDCRippleFoundation, _super);\n    function MDCRippleFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCRippleFoundation.defaultAdapter), adapter)) || this;\n        _this.activationAnimationHasEnded_ = false;\n        _this.activationTimer_ = 0;\n        _this.fgDeactivationRemovalTimer_ = 0;\n        _this.fgScale_ = '0';\n        _this.frame_ = { width: 0, height: 0 };\n        _this.initialSize_ = 0;\n        _this.layoutFrame_ = 0;\n        _this.maxRadius_ = 0;\n        _this.unboundedCoords_ = { left: 0, top: 0 };\n        _this.activationState_ = _this.defaultActivationState_();\n        _this.activationTimerCallback_ = function () {\n            _this.activationAnimationHasEnded_ = true;\n            _this.runDeactivationUXLogicIfReady_();\n        };\n        _this.activateHandler_ = function (e) { return _this.activate_(e); };\n        _this.deactivateHandler_ = function () { return _this.deactivate_(); };\n        _this.focusHandler_ = function () { return _this.handleFocus(); };\n        _this.blurHandler_ = function () { return _this.handleBlur(); };\n        _this.resizeHandler_ = function () { return _this.layout(); };\n        return _this;\n    }\n    Object.defineProperty(MDCRippleFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                browserSupportsCssVars: function () { return true; },\n                computeBoundingRect: function () { return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 }); },\n                containsEventTarget: function () { return true; },\n                deregisterDocumentInteractionHandler: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n                deregisterResizeHandler: function () { return undefined; },\n                getWindowPageOffset: function () { return ({ x: 0, y: 0 }); },\n                isSurfaceActive: function () { return true; },\n                isSurfaceDisabled: function () { return true; },\n                isUnbounded: function () { return true; },\n                registerDocumentInteractionHandler: function () { return undefined; },\n                registerInteractionHandler: function () { return undefined; },\n                registerResizeHandler: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                updateCssVariable: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCRippleFoundation.prototype.init = function () {\n        var _this = this;\n        var supportsPressRipple = this.supportsPressRipple_();\n        this.registerRootHandlers_(supportsPressRipple);\n        if (supportsPressRipple) {\n            var _a = MDCRippleFoundation.cssClasses, ROOT_1 = _a.ROOT, UNBOUNDED_1 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.addClass(ROOT_1);\n                if (_this.adapter.isUnbounded()) {\n                    _this.adapter.addClass(UNBOUNDED_1);\n                    // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n                    _this.layoutInternal_();\n                }\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.destroy = function () {\n        var _this = this;\n        if (this.supportsPressRipple_()) {\n            if (this.activationTimer_) {\n                clearTimeout(this.activationTimer_);\n                this.activationTimer_ = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n            }\n            if (this.fgDeactivationRemovalTimer_) {\n                clearTimeout(this.fgDeactivationRemovalTimer_);\n                this.fgDeactivationRemovalTimer_ = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n            }\n            var _a = MDCRippleFoundation.cssClasses, ROOT_2 = _a.ROOT, UNBOUNDED_2 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.removeClass(ROOT_2);\n                _this.adapter.removeClass(UNBOUNDED_2);\n                _this.removeCssVars_();\n            });\n        }\n        this.deregisterRootHandlers_();\n        this.deregisterDeactivationHandlers_();\n    };\n    /**\n     * @param evt Optional event containing position information.\n     */\n    MDCRippleFoundation.prototype.activate = function (evt) {\n        this.activate_(evt);\n    };\n    MDCRippleFoundation.prototype.deactivate = function () {\n        this.deactivate_();\n    };\n    MDCRippleFoundation.prototype.layout = function () {\n        var _this = this;\n        if (this.layoutFrame_) {\n            cancelAnimationFrame(this.layoutFrame_);\n        }\n        this.layoutFrame_ = requestAnimationFrame(function () {\n            _this.layoutInternal_();\n            _this.layoutFrame_ = 0;\n        });\n    };\n    MDCRippleFoundation.prototype.setUnbounded = function (unbounded) {\n        var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n        if (unbounded) {\n            this.adapter.addClass(UNBOUNDED);\n        }\n        else {\n            this.adapter.removeClass(UNBOUNDED);\n        }\n    };\n    MDCRippleFoundation.prototype.handleFocus = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    MDCRippleFoundation.prototype.handleBlur = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    /**\n     * We compute this property so that we are not querying information about the client\n     * until the point in time where the foundation requests it. This prevents scenarios where\n     * client-side feature-detection may happen too early, such as when components are rendered on the server\n     * and then initialized at mount time on the client.\n     */\n    MDCRippleFoundation.prototype.supportsPressRipple_ = function () {\n        return this.adapter.browserSupportsCssVars();\n    };\n    MDCRippleFoundation.prototype.defaultActivationState_ = function () {\n        return {\n            activationEvent: undefined,\n            hasDeactivationUXRun: false,\n            isActivated: false,\n            isProgrammatic: false,\n            wasActivatedByPointer: false,\n            wasElementMadeActive: false,\n        };\n    };\n    /**\n     * supportsPressRipple Passed from init to save a redundant function call\n     */\n    MDCRippleFoundation.prototype.registerRootHandlers_ = function (supportsPressRipple) {\n        var _this = this;\n        if (supportsPressRipple) {\n            ACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n                _this.adapter.registerInteractionHandler(evtType, _this.activateHandler_);\n            });\n            if (this.adapter.isUnbounded()) {\n                this.adapter.registerResizeHandler(this.resizeHandler_);\n            }\n        }\n        this.adapter.registerInteractionHandler('focus', this.focusHandler_);\n        this.adapter.registerInteractionHandler('blur', this.blurHandler_);\n    };\n    MDCRippleFoundation.prototype.registerDeactivationHandlers_ = function (evt) {\n        var _this = this;\n        if (evt.type === 'keydown') {\n            this.adapter.registerInteractionHandler('keyup', this.deactivateHandler_);\n        }\n        else {\n            POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n                _this.adapter.registerDocumentInteractionHandler(evtType, _this.deactivateHandler_);\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterRootHandlers_ = function () {\n        var _this = this;\n        ACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n            _this.adapter.deregisterInteractionHandler(evtType, _this.activateHandler_);\n        });\n        this.adapter.deregisterInteractionHandler('focus', this.focusHandler_);\n        this.adapter.deregisterInteractionHandler('blur', this.blurHandler_);\n        if (this.adapter.isUnbounded()) {\n            this.adapter.deregisterResizeHandler(this.resizeHandler_);\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterDeactivationHandlers_ = function () {\n        var _this = this;\n        this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n        POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n            _this.adapter.deregisterDocumentInteractionHandler(evtType, _this.deactivateHandler_);\n        });\n    };\n    MDCRippleFoundation.prototype.removeCssVars_ = function () {\n        var _this = this;\n        var rippleStrings = MDCRippleFoundation.strings;\n        var keys = Object.keys(rippleStrings);\n        keys.forEach(function (key) {\n            if (key.indexOf('VAR_') === 0) {\n                _this.adapter.updateCssVariable(rippleStrings[key], null);\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.activate_ = function (evt) {\n        var _this = this;\n        if (this.adapter.isSurfaceDisabled()) {\n            return;\n        }\n        var activationState = this.activationState_;\n        if (activationState.isActivated) {\n            return;\n        }\n        // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n        var previousActivationEvent = this.previousActivationEvent_;\n        var isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n        if (isSameInteraction) {\n            return;\n        }\n        activationState.isActivated = true;\n        activationState.isProgrammatic = evt === undefined;\n        activationState.activationEvent = evt;\n        activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown');\n        var hasActivatedChild = evt !== undefined &&\n            activatedTargets.length > 0 &&\n            activatedTargets.some(function (target) { return _this.adapter.containsEventTarget(target); });\n        if (hasActivatedChild) {\n            // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n            this.resetActivationState_();\n            return;\n        }\n        if (evt !== undefined) {\n            activatedTargets.push(evt.target);\n            this.registerDeactivationHandlers_(evt);\n        }\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(evt);\n        if (activationState.wasElementMadeActive) {\n            this.animateActivation_();\n        }\n        requestAnimationFrame(function () {\n            // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n            activatedTargets = [];\n            if (!activationState.wasElementMadeActive\n                && evt !== undefined\n                && (evt.key === ' ' || evt.keyCode === 32)) {\n                // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n                // active states inconsistently when they're called within event handling code:\n                // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n                // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n                // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n                // variable is set within a rAF callback for a submit button interaction (#2241).\n                activationState.wasElementMadeActive = _this.checkElementMadeActive_(evt);\n                if (activationState.wasElementMadeActive) {\n                    _this.animateActivation_();\n                }\n            }\n            if (!activationState.wasElementMadeActive) {\n                // Reset activation state immediately if element was not made active.\n                _this.activationState_ = _this.defaultActivationState_();\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.checkElementMadeActive_ = function (evt) {\n        return (evt !== undefined && evt.type === 'keydown') ?\n            this.adapter.isSurfaceActive() :\n            true;\n    };\n    MDCRippleFoundation.prototype.animateActivation_ = function () {\n        var _this = this;\n        var _a = MDCRippleFoundation.strings, VAR_FG_TRANSLATE_START = _a.VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END = _a.VAR_FG_TRANSLATE_END;\n        var _b = MDCRippleFoundation.cssClasses, FG_DEACTIVATION = _b.FG_DEACTIVATION, FG_ACTIVATION = _b.FG_ACTIVATION;\n        var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n        this.layoutInternal_();\n        var translateStart = '';\n        var translateEnd = '';\n        if (!this.adapter.isUnbounded()) {\n            var _c = this.getFgTranslationCoordinates_(), startPoint = _c.startPoint, endPoint = _c.endPoint;\n            translateStart = startPoint.x + \"px, \" + startPoint.y + \"px\";\n            translateEnd = endPoint.x + \"px, \" + endPoint.y + \"px\";\n        }\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n        // Cancel any ongoing activation/deactivation animations\n        clearTimeout(this.activationTimer_);\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.rmBoundedActivationClasses_();\n        this.adapter.removeClass(FG_DEACTIVATION);\n        // Force layout in order to re-trigger the animation.\n        this.adapter.computeBoundingRect();\n        this.adapter.addClass(FG_ACTIVATION);\n        this.activationTimer_ = setTimeout(function () { return _this.activationTimerCallback_(); }, DEACTIVATION_TIMEOUT_MS);\n    };\n    MDCRippleFoundation.prototype.getFgTranslationCoordinates_ = function () {\n        var _a = this.activationState_, activationEvent = _a.activationEvent, wasActivatedByPointer = _a.wasActivatedByPointer;\n        var startPoint;\n        if (wasActivatedByPointer) {\n            startPoint = getNormalizedEventCoords(activationEvent, this.adapter.getWindowPageOffset(), this.adapter.computeBoundingRect());\n        }\n        else {\n            startPoint = {\n                x: this.frame_.width / 2,\n                y: this.frame_.height / 2,\n            };\n        }\n        // Center the element around the start point.\n        startPoint = {\n            x: startPoint.x - (this.initialSize_ / 2),\n            y: startPoint.y - (this.initialSize_ / 2),\n        };\n        var endPoint = {\n            x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n            y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n        };\n        return { startPoint: startPoint, endPoint: endPoint };\n    };\n    MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady_ = function () {\n        var _this = this;\n        // This method is called both when a pointing device is released, and when the activation animation ends.\n        // The deactivation animation should only run after both of those occur.\n        var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n        var _a = this.activationState_, hasDeactivationUXRun = _a.hasDeactivationUXRun, isActivated = _a.isActivated;\n        var activationHasEnded = hasDeactivationUXRun || !isActivated;\n        if (activationHasEnded && this.activationAnimationHasEnded_) {\n            this.rmBoundedActivationClasses_();\n            this.adapter.addClass(FG_DEACTIVATION);\n            this.fgDeactivationRemovalTimer_ = setTimeout(function () {\n                _this.adapter.removeClass(FG_DEACTIVATION);\n            }, numbers.FG_DEACTIVATION_MS);\n        }\n    };\n    MDCRippleFoundation.prototype.rmBoundedActivationClasses_ = function () {\n        var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n        this.adapter.removeClass(FG_ACTIVATION);\n        this.activationAnimationHasEnded_ = false;\n        this.adapter.computeBoundingRect();\n    };\n    MDCRippleFoundation.prototype.resetActivationState_ = function () {\n        var _this = this;\n        this.previousActivationEvent_ = this.activationState_.activationEvent;\n        this.activationState_ = this.defaultActivationState_();\n        // Touch devices may fire additional events for the same interaction within a short time.\n        // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n        setTimeout(function () { return _this.previousActivationEvent_ = undefined; }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n    };\n    MDCRippleFoundation.prototype.deactivate_ = function () {\n        var _this = this;\n        var activationState = this.activationState_;\n        // This can happen in scenarios such as when you have a keyup event that blurs the element.\n        if (!activationState.isActivated) {\n            return;\n        }\n        var state = __assign({}, activationState);\n        if (activationState.isProgrammatic) {\n            requestAnimationFrame(function () { return _this.animateDeactivation_(state); });\n            this.resetActivationState_();\n        }\n        else {\n            this.deregisterDeactivationHandlers_();\n            requestAnimationFrame(function () {\n                _this.activationState_.hasDeactivationUXRun = true;\n                _this.animateDeactivation_(state);\n                _this.resetActivationState_();\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.animateDeactivation_ = function (_a) {\n        var wasActivatedByPointer = _a.wasActivatedByPointer, wasElementMadeActive = _a.wasElementMadeActive;\n        if (wasActivatedByPointer || wasElementMadeActive) {\n            this.runDeactivationUXLogicIfReady_();\n        }\n    };\n    MDCRippleFoundation.prototype.layoutInternal_ = function () {\n        var _this = this;\n        this.frame_ = this.adapter.computeBoundingRect();\n        var maxDim = Math.max(this.frame_.height, this.frame_.width);\n        // Surface diameter is treated differently for unbounded vs. bounded ripples.\n        // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n        // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n        // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n        // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n        // `overflow: hidden`.\n        var getBoundedRadius = function () {\n            var hypotenuse = Math.sqrt(Math.pow(_this.frame_.width, 2) + Math.pow(_this.frame_.height, 2));\n            return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n        };\n        this.maxRadius_ = this.adapter.isUnbounded() ? maxDim : getBoundedRadius();\n        // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n        var initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n        // Unbounded ripple size should always be even number to equally center align.\n        if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n            this.initialSize_ = initialSize - 1;\n        }\n        else {\n            this.initialSize_ = initialSize;\n        }\n        this.fgScale_ = \"\" + this.maxRadius_ / this.initialSize_;\n        this.updateLayoutCssVars_();\n    };\n    MDCRippleFoundation.prototype.updateLayoutCssVars_ = function () {\n        var _a = MDCRippleFoundation.strings, VAR_FG_SIZE = _a.VAR_FG_SIZE, VAR_LEFT = _a.VAR_LEFT, VAR_TOP = _a.VAR_TOP, VAR_FG_SCALE = _a.VAR_FG_SCALE;\n        this.adapter.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + \"px\");\n        this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n        if (this.adapter.isUnbounded()) {\n            this.unboundedCoords_ = {\n                left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n                top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n            };\n            this.adapter.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + \"px\");\n            this.adapter.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + \"px\");\n        }\n    };\n    return MDCRippleFoundation;\n}(MDCFoundation));\nexport { MDCRippleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCRippleFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as util from './util';\nexport { util };\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\n//# sourceMappingURL=index.js.map","/**\n * Stores result from supportsCssVariables to avoid redundant processing to\n * detect CSS custom variable support.\n */\nvar supportsCssVariables_;\nexport function supportsCssVariables(windowObj, forceRefresh) {\n    if (forceRefresh === void 0) { forceRefresh = false; }\n    var CSS = windowObj.CSS;\n    var supportsCssVars = supportsCssVariables_;\n    if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n        return supportsCssVariables_;\n    }\n    var supportsFunctionPresent = CSS && typeof CSS.supports === 'function';\n    if (!supportsFunctionPresent) {\n        return false;\n    }\n    var explicitlySupportsCssVars = CSS.supports('--css-vars', 'yes');\n    // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n    // See: README section on Safari\n    var weAreFeatureDetectingSafari10plus = (CSS.supports('(--css-vars: yes)') &&\n        CSS.supports('color', '#00000000'));\n    supportsCssVars =\n        explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus;\n    if (!forceRefresh) {\n        supportsCssVariables_ = supportsCssVars;\n    }\n    return supportsCssVars;\n}\nexport function getNormalizedEventCoords(evt, pageOffset, clientRect) {\n    if (!evt) {\n        return { x: 0, y: 0 };\n    }\n    var x = pageOffset.x, y = pageOffset.y;\n    var documentX = x + clientRect.left;\n    var documentY = y + clientRect.top;\n    var normalizedX;\n    var normalizedY;\n    // Determine touch point relative to the ripple container.\n    if (evt.type === 'touchstart') {\n        var touchEvent = evt;\n        normalizedX = touchEvent.changedTouches[0].pageX - documentX;\n        normalizedY = touchEvent.changedTouches[0].pageY - documentY;\n    }\n    else {\n        var mouseEvent = evt;\n        normalizedX = mouseEvent.pageX - documentX;\n        normalizedY = mouseEvent.pageY - documentY;\n    }\n    return { x: normalizedX, y: normalizedY };\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCTextFieldCharacterCounterFoundation } from './foundation';\nvar MDCTextFieldCharacterCounter = /** @class */ (function (_super) {\n    __extends(MDCTextFieldCharacterCounter, _super);\n    function MDCTextFieldCharacterCounter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTextFieldCharacterCounter.attachTo = function (root) {\n        return new MDCTextFieldCharacterCounter(root);\n    };\n    Object.defineProperty(MDCTextFieldCharacterCounter.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTextFieldCharacterCounter.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n        };\n        return new MDCTextFieldCharacterCounterFoundation(adapter);\n    };\n    return MDCTextFieldCharacterCounter;\n}(MDCComponent));\nexport { MDCTextFieldCharacterCounter };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    ROOT: 'mdc-text-field-character-counter',\n};\nvar strings = {\n    ROOT_SELECTOR: \".\" + cssClasses.ROOT,\n};\nexport { strings, cssClasses };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCTextFieldCharacterCounterFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldCharacterCounterFoundation, _super);\n    function MDCTextFieldCharacterCounterFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCTextFieldCharacterCounterFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldCharacterCounterAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            return {\n                setContent: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTextFieldCharacterCounterFoundation.prototype.setCounterValue = function (currentLength, maxLength) {\n        currentLength = Math.min(currentLength, maxLength);\n        this.adapter.setContent(currentLength + \" / \" + maxLength);\n    };\n    return MDCTextFieldCharacterCounterFoundation;\n}(MDCFoundation));\nexport { MDCTextFieldCharacterCounterFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTextFieldCharacterCounterFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport * from './component';\nexport * from './foundation';\nexport { cssClasses as characterCountCssClasses, strings as characterCountStrings } from './constants';\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { applyPassive } from '@material/dom/events';\nimport * as ponyfill from '@material/dom/ponyfill';\nimport { MDCFloatingLabel } from '@material/floating-label/component';\nimport { MDCLineRipple } from '@material/line-ripple/component';\nimport { MDCNotchedOutline } from '@material/notched-outline/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { MDCTextFieldCharacterCounter, } from './character-counter/component';\nimport { MDCTextFieldCharacterCounterFoundation } from './character-counter/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCTextFieldFoundation } from './foundation';\nimport { MDCTextFieldHelperText, } from './helper-text/component';\nimport { MDCTextFieldHelperTextFoundation } from './helper-text/foundation';\nimport { MDCTextFieldIcon } from './icon/component';\nvar MDCTextField = /** @class */ (function (_super) {\n    __extends(MDCTextField, _super);\n    function MDCTextField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTextField.attachTo = function (root) {\n        return new MDCTextField(root);\n    };\n    MDCTextField.prototype.initialize = function (rippleFactory, lineRippleFactory, helperTextFactory, characterCounterFactory, iconFactory, labelFactory, outlineFactory) {\n        if (rippleFactory === void 0) { rippleFactory = function (el, foundation) { return new MDCRipple(el, foundation); }; }\n        if (lineRippleFactory === void 0) { lineRippleFactory = function (el) { return new MDCLineRipple(el); }; }\n        if (helperTextFactory === void 0) { helperTextFactory = function (el) { return new MDCTextFieldHelperText(el); }; }\n        if (characterCounterFactory === void 0) { characterCounterFactory = function (el) { return new MDCTextFieldCharacterCounter(el); }; }\n        if (iconFactory === void 0) { iconFactory = function (el) { return new MDCTextFieldIcon(el); }; }\n        if (labelFactory === void 0) { labelFactory = function (el) { return new MDCFloatingLabel(el); }; }\n        if (outlineFactory === void 0) { outlineFactory = function (el) { return new MDCNotchedOutline(el); }; }\n        this.input_ = this.root.querySelector(strings.INPUT_SELECTOR);\n        var labelElement = this.root.querySelector(strings.LABEL_SELECTOR);\n        this.label_ = labelElement ? labelFactory(labelElement) : null;\n        var lineRippleElement = this.root.querySelector(strings.LINE_RIPPLE_SELECTOR);\n        this.lineRipple_ = lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n        var outlineElement = this.root.querySelector(strings.OUTLINE_SELECTOR);\n        this.outline_ = outlineElement ? outlineFactory(outlineElement) : null;\n        // Helper text\n        var helperTextStrings = MDCTextFieldHelperTextFoundation.strings;\n        var nextElementSibling = this.root.nextElementSibling;\n        var hasHelperLine = (nextElementSibling && nextElementSibling.classList.contains(cssClasses.HELPER_LINE));\n        var helperTextEl = hasHelperLine && nextElementSibling && nextElementSibling.querySelector(helperTextStrings.ROOT_SELECTOR);\n        this.helperText_ = helperTextEl ? helperTextFactory(helperTextEl) : null;\n        // Character counter\n        var characterCounterStrings = MDCTextFieldCharacterCounterFoundation.strings;\n        var characterCounterEl = this.root.querySelector(characterCounterStrings.ROOT_SELECTOR);\n        // If character counter is not found in root element search in sibling element.\n        if (!characterCounterEl && hasHelperLine && nextElementSibling) {\n            characterCounterEl = nextElementSibling.querySelector(characterCounterStrings.ROOT_SELECTOR);\n        }\n        this.characterCounter_ = characterCounterEl ? characterCounterFactory(characterCounterEl) : null;\n        // Leading icon\n        var leadingIconEl = this.root.querySelector(strings.LEADING_ICON_SELECTOR);\n        this.leadingIcon_ = leadingIconEl ? iconFactory(leadingIconEl) : null;\n        // Trailing icon\n        var trailingIconEl = this.root.querySelector(strings.TRAILING_ICON_SELECTOR);\n        this.trailingIcon_ = trailingIconEl ? iconFactory(trailingIconEl) : null;\n        // Prefix and Suffix\n        this.prefix_ = this.root.querySelector(strings.PREFIX_SELECTOR);\n        this.suffix_ = this.root.querySelector(strings.SUFFIX_SELECTOR);\n        this.ripple = this.createRipple_(rippleFactory);\n    };\n    MDCTextField.prototype.destroy = function () {\n        if (this.ripple) {\n            this.ripple.destroy();\n        }\n        if (this.lineRipple_) {\n            this.lineRipple_.destroy();\n        }\n        if (this.helperText_) {\n            this.helperText_.destroy();\n        }\n        if (this.characterCounter_) {\n            this.characterCounter_.destroy();\n        }\n        if (this.leadingIcon_) {\n            this.leadingIcon_.destroy();\n        }\n        if (this.trailingIcon_) {\n            this.trailingIcon_.destroy();\n        }\n        if (this.label_) {\n            this.label_.destroy();\n        }\n        if (this.outline_) {\n            this.outline_.destroy();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Initializes the Text Field's internal state based on the environment's\n     * state.\n     */\n    MDCTextField.prototype.initialSyncWithDOM = function () {\n        this.disabled = this.input_.disabled;\n    };\n    Object.defineProperty(MDCTextField.prototype, \"value\", {\n        get: function () {\n            return this.foundation.getValue();\n        },\n        /**\n         * @param value The value to set on the input.\n         */\n        set: function (value) {\n            this.foundation.setValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"disabled\", {\n        get: function () {\n            return this.foundation.isDisabled();\n        },\n        /**\n         * @param disabled Sets the Text Field disabled or enabled.\n         */\n        set: function (disabled) {\n            this.foundation.setDisabled(disabled);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"valid\", {\n        get: function () {\n            return this.foundation.isValid();\n        },\n        /**\n         * @param valid Sets the Text Field valid or invalid.\n         */\n        set: function (valid) {\n            this.foundation.setValid(valid);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"required\", {\n        get: function () {\n            return this.input_.required;\n        },\n        /**\n         * @param required Sets the Text Field to required.\n         */\n        set: function (required) {\n            this.input_.required = required;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"pattern\", {\n        get: function () {\n            return this.input_.pattern;\n        },\n        /**\n         * @param pattern Sets the input element's validation pattern.\n         */\n        set: function (pattern) {\n            this.input_.pattern = pattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"minLength\", {\n        get: function () {\n            return this.input_.minLength;\n        },\n        /**\n         * @param minLength Sets the input element's minLength.\n         */\n        set: function (minLength) {\n            this.input_.minLength = minLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"maxLength\", {\n        get: function () {\n            return this.input_.maxLength;\n        },\n        /**\n         * @param maxLength Sets the input element's maxLength.\n         */\n        set: function (maxLength) {\n            // Chrome throws exception if maxLength is set to a value less than zero\n            if (maxLength < 0) {\n                this.input_.removeAttribute('maxLength');\n            }\n            else {\n                this.input_.maxLength = maxLength;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"min\", {\n        get: function () {\n            return this.input_.min;\n        },\n        /**\n         * @param min Sets the input element's min.\n         */\n        set: function (min) {\n            this.input_.min = min;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"max\", {\n        get: function () {\n            return this.input_.max;\n        },\n        /**\n         * @param max Sets the input element's max.\n         */\n        set: function (max) {\n            this.input_.max = max;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"step\", {\n        get: function () {\n            return this.input_.step;\n        },\n        /**\n         * @param step Sets the input element's step.\n         */\n        set: function (step) {\n            this.input_.step = step;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"helperTextContent\", {\n        /**\n         * Sets the helper text element content.\n         */\n        set: function (content) {\n            this.foundation.setHelperTextContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"leadingIconAriaLabel\", {\n        /**\n         * Sets the aria label of the leading icon.\n         */\n        set: function (label) {\n            this.foundation.setLeadingIconAriaLabel(label);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"leadingIconContent\", {\n        /**\n         * Sets the text content of the leading icon.\n         */\n        set: function (content) {\n            this.foundation.setLeadingIconContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"trailingIconAriaLabel\", {\n        /**\n         * Sets the aria label of the trailing icon.\n         */\n        set: function (label) {\n            this.foundation.setTrailingIconAriaLabel(label);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"trailingIconContent\", {\n        /**\n         * Sets the text content of the trailing icon.\n         */\n        set: function (content) {\n            this.foundation.setTrailingIconContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"useNativeValidation\", {\n        /**\n         * Enables or disables the use of native validation. Use this for custom validation.\n         * @param useNativeValidation Set this to false to ignore native input validation.\n         */\n        set: function (useNativeValidation) {\n            this.foundation.setUseNativeValidation(useNativeValidation);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"prefixText\", {\n        /**\n         * Gets the text content of the prefix, or null if it does not exist.\n         */\n        get: function () {\n            return this.prefix_ ? this.prefix_.textContent : null;\n        },\n        /**\n         * Sets the text content of the prefix, if it exists.\n         */\n        set: function (prefixText) {\n            if (this.prefix_) {\n                this.prefix_.textContent = prefixText;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"suffixText\", {\n        /**\n         * Gets the text content of the suffix, or null if it does not exist.\n         */\n        get: function () {\n            return this.suffix_ ? this.suffix_.textContent : null;\n        },\n        /**\n         * Sets the text content of the suffix, if it exists.\n         */\n        set: function (suffixText) {\n            if (this.suffix_) {\n                this.suffix_.textContent = suffixText;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Focuses the input element.\n     */\n    MDCTextField.prototype.focus = function () {\n        this.input_.focus();\n    };\n    /**\n     * Recomputes the outline SVG path for the outline element.\n     */\n    MDCTextField.prototype.layout = function () {\n        var openNotch = this.foundation.shouldFloat;\n        this.foundation.notchOutline(openNotch);\n    };\n    MDCTextField.prototype.getDefaultFoundation = function () {\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = __assign(__assign(__assign(__assign(__assign({}, this.getRootAdapterMethods_()), this.getInputAdapterMethods_()), this.getLabelAdapterMethods_()), this.getLineRippleAdapterMethods_()), this.getOutlineAdapterMethods_());\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTextFieldFoundation(adapter, this.getFoundationMap_());\n    };\n    MDCTextField.prototype.getRootAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            registerTextFieldInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },\n            deregisterTextFieldInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },\n            registerValidationAttributeChangeHandler: function (handler) {\n                var getAttributesList = function (mutationsList) {\n                    return mutationsList\n                        .map(function (mutation) { return mutation.attributeName; })\n                        .filter(function (attributeName) { return attributeName; });\n                };\n                var observer = new MutationObserver(function (mutationsList) { return handler(getAttributesList(mutationsList)); });\n                var config = { attributes: true };\n                observer.observe(_this.input_, config);\n                return observer;\n            },\n            deregisterValidationAttributeChangeHandler: function (observer) { return observer.disconnect(); },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCTextField.prototype.getInputAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            getNativeInput: function () { return _this.input_; },\n            isFocused: function () { return document.activeElement === _this.input_; },\n            registerInputInteractionHandler: function (evtType, handler) {\n                return _this.input_.addEventListener(evtType, handler, applyPassive());\n            },\n            deregisterInputInteractionHandler: function (evtType, handler) {\n                return _this.input_.removeEventListener(evtType, handler, applyPassive());\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCTextField.prototype.getLabelAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            floatLabel: function (shouldFloat) { return _this.label_ && _this.label_.float(shouldFloat); },\n            getLabelWidth: function () { return _this.label_ ? _this.label_.getWidth() : 0; },\n            hasLabel: function () { return Boolean(_this.label_); },\n            shakeLabel: function (shouldShake) { return _this.label_ && _this.label_.shake(shouldShake); },\n            setLabelRequired: function (isRequired) { return _this.label_ && _this.label_.setRequired(isRequired); },\n        };\n    };\n    MDCTextField.prototype.getLineRippleAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            activateLineRipple: function () {\n                if (_this.lineRipple_) {\n                    _this.lineRipple_.activate();\n                }\n            },\n            deactivateLineRipple: function () {\n                if (_this.lineRipple_) {\n                    _this.lineRipple_.deactivate();\n                }\n            },\n            setLineRippleTransformOrigin: function (normalizedX) {\n                if (_this.lineRipple_) {\n                    _this.lineRipple_.setRippleCenter(normalizedX);\n                }\n            },\n        };\n    };\n    MDCTextField.prototype.getOutlineAdapterMethods_ = function () {\n        var _this = this;\n        return {\n            closeOutline: function () { return _this.outline_ && _this.outline_.closeNotch(); },\n            hasOutline: function () { return Boolean(_this.outline_); },\n            notchOutline: function (labelWidth) { return _this.outline_ && _this.outline_.notch(labelWidth); },\n        };\n    };\n    /**\n     * @return A map of all subcomponents to subfoundations.\n     */\n    MDCTextField.prototype.getFoundationMap_ = function () {\n        return {\n            characterCounter: this.characterCounter_ ?\n                this.characterCounter_.foundationForTextField :\n                undefined,\n            helperText: this.helperText_ ? this.helperText_.foundationForTextField :\n                undefined,\n            leadingIcon: this.leadingIcon_ ?\n                this.leadingIcon_.foundationForTextField :\n                undefined,\n            trailingIcon: this.trailingIcon_ ?\n                this.trailingIcon_.foundationForTextField :\n                undefined,\n        };\n    };\n    MDCTextField.prototype.createRipple_ = function (rippleFactory) {\n        var _this = this;\n        var isTextArea = this.root.classList.contains(cssClasses.TEXTAREA);\n        var isOutlined = this.root.classList.contains(cssClasses.OUTLINED);\n        if (isTextArea || isOutlined) {\n            return null;\n        }\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = __assign(__assign({}, MDCRipple.createAdapter(this)), { isSurfaceActive: function () { return ponyfill.matches(_this.input_, ':active'); }, registerInteractionHandler: function (evtType, handler) { return _this.input_.addEventListener(evtType, handler, applyPassive()); }, deregisterInteractionHandler: function (evtType, handler) {\n                return _this.input_.removeEventListener(evtType, handler, applyPassive());\n            } });\n        // tslint:enable:object-literal-sort-keys\n        return rippleFactory(this.root, new MDCRippleFoundation(adapter));\n    };\n    return MDCTextField;\n}(MDCComponent));\nexport { MDCTextField };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n    ARIA_CONTROLS: 'aria-controls',\n    INPUT_SELECTOR: '.mdc-text-field__input',\n    LABEL_SELECTOR: '.mdc-floating-label',\n    LEADING_ICON_SELECTOR: '.mdc-text-field__icon--leading',\n    LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n    OUTLINE_SELECTOR: '.mdc-notched-outline',\n    PREFIX_SELECTOR: '.mdc-text-field__affix--prefix',\n    SUFFIX_SELECTOR: '.mdc-text-field__affix--suffix',\n    TRAILING_ICON_SELECTOR: '.mdc-text-field__icon--trailing'\n};\nvar cssClasses = {\n    DISABLED: 'mdc-text-field--disabled',\n    FOCUSED: 'mdc-text-field--focused',\n    FULLWIDTH: 'mdc-text-field--fullwidth',\n    HELPER_LINE: 'mdc-text-field-helper-line',\n    INVALID: 'mdc-text-field--invalid',\n    LABEL_FLOATING: 'mdc-text-field--label-floating',\n    NO_LABEL: 'mdc-text-field--no-label',\n    OUTLINED: 'mdc-text-field--outlined',\n    ROOT: 'mdc-text-field',\n    TEXTAREA: 'mdc-text-field--textarea',\n    WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon',\n    WITH_TRAILING_ICON: 'mdc-text-field--with-trailing-icon',\n};\nvar numbers = {\n    LABEL_SCALE: 0.75,\n};\n/**\n * Whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n * under the \"Validation-related attributes\" section.\n */\nvar VALIDATION_ATTR_WHITELIST = [\n    'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n/**\n * Label should always float for these types as they show some UI even if value is empty.\n */\nvar ALWAYS_FLOAT_TYPES = [\n    'color', 'date', 'datetime-local', 'month', 'range', 'time', 'week',\n];\nexport { cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { ALWAYS_FLOAT_TYPES, cssClasses, numbers, strings, VALIDATION_ATTR_WHITELIST } from './constants';\nvar POINTERDOWN_EVENTS = ['mousedown', 'touchstart'];\nvar INTERACTION_EVENTS = ['click', 'keydown'];\nvar MDCTextFieldFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldFoundation, _super);\n    /**\n     * @param adapter\n     * @param foundationMap Map from subcomponent names to their subfoundations.\n     */\n    function MDCTextFieldFoundation(adapter, foundationMap) {\n        if (foundationMap === void 0) { foundationMap = {}; }\n        var _this = _super.call(this, __assign(__assign({}, MDCTextFieldFoundation.defaultAdapter), adapter)) || this;\n        _this.isFocused_ = false;\n        _this.receivedUserInput_ = false;\n        _this.isValid_ = true;\n        _this.useNativeValidation_ = true;\n        _this.helperText_ = foundationMap.helperText;\n        _this.characterCounter_ = foundationMap.characterCounter;\n        _this.leadingIcon_ = foundationMap.leadingIcon;\n        _this.trailingIcon_ = foundationMap.trailingIcon;\n        _this.inputFocusHandler_ = function () { return _this.activateFocus(); };\n        _this.inputBlurHandler_ = function () { return _this.deactivateFocus(); };\n        _this.inputInputHandler_ = function () { return _this.handleInput(); };\n        _this.setPointerXOffset_ = function (evt) { return _this.setTransformOrigin(evt); };\n        _this.textFieldInteractionHandler_ = function () { return _this.handleTextFieldInteraction(); };\n        _this.validationAttributeChangeHandler_ = function (attributesList) { return _this.handleValidationAttributeChange(attributesList); };\n        return _this;\n    }\n    Object.defineProperty(MDCTextFieldFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldAlwaysFloat_\", {\n        get: function () {\n            var type = this.getNativeInput_().type;\n            return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldFloat\", {\n        get: function () {\n            return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldShake\", {\n        get: function () {\n            return !this.isFocused_ && !this.isValid() && !!this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return true; },\n                registerTextFieldInteractionHandler: function () { return undefined; },\n                deregisterTextFieldInteractionHandler: function () { return undefined; },\n                registerInputInteractionHandler: function () { return undefined; },\n                deregisterInputInteractionHandler: function () { return undefined; },\n                registerValidationAttributeChangeHandler: function () { return new MutationObserver(function () { return undefined; }); },\n                deregisterValidationAttributeChangeHandler: function () { return undefined; },\n                getNativeInput: function () { return null; },\n                isFocused: function () { return false; },\n                activateLineRipple: function () { return undefined; },\n                deactivateLineRipple: function () { return undefined; },\n                setLineRippleTransformOrigin: function () { return undefined; },\n                shakeLabel: function () { return undefined; },\n                floatLabel: function () { return undefined; },\n                setLabelRequired: function () { return undefined; },\n                hasLabel: function () { return false; },\n                getLabelWidth: function () { return 0; },\n                hasOutline: function () { return false; },\n                notchOutline: function () { return undefined; },\n                closeOutline: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTextFieldFoundation.prototype.init = function () {\n        var _this = this;\n        if (this.adapter.hasLabel() && this.getNativeInput_().required) {\n            this.adapter.setLabelRequired(true);\n        }\n        if (this.adapter.isFocused()) {\n            this.inputFocusHandler_();\n        }\n        else if (this.adapter.hasLabel() && this.shouldFloat) {\n            this.notchOutline(true);\n            this.adapter.floatLabel(true);\n            this.styleFloating_(true);\n        }\n        this.adapter.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n        this.adapter.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n        this.adapter.registerInputInteractionHandler('input', this.inputInputHandler_);\n        POINTERDOWN_EVENTS.forEach(function (evtType) {\n            _this.adapter.registerInputInteractionHandler(evtType, _this.setPointerXOffset_);\n        });\n        INTERACTION_EVENTS.forEach(function (evtType) {\n            _this.adapter.registerTextFieldInteractionHandler(evtType, _this.textFieldInteractionHandler_);\n        });\n        this.validationObserver_ =\n            this.adapter.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n        this.setCharacterCounter_(this.getValue().length);\n    };\n    MDCTextFieldFoundation.prototype.destroy = function () {\n        var _this = this;\n        this.adapter.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n        this.adapter.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n        this.adapter.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n        POINTERDOWN_EVENTS.forEach(function (evtType) {\n            _this.adapter.deregisterInputInteractionHandler(evtType, _this.setPointerXOffset_);\n        });\n        INTERACTION_EVENTS.forEach(function (evtType) {\n            _this.adapter.deregisterTextFieldInteractionHandler(evtType, _this.textFieldInteractionHandler_);\n        });\n        this.adapter.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n    };\n    /**\n     * Handles user interactions with the Text Field.\n     */\n    MDCTextFieldFoundation.prototype.handleTextFieldInteraction = function () {\n        var nativeInput = this.adapter.getNativeInput();\n        if (nativeInput && nativeInput.disabled) {\n            return;\n        }\n        this.receivedUserInput_ = true;\n    };\n    /**\n     * Handles validation attribute changes\n     */\n    MDCTextFieldFoundation.prototype.handleValidationAttributeChange = function (attributesList) {\n        var _this = this;\n        attributesList.some(function (attributeName) {\n            if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n                _this.styleValidity_(true);\n                _this.adapter.setLabelRequired(_this.getNativeInput_().required);\n                return true;\n            }\n            return false;\n        });\n        if (attributesList.indexOf('maxlength') > -1) {\n            this.setCharacterCounter_(this.getValue().length);\n        }\n    };\n    /**\n     * Opens/closes the notched outline.\n     */\n    MDCTextFieldFoundation.prototype.notchOutline = function (openNotch) {\n        if (!this.adapter.hasOutline()) {\n            return;\n        }\n        if (openNotch) {\n            var labelWidth = this.adapter.getLabelWidth() * numbers.LABEL_SCALE;\n            this.adapter.notchOutline(labelWidth);\n        }\n        else {\n            this.adapter.closeOutline();\n        }\n    };\n    /**\n     * Activates the text field focus state.\n     */\n    MDCTextFieldFoundation.prototype.activateFocus = function () {\n        this.isFocused_ = true;\n        this.styleFocused_(this.isFocused_);\n        this.adapter.activateLineRipple();\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating_(this.shouldFloat);\n            this.adapter.shakeLabel(this.shouldShake);\n        }\n        if (this.helperText_) {\n            this.helperText_.showToScreenReader();\n        }\n    };\n    /**\n     * Sets the line ripple's transform origin, so that the line ripple activate\n     * animation will animate out from the user's click location.\n     */\n    MDCTextFieldFoundation.prototype.setTransformOrigin = function (evt) {\n        if (this.isDisabled() || this.adapter.hasOutline()) {\n            return;\n        }\n        var touches = evt.touches;\n        var targetEvent = touches ? touches[0] : evt;\n        var targetClientRect = targetEvent.target.getBoundingClientRect();\n        var normalizedX = targetEvent.clientX - targetClientRect.left;\n        this.adapter.setLineRippleTransformOrigin(normalizedX);\n    };\n    /**\n     * Handles input change of text input and text area.\n     */\n    MDCTextFieldFoundation.prototype.handleInput = function () {\n        this.autoCompleteFocus();\n        this.setCharacterCounter_(this.getValue().length);\n    };\n    /**\n     * Activates the Text Field's focus state in cases when the input value\n     * changes without user input (e.g. programmatically).\n     */\n    MDCTextFieldFoundation.prototype.autoCompleteFocus = function () {\n        if (!this.receivedUserInput_) {\n            this.activateFocus();\n        }\n    };\n    /**\n     * Deactivates the Text Field's focus state.\n     */\n    MDCTextFieldFoundation.prototype.deactivateFocus = function () {\n        this.isFocused_ = false;\n        this.adapter.deactivateLineRipple();\n        var isValid = this.isValid();\n        this.styleValidity_(isValid);\n        this.styleFocused_(this.isFocused_);\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating_(this.shouldFloat);\n            this.adapter.shakeLabel(this.shouldShake);\n        }\n        if (!this.shouldFloat) {\n            this.receivedUserInput_ = false;\n        }\n    };\n    MDCTextFieldFoundation.prototype.getValue = function () {\n        return this.getNativeInput_().value;\n    };\n    /**\n     * @param value The value to set on the input Element.\n     */\n    MDCTextFieldFoundation.prototype.setValue = function (value) {\n        // Prevent Safari from moving the caret to the end of the input when the value has not changed.\n        if (this.getValue() !== value) {\n            this.getNativeInput_().value = value;\n        }\n        this.setCharacterCounter_(value.length);\n        var isValid = this.isValid();\n        this.styleValidity_(isValid);\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating_(this.shouldFloat);\n            this.adapter.shakeLabel(this.shouldShake);\n        }\n    };\n    /**\n     * @return The custom validity state, if set; otherwise, the result of a native validity check.\n     */\n    MDCTextFieldFoundation.prototype.isValid = function () {\n        return this.useNativeValidation_\n            ? this.isNativeInputValid_() : this.isValid_;\n    };\n    /**\n     * @param isValid Sets the custom validity state of the Text Field.\n     */\n    MDCTextFieldFoundation.prototype.setValid = function (isValid) {\n        this.isValid_ = isValid;\n        this.styleValidity_(isValid);\n        var shouldShake = !isValid && !this.isFocused_ && !!this.getValue();\n        if (this.adapter.hasLabel()) {\n            this.adapter.shakeLabel(shouldShake);\n        }\n    };\n    /**\n     * Enables or disables the use of native validation. Use this for custom validation.\n     * @param useNativeValidation Set this to false to ignore native input validation.\n     */\n    MDCTextFieldFoundation.prototype.setUseNativeValidation = function (useNativeValidation) {\n        this.useNativeValidation_ = useNativeValidation;\n    };\n    MDCTextFieldFoundation.prototype.isDisabled = function () {\n        return this.getNativeInput_().disabled;\n    };\n    /**\n     * @param disabled Sets the text-field disabled or enabled.\n     */\n    MDCTextFieldFoundation.prototype.setDisabled = function (disabled) {\n        this.getNativeInput_().disabled = disabled;\n        this.styleDisabled_(disabled);\n    };\n    /**\n     * @param content Sets the content of the helper text.\n     */\n    MDCTextFieldFoundation.prototype.setHelperTextContent = function (content) {\n        if (this.helperText_) {\n            this.helperText_.setContent(content);\n        }\n    };\n    /**\n     * Sets the aria label of the leading icon.\n     */\n    MDCTextFieldFoundation.prototype.setLeadingIconAriaLabel = function (label) {\n        if (this.leadingIcon_) {\n            this.leadingIcon_.setAriaLabel(label);\n        }\n    };\n    /**\n     * Sets the text content of the leading icon.\n     */\n    MDCTextFieldFoundation.prototype.setLeadingIconContent = function (content) {\n        if (this.leadingIcon_) {\n            this.leadingIcon_.setContent(content);\n        }\n    };\n    /**\n     * Sets the aria label of the trailing icon.\n     */\n    MDCTextFieldFoundation.prototype.setTrailingIconAriaLabel = function (label) {\n        if (this.trailingIcon_) {\n            this.trailingIcon_.setAriaLabel(label);\n        }\n    };\n    /**\n     * Sets the text content of the trailing icon.\n     */\n    MDCTextFieldFoundation.prototype.setTrailingIconContent = function (content) {\n        if (this.trailingIcon_) {\n            this.trailingIcon_.setContent(content);\n        }\n    };\n    /**\n     * Sets character counter values that shows characters used and the total character limit.\n     */\n    MDCTextFieldFoundation.prototype.setCharacterCounter_ = function (currentLength) {\n        if (!this.characterCounter_) {\n            return;\n        }\n        var maxLength = this.getNativeInput_().maxLength;\n        if (maxLength === -1) {\n            throw new Error('MDCTextFieldFoundation: Expected maxlength html property on text input or textarea.');\n        }\n        this.characterCounter_.setCounterValue(currentLength, maxLength);\n    };\n    /**\n     * @return True if the Text Field input fails in converting the user-supplied value.\n     */\n    MDCTextFieldFoundation.prototype.isBadInput_ = function () {\n        // The badInput property is not supported in IE 11 💩.\n        return this.getNativeInput_().validity.badInput || false;\n    };\n    /**\n     * @return The result of native validity checking (ValidityState.valid).\n     */\n    MDCTextFieldFoundation.prototype.isNativeInputValid_ = function () {\n        return this.getNativeInput_().validity.valid;\n    };\n    /**\n     * Styles the component based on the validity state.\n     */\n    MDCTextFieldFoundation.prototype.styleValidity_ = function (isValid) {\n        var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;\n        if (isValid) {\n            this.adapter.removeClass(INVALID);\n        }\n        else {\n            this.adapter.addClass(INVALID);\n        }\n        if (this.helperText_) {\n            this.helperText_.setValidity(isValid);\n        }\n    };\n    /**\n     * Styles the component based on the focused state.\n     */\n    MDCTextFieldFoundation.prototype.styleFocused_ = function (isFocused) {\n        var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;\n        if (isFocused) {\n            this.adapter.addClass(FOCUSED);\n        }\n        else {\n            this.adapter.removeClass(FOCUSED);\n        }\n    };\n    /**\n     * Styles the component based on the disabled state.\n     */\n    MDCTextFieldFoundation.prototype.styleDisabled_ = function (isDisabled) {\n        var _a = MDCTextFieldFoundation.cssClasses, DISABLED = _a.DISABLED, INVALID = _a.INVALID;\n        if (isDisabled) {\n            this.adapter.addClass(DISABLED);\n            this.adapter.removeClass(INVALID);\n        }\n        else {\n            this.adapter.removeClass(DISABLED);\n        }\n        if (this.leadingIcon_) {\n            this.leadingIcon_.setDisabled(isDisabled);\n        }\n        if (this.trailingIcon_) {\n            this.trailingIcon_.setDisabled(isDisabled);\n        }\n    };\n    /**\n     * Styles the component based on the label floating state.\n     */\n    MDCTextFieldFoundation.prototype.styleFloating_ = function (isFloating) {\n        var LABEL_FLOATING = MDCTextFieldFoundation.cssClasses.LABEL_FLOATING;\n        if (isFloating) {\n            this.adapter.addClass(LABEL_FLOATING);\n        }\n        else {\n            this.adapter.removeClass(LABEL_FLOATING);\n        }\n    };\n    /**\n     * @return The native text input element from the host environment, or an object with the same shape for unit tests.\n     */\n    MDCTextFieldFoundation.prototype.getNativeInput_ = function () {\n        // this.adapter may be undefined in foundation unit tests. This happens when testdouble is creating a mock object\n        // and invokes the shouldShake/shouldFloat getters (which in turn call getValue(), which calls this method) before\n        // init() has been called from the MDCTextField constructor. To work around that issue, we return a dummy object.\n        var nativeInput = this.adapter ? this.adapter.getNativeInput() : null;\n        return nativeInput || {\n            disabled: false,\n            maxLength: -1,\n            required: false,\n            type: 'input',\n            validity: {\n                badInput: false,\n                valid: true,\n            },\n            value: '',\n        };\n    };\n    return MDCTextFieldFoundation;\n}(MDCFoundation));\nexport { MDCTextFieldFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTextFieldFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCTextFieldHelperTextFoundation } from './foundation';\nvar MDCTextFieldHelperText = /** @class */ (function (_super) {\n    __extends(MDCTextFieldHelperText, _super);\n    function MDCTextFieldHelperText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTextFieldHelperText.attachTo = function (root) {\n        return new MDCTextFieldHelperText(root);\n    };\n    Object.defineProperty(MDCTextFieldHelperText.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTextFieldHelperText.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            removeAttr: function (attr) { return _this.root.removeAttribute(attr); },\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTextFieldHelperTextFoundation(adapter);\n    };\n    return MDCTextFieldHelperText;\n}(MDCComponent));\nexport { MDCTextFieldHelperText };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n    HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n    ROOT: 'mdc-text-field-helper-text',\n};\nvar strings = {\n    ARIA_HIDDEN: 'aria-hidden',\n    ROLE: 'role',\n    ROOT_SELECTOR: \".\" + cssClasses.ROOT,\n};\nexport { strings, cssClasses };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCTextFieldHelperTextFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldHelperTextFoundation, _super);\n    function MDCTextFieldHelperTextFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCTextFieldHelperTextFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCTextFieldHelperTextFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldHelperTextFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldHelperTextFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldHelperTextAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                setAttr: function () { return undefined; },\n                removeAttr: function () { return undefined; },\n                setContent: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the content of the helper text field.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.setContent = function (content) {\n        this.adapter.setContent(content);\n    };\n    /**\n     * @param isPersistent Sets the persistency of the helper text.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.setPersistent = function (isPersistent) {\n        if (isPersistent) {\n            this.adapter.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n        }\n        else {\n            this.adapter.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n        }\n    };\n    /**\n     * @param isValidation True to make the helper text act as an error validation message.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.setValidation = function (isValidation) {\n        if (isValidation) {\n            this.adapter.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n        }\n        else {\n            this.adapter.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n        }\n    };\n    /**\n     * Makes the helper text visible to the screen reader.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.showToScreenReader = function () {\n        this.adapter.removeAttr(strings.ARIA_HIDDEN);\n    };\n    /**\n     * Sets the validity of the helper text based on the input validity.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.setValidity = function (inputIsValid) {\n        var helperTextIsPersistent = this.adapter.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n        var helperTextIsValidationMsg = this.adapter.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n        var validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n        if (validationMsgNeedsDisplay) {\n            this.adapter.setAttr(strings.ROLE, 'alert');\n        }\n        else {\n            this.adapter.removeAttr(strings.ROLE);\n        }\n        if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n            this.hide_();\n        }\n    };\n    /**\n     * Hides the help text from screen readers.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.hide_ = function () {\n        this.adapter.setAttr(strings.ARIA_HIDDEN, 'true');\n    };\n    return MDCTextFieldHelperTextFoundation;\n}(MDCFoundation));\nexport { MDCTextFieldHelperTextFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTextFieldHelperTextFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport * from './component';\nexport * from './foundation';\nexport { cssClasses as helperTextCssClasses, strings as helperTextStrings } from './constants';\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCTextFieldIconFoundation } from './foundation';\nvar MDCTextFieldIcon = /** @class */ (function (_super) {\n    __extends(MDCTextFieldIcon, _super);\n    function MDCTextFieldIcon() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTextFieldIcon.attachTo = function (root) {\n        return new MDCTextFieldIcon(root);\n    };\n    Object.defineProperty(MDCTextFieldIcon.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTextFieldIcon.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            getAttr: function (attr) { return _this.root.getAttribute(attr); },\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            removeAttr: function (attr) { return _this.root.removeAttribute(attr); },\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n            registerInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },\n            deregisterInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },\n            notifyIconAction: function () { return _this.emit(MDCTextFieldIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */); },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTextFieldIconFoundation(adapter);\n    };\n    return MDCTextFieldIcon;\n}(MDCComponent));\nexport { MDCTextFieldIcon };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n    ICON_EVENT: 'MDCTextField:icon',\n    ICON_ROLE: 'button',\n};\nvar cssClasses = {\n    ROOT: 'mdc-text-field__icon',\n};\nexport { strings, cssClasses };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar INTERACTION_EVENTS = ['click', 'keydown'];\nvar MDCTextFieldIconFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldIconFoundation, _super);\n    function MDCTextFieldIconFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCTextFieldIconFoundation.defaultAdapter), adapter)) || this;\n        _this.savedTabIndex_ = null;\n        _this.interactionHandler_ = function (evt) { return _this.handleInteraction(evt); };\n        return _this;\n    }\n    Object.defineProperty(MDCTextFieldIconFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldIconFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldIconFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldIconAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                getAttr: function () { return null; },\n                setAttr: function () { return undefined; },\n                removeAttr: function () { return undefined; },\n                setContent: function () { return undefined; },\n                registerInteractionHandler: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n                notifyIconAction: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTextFieldIconFoundation.prototype.init = function () {\n        var _this = this;\n        this.savedTabIndex_ = this.adapter.getAttr('tabindex');\n        INTERACTION_EVENTS.forEach(function (evtType) {\n            _this.adapter.registerInteractionHandler(evtType, _this.interactionHandler_);\n        });\n    };\n    MDCTextFieldIconFoundation.prototype.destroy = function () {\n        var _this = this;\n        INTERACTION_EVENTS.forEach(function (evtType) {\n            _this.adapter.deregisterInteractionHandler(evtType, _this.interactionHandler_);\n        });\n    };\n    MDCTextFieldIconFoundation.prototype.setDisabled = function (disabled) {\n        if (!this.savedTabIndex_) {\n            return;\n        }\n        if (disabled) {\n            this.adapter.setAttr('tabindex', '-1');\n            this.adapter.removeAttr('role');\n        }\n        else {\n            this.adapter.setAttr('tabindex', this.savedTabIndex_);\n            this.adapter.setAttr('role', strings.ICON_ROLE);\n        }\n    };\n    MDCTextFieldIconFoundation.prototype.setAriaLabel = function (label) {\n        this.adapter.setAttr('aria-label', label);\n    };\n    MDCTextFieldIconFoundation.prototype.setContent = function (content) {\n        this.adapter.setContent(content);\n    };\n    MDCTextFieldIconFoundation.prototype.handleInteraction = function (evt) {\n        var isEnterKey = evt.key === 'Enter' || evt.keyCode === 13;\n        if (evt.type === 'click' || isEnterKey) {\n            evt.preventDefault(); // stop click from causing host label to focus\n            // input\n            this.adapter.notifyIconAction();\n        }\n    };\n    return MDCTextFieldIconFoundation;\n}(MDCFoundation));\nexport { MDCTextFieldIconFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTextFieldIconFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport * from './component';\nexport * from './foundation';\nexport { cssClasses as iconCssClasses, strings as iconStrings } from './constants';\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\nexport * from './character-counter/index';\nexport * from './helper-text/index';\nexport * from './icon/index';\n//# sourceMappingURL=index.js.map","var _dec, _dec2, _class, _dec3, _class2, _dec4, _class3, _dec5, _class5, _dec6, _class7, _dec7, _class8, _dec8, _class9, _dec9, _class10, _class11, _temp, _dec10, _class12, _class13, _temp2;\n\nimport * as LogManager from 'aurelia-logging';\nimport { PLATFORM, DOM } from 'aurelia-pal';\nimport { TaskQueue } from 'aurelia-task-queue';\nimport { metadata } from 'aurelia-metadata';\n\nexport const targetContext = 'Binding:target';\nexport const sourceContext = 'Binding:source';\n\nconst map = Object.create(null);\n\nexport function camelCase(name) {\n  if (name in map) {\n    return map[name];\n  }\n  const result = name.charAt(0).toLowerCase() + name.slice(1).replace(/[_.-](\\w|$)/g, (_, x) => x.toUpperCase());\n  map[name] = result;\n  return result;\n}\n\nexport function createOverrideContext(bindingContext, parentOverrideContext) {\n  return {\n    bindingContext: bindingContext,\n    parentOverrideContext: parentOverrideContext || null\n  };\n}\n\nexport function getContextFor(name, scope, ancestor) {\n  let oc = scope.overrideContext;\n\n  if (ancestor) {\n    while (ancestor && oc) {\n      ancestor--;\n      oc = oc.parentOverrideContext;\n    }\n    if (ancestor || !oc) {\n      return undefined;\n    }\n    return name in oc ? oc : oc.bindingContext;\n  }\n\n  while (oc && !(name in oc) && !(oc.bindingContext && name in oc.bindingContext)) {\n    oc = oc.parentOverrideContext;\n  }\n  if (oc) {\n    return name in oc ? oc : oc.bindingContext;\n  }\n\n  return scope.bindingContext || scope.overrideContext;\n}\n\nexport function createScopeForTest(bindingContext, parentBindingContext) {\n  if (parentBindingContext) {\n    return {\n      bindingContext,\n      overrideContext: createOverrideContext(bindingContext, createOverrideContext(parentBindingContext))\n    };\n  }\n  return {\n    bindingContext,\n    overrideContext: createOverrideContext(bindingContext)\n  };\n}\n\nconst slotNames = [];\nconst versionSlotNames = [];\nlet lastSlot = -1;\nfunction ensureEnoughSlotNames(currentSlot) {\n  if (currentSlot === lastSlot) {\n    lastSlot += 5;\n    const ii = slotNames.length = versionSlotNames.length = lastSlot + 1;\n    for (let i = currentSlot + 1; i < ii; ++i) {\n      slotNames[i] = `_observer${i}`;\n      versionSlotNames[i] = `_observerVersion${i}`;\n    }\n  }\n}\nensureEnoughSlotNames(-1);\n\nfunction addObserver(observer) {\n  let observerSlots = this._observerSlots === undefined ? 0 : this._observerSlots;\n  let i = observerSlots;\n  while (i-- && this[slotNames[i]] !== observer) {}\n\n  if (i === -1) {\n    i = 0;\n    while (this[slotNames[i]]) {\n      i++;\n    }\n    this[slotNames[i]] = observer;\n    observer.subscribe(sourceContext, this);\n\n    if (i === observerSlots) {\n      this._observerSlots = i + 1;\n    }\n  }\n\n  if (this._version === undefined) {\n    this._version = 0;\n  }\n  this[versionSlotNames[i]] = this._version;\n  ensureEnoughSlotNames(i);\n}\n\nfunction observeProperty(obj, propertyName) {\n  let observer = this.observerLocator.getObserver(obj, propertyName);\n  addObserver.call(this, observer);\n}\n\nfunction observeArray(array) {\n  let observer = this.observerLocator.getArrayObserver(array);\n  addObserver.call(this, observer);\n}\n\nfunction unobserve(all) {\n  let i = this._observerSlots;\n  while (i--) {\n    if (all || this[versionSlotNames[i]] !== this._version) {\n      let observer = this[slotNames[i]];\n      this[slotNames[i]] = null;\n      if (observer) {\n        observer.unsubscribe(sourceContext, this);\n      }\n    }\n  }\n}\n\nexport function connectable() {\n  return function (target) {\n    target.prototype.observeProperty = observeProperty;\n    target.prototype.observeArray = observeArray;\n    target.prototype.unobserve = unobserve;\n    target.prototype.addObserver = addObserver;\n  };\n}\n\nconst queue = [];\nconst queued = {};\nlet nextId = 0;\nlet minimumImmediate = 100;\nconst frameBudget = 15;\n\nlet isFlushRequested = false;\nlet immediate = 0;\n\nfunction flush(animationFrameStart) {\n  const length = queue.length;\n  let i = 0;\n  while (i < length) {\n    const binding = queue[i];\n    queued[binding.__connectQueueId] = false;\n    binding.connect(true);\n    i++;\n\n    if (i % 100 === 0 && PLATFORM.performance.now() - animationFrameStart > frameBudget) {\n      break;\n    }\n  }\n  queue.splice(0, i);\n\n  if (queue.length) {\n    PLATFORM.requestAnimationFrame(flush);\n  } else {\n    isFlushRequested = false;\n    immediate = 0;\n  }\n}\n\nexport function enqueueBindingConnect(binding) {\n  if (immediate < minimumImmediate) {\n    immediate++;\n    binding.connect(false);\n  } else {\n    let id = binding.__connectQueueId;\n    if (id === undefined) {\n      id = nextId;\n      nextId++;\n      binding.__connectQueueId = id;\n    }\n\n    if (!queued[id]) {\n      queue.push(binding);\n      queued[id] = true;\n    }\n  }\n  if (!isFlushRequested) {\n    isFlushRequested = true;\n    PLATFORM.requestAnimationFrame(flush);\n  }\n}\n\nexport function setConnectQueueThreshold(value) {\n  minimumImmediate = value;\n}\n\nexport function enableConnectQueue() {\n  setConnectQueueThreshold(100);\n}\n\nexport function disableConnectQueue() {\n  setConnectQueueThreshold(Number.MAX_SAFE_INTEGER);\n}\n\nexport function getConnectQueueSize() {\n  return queue.length;\n}\n\nfunction addSubscriber(context, callable) {\n  if (this.hasSubscriber(context, callable)) {\n    return false;\n  }\n  if (!this._context0) {\n    this._context0 = context;\n    this._callable0 = callable;\n    return true;\n  }\n  if (!this._context1) {\n    this._context1 = context;\n    this._callable1 = callable;\n    return true;\n  }\n  if (!this._context2) {\n    this._context2 = context;\n    this._callable2 = callable;\n    return true;\n  }\n  if (!this._contextsRest) {\n    this._contextsRest = [context];\n    this._callablesRest = [callable];\n    return true;\n  }\n  this._contextsRest.push(context);\n  this._callablesRest.push(callable);\n  return true;\n}\n\nfunction removeSubscriber(context, callable) {\n  if (this._context0 === context && this._callable0 === callable) {\n    this._context0 = null;\n    this._callable0 = null;\n    return true;\n  }\n  if (this._context1 === context && this._callable1 === callable) {\n    this._context1 = null;\n    this._callable1 = null;\n    return true;\n  }\n  if (this._context2 === context && this._callable2 === callable) {\n    this._context2 = null;\n    this._callable2 = null;\n    return true;\n  }\n  const callables = this._callablesRest;\n  if (callables === undefined || callables.length === 0) {\n    return false;\n  }\n  const contexts = this._contextsRest;\n  let i = 0;\n  while (!(callables[i] === callable && contexts[i] === context) && callables.length > i) {\n    i++;\n  }\n  if (i >= callables.length) {\n    return false;\n  }\n  contexts.splice(i, 1);\n  callables.splice(i, 1);\n  return true;\n}\n\nlet arrayPool1 = [];\nlet arrayPool2 = [];\nlet poolUtilization = [];\n\nfunction callSubscribers(newValue, oldValue) {\n  let context0 = this._context0;\n  let callable0 = this._callable0;\n  let context1 = this._context1;\n  let callable1 = this._callable1;\n  let context2 = this._context2;\n  let callable2 = this._callable2;\n  let length = this._contextsRest ? this._contextsRest.length : 0;\n  let contextsRest;\n  let callablesRest;\n  let poolIndex;\n  let i;\n  if (length) {\n    poolIndex = poolUtilization.length;\n    while (poolIndex-- && poolUtilization[poolIndex]) {}\n    if (poolIndex < 0) {\n      poolIndex = poolUtilization.length;\n      contextsRest = [];\n      callablesRest = [];\n      poolUtilization.push(true);\n      arrayPool1.push(contextsRest);\n      arrayPool2.push(callablesRest);\n    } else {\n      poolUtilization[poolIndex] = true;\n      contextsRest = arrayPool1[poolIndex];\n      callablesRest = arrayPool2[poolIndex];\n    }\n\n    i = length;\n    while (i--) {\n      contextsRest[i] = this._contextsRest[i];\n      callablesRest[i] = this._callablesRest[i];\n    }\n  }\n\n  if (context0) {\n    if (callable0) {\n      callable0.call(context0, newValue, oldValue);\n    } else {\n      context0(newValue, oldValue);\n    }\n  }\n  if (context1) {\n    if (callable1) {\n      callable1.call(context1, newValue, oldValue);\n    } else {\n      context1(newValue, oldValue);\n    }\n  }\n  if (context2) {\n    if (callable2) {\n      callable2.call(context2, newValue, oldValue);\n    } else {\n      context2(newValue, oldValue);\n    }\n  }\n  if (length) {\n    for (i = 0; i < length; i++) {\n      let callable = callablesRest[i];\n      let context = contextsRest[i];\n      if (callable) {\n        callable.call(context, newValue, oldValue);\n      } else {\n        context(newValue, oldValue);\n      }\n      contextsRest[i] = null;\n      callablesRest[i] = null;\n    }\n    poolUtilization[poolIndex] = false;\n  }\n}\n\nfunction hasSubscribers() {\n  return !!(this._context0 || this._context1 || this._context2 || this._contextsRest && this._contextsRest.length);\n}\n\nfunction hasSubscriber(context, callable) {\n  let has = this._context0 === context && this._callable0 === callable || this._context1 === context && this._callable1 === callable || this._context2 === context && this._callable2 === callable;\n  if (has) {\n    return true;\n  }\n  let index;\n  let contexts = this._contextsRest;\n  if (!contexts || (index = contexts.length) === 0) {\n    return false;\n  }\n  let callables = this._callablesRest;\n  while (index--) {\n    if (contexts[index] === context && callables[index] === callable) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function subscriberCollection() {\n  return function (target) {\n    target.prototype.addSubscriber = addSubscriber;\n    target.prototype.removeSubscriber = removeSubscriber;\n    target.prototype.callSubscribers = callSubscribers;\n    target.prototype.hasSubscribers = hasSubscribers;\n    target.prototype.hasSubscriber = hasSubscriber;\n  };\n}\n\nexport let ExpressionObserver = (_dec = connectable(), _dec2 = subscriberCollection(), _dec(_class = _dec2(_class = class ExpressionObserver {\n  constructor(scope, expression, observerLocator, lookupFunctions) {\n    this.scope = scope;\n    this.expression = expression;\n    this.observerLocator = observerLocator;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  getValue() {\n    return this.expression.evaluate(this.scope, this.lookupFunctions);\n  }\n\n  setValue(newValue) {\n    this.expression.assign(this.scope, newValue);\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.expression.evaluate(this.scope, this.lookupFunctions);\n      this.expression.connect(this, this.scope);\n    }\n    this.addSubscriber(context, callable);\n    if (arguments.length === 1 && context instanceof Function) {\n      return {\n        dispose: () => {\n          this.unsubscribe(context, callable);\n        }\n      };\n    }\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.unobserve(true);\n      this.oldValue = undefined;\n    }\n  }\n\n  call() {\n    let newValue = this.expression.evaluate(this.scope, this.lookupFunctions);\n    let oldValue = this.oldValue;\n    if (newValue !== oldValue) {\n      this.oldValue = newValue;\n      this.callSubscribers(newValue, oldValue);\n    }\n    this._version++;\n    this.expression.connect(this, this.scope);\n    this.unobserve(false);\n  }\n}) || _class) || _class);\n\nfunction isIndex(s) {\n  return +s === s >>> 0;\n}\n\nfunction toNumber(s) {\n  return +s;\n}\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\nfunction ArraySplice() {}\n\nArraySplice.prototype = {\n  calcEditDistances: function (current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let rowCount = oldEnd - oldStart + 1;\n    let columnCount = currentEnd - currentStart + 1;\n    let distances = new Array(rowCount);\n    let north;\n    let west;\n\n    for (let i = 0; i < rowCount; ++i) {\n      distances[i] = new Array(columnCount);\n      distances[i][0] = i;\n    }\n\n    for (let j = 0; j < columnCount; ++j) {\n      distances[0][j] = j;\n    }\n\n    for (let i = 1; i < rowCount; ++i) {\n      for (let j = 1; j < columnCount; ++j) {\n        if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1])) {\n          distances[i][j] = distances[i - 1][j - 1];\n        } else {\n          north = distances[i - 1][j] + 1;\n          west = distances[i][j - 1] + 1;\n          distances[i][j] = north < west ? north : west;\n        }\n      }\n    }\n\n    return distances;\n  },\n\n  spliceOperationsFromEditDistances: function (distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    let edits = [];\n    while (i > 0 || j > 0) {\n      if (i === 0) {\n        edits.push(EDIT_ADD);\n        j--;\n        continue;\n      }\n      if (j === 0) {\n        edits.push(EDIT_DELETE);\n        i--;\n        continue;\n      }\n      let northWest = distances[i - 1][j - 1];\n      let west = distances[i - 1][j];\n      let north = distances[i][j - 1];\n\n      let min;\n      if (west < north) {\n        min = west < northWest ? west : northWest;\n      } else {\n        min = north < northWest ? north : northWest;\n      }\n\n      if (min === northWest) {\n        if (northWest === current) {\n          edits.push(EDIT_LEAVE);\n        } else {\n          edits.push(EDIT_UPDATE);\n          current = northWest;\n        }\n        i--;\n        j--;\n      } else if (min === west) {\n        edits.push(EDIT_DELETE);\n        i--;\n        current = west;\n      } else {\n        edits.push(EDIT_ADD);\n        j--;\n        current = north;\n      }\n    }\n\n    edits.reverse();\n    return edits;\n  },\n\n  calcSplices: function (current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n\n    let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) {\n      prefixCount = this.sharedPrefix(current, old, minLength);\n    }\n\n    if (currentEnd === current.length && oldEnd === old.length) {\n      suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n    }\n\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) {\n      return [];\n    }\n\n    if (currentStart === currentEnd) {\n      let splice = newSplice(currentStart, [], 0);\n      while (oldStart < oldEnd) {\n        splice.removed.push(old[oldStart++]);\n      }\n\n      return [splice];\n    } else if (oldStart === oldEnd) {\n      return [newSplice(currentStart, [], currentEnd - currentStart)];\n    }\n\n    let ops = this.spliceOperationsFromEditDistances(this.calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n\n    let splice = undefined;\n    let splices = [];\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; ++i) {\n      switch (ops[i]) {\n        case EDIT_LEAVE:\n          if (splice) {\n            splices.push(splice);\n            splice = undefined;\n          }\n\n          index++;\n          oldIndex++;\n          break;\n        case EDIT_UPDATE:\n          if (!splice) {\n            splice = newSplice(index, [], 0);\n          }\n\n          splice.addedCount++;\n          index++;\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n        case EDIT_ADD:\n          if (!splice) {\n            splice = newSplice(index, [], 0);\n          }\n\n          splice.addedCount++;\n          index++;\n          break;\n        case EDIT_DELETE:\n          if (!splice) {\n            splice = newSplice(index, [], 0);\n          }\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n      }\n    }\n\n    if (splice) {\n      splices.push(splice);\n    }\n    return splices;\n  },\n\n  sharedPrefix: function (current, old, searchLength) {\n    for (let i = 0; i < searchLength; ++i) {\n      if (!this.equals(current[i], old[i])) {\n        return i;\n      }\n    }\n\n    return searchLength;\n  },\n\n  sharedSuffix: function (current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && this.equals(current[--index1], old[--index2])) {\n      count++;\n    }\n\n    return count;\n  },\n\n  calculateSplices: function (current, previous) {\n    return this.calcSplices(current, 0, current.length, previous, 0, previous.length);\n  },\n\n  equals: function (currentValue, previousValue) {\n    return currentValue === previousValue;\n  }\n};\n\nlet arraySplice = new ArraySplice();\n\nexport function calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n  return arraySplice.calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd);\n}\n\nfunction intersect(start1, end1, start2, end2) {\n  if (end1 < start2 || end2 < start1) {\n    return -1;\n  }\n\n  if (end1 === start2 || end2 === start1) {\n    return 0;\n  }\n\n  if (start1 < start2) {\n    if (end1 < end2) {\n      return end1 - start2;\n    }\n\n    return end2 - start2;\n  }\n\n  if (end2 < end1) {\n    return end2 - start1;\n  }\n\n  return end1 - start1;\n}\n\nexport function mergeSplice(splices, index, removed, addedCount) {\n  let splice = newSplice(index, removed, addedCount);\n\n  let inserted = false;\n  let insertionOffset = 0;\n\n  for (let i = 0; i < splices.length; i++) {\n    let current = splices[i];\n    current.index += insertionOffset;\n\n    if (inserted) {\n      continue;\n    }\n\n    let intersectCount = intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n\n    if (intersectCount >= 0) {\n\n      splices.splice(i, 1);\n      i--;\n\n      insertionOffset -= current.addedCount - current.removed.length;\n\n      splice.addedCount += current.addedCount - intersectCount;\n      let deleteCount = splice.removed.length + current.removed.length - intersectCount;\n\n      if (!splice.addedCount && !deleteCount) {\n        inserted = true;\n      } else {\n        let currentRemoved = current.removed;\n\n        if (splice.index < current.index) {\n          let prepend = splice.removed.slice(0, current.index - splice.index);\n          Array.prototype.push.apply(prepend, currentRemoved);\n          currentRemoved = prepend;\n        }\n\n        if (splice.index + splice.removed.length > current.index + current.addedCount) {\n          let append = splice.removed.slice(current.index + current.addedCount - splice.index);\n          Array.prototype.push.apply(currentRemoved, append);\n        }\n\n        splice.removed = currentRemoved;\n        if (current.index < splice.index) {\n          splice.index = current.index;\n        }\n      }\n    } else if (splice.index < current.index) {\n\n      inserted = true;\n\n      splices.splice(i, 0, splice);\n      i++;\n\n      let offset = splice.addedCount - splice.removed.length;\n      current.index += offset;\n      insertionOffset += offset;\n    }\n  }\n\n  if (!inserted) {\n    splices.push(splice);\n  }\n}\n\nfunction createInitialSplices(array, changeRecords) {\n  let splices = [];\n\n  for (let i = 0; i < changeRecords.length; i++) {\n    let record = changeRecords[i];\n    switch (record.type) {\n      case 'splice':\n        mergeSplice(splices, record.index, record.removed.slice(), record.addedCount);\n        break;\n      case 'add':\n      case 'update':\n      case 'delete':\n        if (!isIndex(record.name)) {\n          continue;\n        }\n\n        let index = toNumber(record.name);\n        if (index < 0) {\n          continue;\n        }\n\n        mergeSplice(splices, index, [record.oldValue], record.type === 'delete' ? 0 : 1);\n        break;\n      default:\n        console.error('Unexpected record type: ' + JSON.stringify(record));\n        break;\n    }\n  }\n\n  return splices;\n}\n\nexport function projectArraySplices(array, changeRecords) {\n  let splices = [];\n\n  createInitialSplices(array, changeRecords).forEach(function (splice) {\n    if (splice.addedCount === 1 && splice.removed.length === 1) {\n      if (splice.removed[0] !== array[splice.index]) {\n        splices.push(splice);\n      }\n\n      return;\n    }\n\n    splices = splices.concat(calcSplices(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n  });\n\n  return splices;\n}\n\nfunction newRecord(type, object, key, oldValue) {\n  return {\n    type: type,\n    object: object,\n    key: key,\n    oldValue: oldValue\n  };\n}\n\nexport function getChangeRecords(map) {\n  let entries = new Array(map.size);\n  let keys = map.keys();\n  let i = 0;\n  let item;\n\n  while (item = keys.next()) {\n    if (item.done) {\n      break;\n    }\n\n    entries[i] = newRecord('added', map, item.value);\n    i++;\n  }\n\n  return entries;\n}\n\nexport let ModifyCollectionObserver = (_dec3 = subscriberCollection(), _dec3(_class2 = class ModifyCollectionObserver {\n  constructor(taskQueue, collection) {\n    this.taskQueue = taskQueue;\n    this.queued = false;\n    this.changeRecords = null;\n    this.oldCollection = null;\n    this.collection = collection;\n    this.lengthPropertyName = collection instanceof Map || collection instanceof Set ? 'size' : 'length';\n  }\n\n  subscribe(context, callable) {\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    this.removeSubscriber(context, callable);\n  }\n\n  addChangeRecord(changeRecord) {\n    if (!this.hasSubscribers() && !this.lengthObserver) {\n      return;\n    }\n\n    if (changeRecord.type === 'splice') {\n      let index = changeRecord.index;\n      let arrayLength = changeRecord.object.length;\n      if (index > arrayLength) {\n        index = arrayLength - changeRecord.addedCount;\n      } else if (index < 0) {\n        index = arrayLength + changeRecord.removed.length + index - changeRecord.addedCount;\n      }\n      if (index < 0) {\n        index = 0;\n      }\n      changeRecord.index = index;\n    }\n\n    if (this.changeRecords === null) {\n      this.changeRecords = [changeRecord];\n    } else {\n      this.changeRecords.push(changeRecord);\n    }\n\n    if (!this.queued) {\n      this.queued = true;\n      this.taskQueue.queueMicroTask(this);\n    }\n  }\n\n  flushChangeRecords() {\n    if (this.changeRecords && this.changeRecords.length || this.oldCollection) {\n      this.call();\n    }\n  }\n\n  reset(oldCollection) {\n    this.oldCollection = oldCollection;\n\n    if (this.hasSubscribers() && !this.queued) {\n      this.queued = true;\n      this.taskQueue.queueMicroTask(this);\n    }\n  }\n\n  getLengthObserver() {\n    return this.lengthObserver || (this.lengthObserver = new CollectionLengthObserver(this.collection));\n  }\n\n  call() {\n    let changeRecords = this.changeRecords;\n    let oldCollection = this.oldCollection;\n    let records;\n\n    this.queued = false;\n    this.changeRecords = [];\n    this.oldCollection = null;\n\n    if (this.hasSubscribers()) {\n      if (oldCollection) {\n        if (this.collection instanceof Map || this.collection instanceof Set) {\n          records = getChangeRecords(oldCollection);\n        } else {\n          records = calcSplices(this.collection, 0, this.collection.length, oldCollection, 0, oldCollection.length);\n        }\n      } else {\n        if (this.collection instanceof Map || this.collection instanceof Set) {\n          records = changeRecords;\n        } else {\n          records = projectArraySplices(this.collection, changeRecords);\n        }\n      }\n\n      this.callSubscribers(records);\n    }\n\n    if (this.lengthObserver) {\n      this.lengthObserver.call(this.collection[this.lengthPropertyName]);\n    }\n  }\n}) || _class2);\n\nexport let CollectionLengthObserver = (_dec4 = subscriberCollection(), _dec4(_class3 = class CollectionLengthObserver {\n  constructor(collection) {\n    this.collection = collection;\n    this.lengthPropertyName = collection instanceof Map || collection instanceof Set ? 'size' : 'length';\n    this.currentValue = collection[this.lengthPropertyName];\n  }\n\n  getValue() {\n    return this.collection[this.lengthPropertyName];\n  }\n\n  setValue(newValue) {\n    this.collection[this.lengthPropertyName] = newValue;\n  }\n\n  subscribe(context, callable) {\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    this.removeSubscriber(context, callable);\n  }\n\n  call(newValue) {\n    let oldValue = this.currentValue;\n    this.callSubscribers(newValue, oldValue);\n    this.currentValue = newValue;\n  }\n}) || _class3);\n\nconst arrayProto = Array.prototype;\nconst pop = arrayProto.pop;\nconst push = arrayProto.push;\nconst reverse = arrayProto.reverse;\nconst shift = arrayProto.shift;\nconst sort = arrayProto.sort;\nconst splice = arrayProto.splice;\nconst unshift = arrayProto.unshift;\n\nif (arrayProto.__au_patched__) {\n  LogManager.getLogger('array-observation').warn('Detected 2nd attempt of patching array from Aurelia binding.' + ' This is probably caused by dependency mismatch between core modules and a 3rd party plugin.' + ' Please see https://github.com/aurelia/cli/pull/906 if you are using webpack.');\n} else {\n  Reflect.defineProperty(arrayProto, '__au_patched__', { value: 1 });\n  arrayProto.pop = function () {\n    let notEmpty = this.length > 0;\n    let methodCallResult = pop.apply(this, arguments);\n    if (notEmpty && this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'delete',\n        object: this,\n        name: this.length,\n        oldValue: methodCallResult\n      });\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.push = function () {\n    let methodCallResult = push.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'splice',\n        object: this,\n        index: this.length - arguments.length,\n        removed: [],\n        addedCount: arguments.length\n      });\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.reverse = function () {\n    let oldArray;\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.flushChangeRecords();\n      oldArray = this.slice();\n    }\n    let methodCallResult = reverse.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.reset(oldArray);\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.shift = function () {\n    let notEmpty = this.length > 0;\n    let methodCallResult = shift.apply(this, arguments);\n    if (notEmpty && this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'delete',\n        object: this,\n        name: 0,\n        oldValue: methodCallResult\n      });\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.sort = function () {\n    let oldArray;\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.flushChangeRecords();\n      oldArray = this.slice();\n    }\n    let methodCallResult = sort.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.reset(oldArray);\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.splice = function () {\n    let methodCallResult = splice.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'splice',\n        object: this,\n        index: +arguments[0],\n        removed: methodCallResult,\n        addedCount: arguments.length > 2 ? arguments.length - 2 : 0\n      });\n    }\n    return methodCallResult;\n  };\n\n  arrayProto.unshift = function () {\n    let methodCallResult = unshift.apply(this, arguments);\n    if (this.__array_observer__ !== undefined) {\n      this.__array_observer__.addChangeRecord({\n        type: 'splice',\n        object: this,\n        index: 0,\n        removed: [],\n        addedCount: arguments.length\n      });\n    }\n    return methodCallResult;\n  };\n}\n\nexport function getArrayObserver(taskQueue, array) {\n  return ModifyArrayObserver.for(taskQueue, array);\n}\n\nlet ModifyArrayObserver = class ModifyArrayObserver extends ModifyCollectionObserver {\n  constructor(taskQueue, array) {\n    super(taskQueue, array);\n  }\n\n  static for(taskQueue, array) {\n    if (!('__array_observer__' in array)) {\n      Reflect.defineProperty(array, '__array_observer__', {\n        value: ModifyArrayObserver.create(taskQueue, array),\n        enumerable: false, configurable: false\n      });\n    }\n    return array.__array_observer__;\n  }\n\n  static create(taskQueue, array) {\n    return new ModifyArrayObserver(taskQueue, array);\n  }\n};\n\n\nexport let Expression = class Expression {\n  constructor() {\n    this.isAssignable = false;\n  }\n\n  evaluate(scope, lookupFunctions, args) {\n    throw new Error(`Binding expression \"${this}\" cannot be evaluated.`);\n  }\n\n  assign(scope, value, lookupFunctions) {\n    throw new Error(`Binding expression \"${this}\" cannot be assigned to.`);\n  }\n\n  toString() {\n    return typeof FEATURE_NO_UNPARSER === 'undefined' ? Unparser.unparse(this) : super.toString();\n  }\n};\n\nexport let BindingBehavior = class BindingBehavior extends Expression {\n  constructor(expression, name, args) {\n    super();\n\n    this.expression = expression;\n    this.name = name;\n    this.args = args;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return this.expression.evaluate(scope, lookupFunctions);\n  }\n\n  assign(scope, value, lookupFunctions) {\n    return this.expression.assign(scope, value, lookupFunctions);\n  }\n\n  accept(visitor) {\n    return visitor.visitBindingBehavior(this);\n  }\n\n  connect(binding, scope) {\n    this.expression.connect(binding, scope);\n  }\n\n  bind(binding, scope, lookupFunctions) {\n    if (this.expression.expression && this.expression.bind) {\n      this.expression.bind(binding, scope, lookupFunctions);\n    }\n    let behavior = lookupFunctions.bindingBehaviors(this.name);\n    if (!behavior) {\n      throw new Error(`No BindingBehavior named \"${this.name}\" was found!`);\n    }\n    let behaviorKey = `behavior-${this.name}`;\n    if (binding[behaviorKey]) {\n      throw new Error(`A binding behavior named \"${this.name}\" has already been applied to \"${this.expression}\"`);\n    }\n    binding[behaviorKey] = behavior;\n    behavior.bind.apply(behavior, [binding, scope].concat(evalList(scope, this.args, binding.lookupFunctions)));\n  }\n\n  unbind(binding, scope) {\n    let behaviorKey = `behavior-${this.name}`;\n    binding[behaviorKey].unbind(binding, scope);\n    binding[behaviorKey] = null;\n    if (this.expression.expression && this.expression.unbind) {\n      this.expression.unbind(binding, scope);\n    }\n  }\n};\n\nexport let ValueConverter = class ValueConverter extends Expression {\n  constructor(expression, name, args) {\n    super();\n\n    this.expression = expression;\n    this.name = name;\n    this.args = args;\n    this.allArgs = [expression].concat(args);\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let converter = lookupFunctions.valueConverters(this.name);\n    if (!converter) {\n      throw new Error(`No ValueConverter named \"${this.name}\" was found!`);\n    }\n\n    if ('toView' in converter) {\n      return converter.toView.apply(converter, evalList(scope, this.allArgs, lookupFunctions));\n    }\n\n    return this.allArgs[0].evaluate(scope, lookupFunctions);\n  }\n\n  assign(scope, value, lookupFunctions) {\n    let converter = lookupFunctions.valueConverters(this.name);\n    if (!converter) {\n      throw new Error(`No ValueConverter named \"${this.name}\" was found!`);\n    }\n\n    if ('fromView' in converter) {\n      value = converter.fromView.apply(converter, [value].concat(evalList(scope, this.args, lookupFunctions)));\n    }\n\n    return this.allArgs[0].assign(scope, value, lookupFunctions);\n  }\n\n  accept(visitor) {\n    return visitor.visitValueConverter(this);\n  }\n\n  connect(binding, scope) {\n    let expressions = this.allArgs;\n    let i = expressions.length;\n    while (i--) {\n      expressions[i].connect(binding, scope);\n    }\n    let converter = binding.lookupFunctions.valueConverters(this.name);\n    if (!converter) {\n      throw new Error(`No ValueConverter named \"${this.name}\" was found!`);\n    }\n    let signals = converter.signals;\n    if (signals === undefined) {\n      return;\n    }\n    i = signals.length;\n    while (i--) {\n      connectBindingToSignal(binding, signals[i]);\n    }\n  }\n};\n\nexport let Assign = class Assign extends Expression {\n  constructor(target, value) {\n    super();\n\n    this.target = target;\n    this.value = value;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return this.target.assign(scope, this.value.evaluate(scope, lookupFunctions));\n  }\n\n  accept(vistor) {\n    vistor.visitAssign(this);\n  }\n\n  connect(binding, scope) {}\n\n  assign(scope, value) {\n    this.value.assign(scope, value);\n    this.target.assign(scope, value);\n  }\n};\n\nexport let Conditional = class Conditional extends Expression {\n  constructor(condition, yes, no) {\n    super();\n\n    this.condition = condition;\n    this.yes = yes;\n    this.no = no;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return !!this.condition.evaluate(scope, lookupFunctions) ? this.yes.evaluate(scope, lookupFunctions) : this.no.evaluate(scope, lookupFunctions);\n  }\n\n  accept(visitor) {\n    return visitor.visitConditional(this);\n  }\n\n  connect(binding, scope) {\n    this.condition.connect(binding, scope);\n    if (this.condition.evaluate(scope)) {\n      this.yes.connect(binding, scope);\n    } else {\n      this.no.connect(binding, scope);\n    }\n  }\n};\n\nexport let AccessThis = class AccessThis extends Expression {\n  constructor(ancestor) {\n    super();\n    this.ancestor = ancestor;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let oc = scope.overrideContext;\n    let i = this.ancestor;\n    while (i-- && oc) {\n      oc = oc.parentOverrideContext;\n    }\n    return i < 1 && oc ? oc.bindingContext : undefined;\n  }\n\n  accept(visitor) {\n    return visitor.visitAccessThis(this);\n  }\n\n  connect(binding, scope) {}\n};\n\nexport let AccessScope = class AccessScope extends Expression {\n  constructor(name, ancestor) {\n    super();\n\n    this.name = name;\n    this.ancestor = ancestor;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let context = getContextFor(this.name, scope, this.ancestor);\n    return context[this.name];\n  }\n\n  assign(scope, value) {\n    let context = getContextFor(this.name, scope, this.ancestor);\n    return context ? context[this.name] = value : undefined;\n  }\n\n  accept(visitor) {\n    return visitor.visitAccessScope(this);\n  }\n\n  connect(binding, scope) {\n    let context = getContextFor(this.name, scope, this.ancestor);\n    binding.observeProperty(context, this.name);\n  }\n};\n\nexport let AccessMember = class AccessMember extends Expression {\n  constructor(object, name) {\n    super();\n\n    this.object = object;\n    this.name = name;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let instance = this.object.evaluate(scope, lookupFunctions);\n    return instance === null || instance === undefined ? instance : instance[this.name];\n  }\n\n  assign(scope, value) {\n    let instance = this.object.evaluate(scope);\n\n    if (instance === null || instance === undefined) {\n      instance = {};\n      this.object.assign(scope, instance);\n    }\n\n    instance[this.name] = value;\n    return value;\n  }\n\n  accept(visitor) {\n    return visitor.visitAccessMember(this);\n  }\n\n  connect(binding, scope) {\n    this.object.connect(binding, scope);\n    let obj = this.object.evaluate(scope);\n    if (obj) {\n      binding.observeProperty(obj, this.name);\n    }\n  }\n};\n\nexport let AccessKeyed = class AccessKeyed extends Expression {\n  constructor(object, key) {\n    super();\n\n    this.object = object;\n    this.key = key;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let instance = this.object.evaluate(scope, lookupFunctions);\n    let lookup = this.key.evaluate(scope, lookupFunctions);\n    return getKeyed(instance, lookup);\n  }\n\n  assign(scope, value) {\n    let instance = this.object.evaluate(scope);\n    let lookup = this.key.evaluate(scope);\n    return setKeyed(instance, lookup, value);\n  }\n\n  accept(visitor) {\n    return visitor.visitAccessKeyed(this);\n  }\n\n  connect(binding, scope) {\n    this.object.connect(binding, scope);\n    let obj = this.object.evaluate(scope);\n    if (obj instanceof Object) {\n      this.key.connect(binding, scope);\n      let key = this.key.evaluate(scope);\n\n      if (key !== null && key !== undefined && !(Array.isArray(obj) && typeof key === 'number')) {\n        binding.observeProperty(obj, key);\n      }\n    }\n  }\n};\n\nexport let CallScope = class CallScope extends Expression {\n  constructor(name, args, ancestor) {\n    super();\n\n    this.name = name;\n    this.args = args;\n    this.ancestor = ancestor;\n  }\n\n  evaluate(scope, lookupFunctions, mustEvaluate) {\n    let args = evalList(scope, this.args, lookupFunctions);\n    let context = getContextFor(this.name, scope, this.ancestor);\n    let func = getFunction(context, this.name, mustEvaluate);\n    if (func) {\n      return func.apply(context, args);\n    }\n    return undefined;\n  }\n\n  accept(visitor) {\n    return visitor.visitCallScope(this);\n  }\n\n  connect(binding, scope) {\n    let args = this.args;\n    let i = args.length;\n    while (i--) {\n      args[i].connect(binding, scope);\n    }\n  }\n};\n\nexport let CallMember = class CallMember extends Expression {\n  constructor(object, name, args) {\n    super();\n\n    this.object = object;\n    this.name = name;\n    this.args = args;\n  }\n\n  evaluate(scope, lookupFunctions, mustEvaluate) {\n    let instance = this.object.evaluate(scope, lookupFunctions);\n    let args = evalList(scope, this.args, lookupFunctions);\n    let func = getFunction(instance, this.name, mustEvaluate);\n    if (func) {\n      return func.apply(instance, args);\n    }\n    return undefined;\n  }\n\n  accept(visitor) {\n    return visitor.visitCallMember(this);\n  }\n\n  connect(binding, scope) {\n    this.object.connect(binding, scope);\n    let obj = this.object.evaluate(scope);\n    if (getFunction(obj, this.name, false)) {\n      let args = this.args;\n      let i = args.length;\n      while (i--) {\n        args[i].connect(binding, scope);\n      }\n    }\n  }\n};\n\nexport let CallFunction = class CallFunction extends Expression {\n  constructor(func, args) {\n    super();\n\n    this.func = func;\n    this.args = args;\n  }\n\n  evaluate(scope, lookupFunctions, mustEvaluate) {\n    let func = this.func.evaluate(scope, lookupFunctions);\n    if (typeof func === 'function') {\n      return func.apply(null, evalList(scope, this.args, lookupFunctions));\n    }\n    if (!mustEvaluate && (func === null || func === undefined)) {\n      return undefined;\n    }\n    throw new Error(`${this.func} is not a function`);\n  }\n\n  accept(visitor) {\n    return visitor.visitCallFunction(this);\n  }\n\n  connect(binding, scope) {\n    this.func.connect(binding, scope);\n    let func = this.func.evaluate(scope);\n    if (typeof func === 'function') {\n      let args = this.args;\n      let i = args.length;\n      while (i--) {\n        args[i].connect(binding, scope);\n      }\n    }\n  }\n};\n\nexport let Binary = class Binary extends Expression {\n  constructor(operation, left, right) {\n    super();\n\n    this.operation = operation;\n    this.left = left;\n    this.right = right;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let left = this.left.evaluate(scope, lookupFunctions);\n\n    switch (this.operation) {\n      case '&&':\n        return left && this.right.evaluate(scope, lookupFunctions);\n      case '||':\n        return left || this.right.evaluate(scope, lookupFunctions);\n    }\n\n    let right = this.right.evaluate(scope, lookupFunctions);\n\n    switch (this.operation) {\n      case '==':\n        return left == right;\n      case '===':\n        return left === right;\n      case '!=':\n        return left != right;\n      case '!==':\n        return left !== right;\n      case 'instanceof':\n        return typeof right === 'function' && left instanceof right;\n      case 'in':\n        return typeof right === 'object' && right !== null && left in right;\n    }\n\n    if (left === null || right === null || left === undefined || right === undefined) {\n      switch (this.operation) {\n        case '+':\n          if (left !== null && left !== undefined) return left;\n          if (right !== null && right !== undefined) return right;\n          return 0;\n        case '-':\n          if (left !== null && left !== undefined) return left;\n          if (right !== null && right !== undefined) return 0 - right;\n          return 0;\n      }\n\n      return null;\n    }\n\n    switch (this.operation) {\n      case '+':\n        return autoConvertAdd(left, right);\n      case '-':\n        return left - right;\n      case '*':\n        return left * right;\n      case '/':\n        return left / right;\n      case '%':\n        return left % right;\n      case '<':\n        return left < right;\n      case '>':\n        return left > right;\n      case '<=':\n        return left <= right;\n      case '>=':\n        return left >= right;\n      case '^':\n        return left ^ right;\n    }\n\n    throw new Error(`Internal error [${this.operation}] not handled`);\n  }\n\n  accept(visitor) {\n    return visitor.visitBinary(this);\n  }\n\n  connect(binding, scope) {\n    this.left.connect(binding, scope);\n    let left = this.left.evaluate(scope);\n    if (this.operation === '&&' && !left || this.operation === '||' && left) {\n      return;\n    }\n    this.right.connect(binding, scope);\n  }\n};\n\nexport let Unary = class Unary extends Expression {\n  constructor(operation, expression) {\n    super();\n\n    this.operation = operation;\n    this.expression = expression;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    switch (this.operation) {\n      case '!':\n        return !this.expression.evaluate(scope, lookupFunctions);\n      case 'typeof':\n        return typeof this.expression.evaluate(scope, lookupFunctions);\n      case 'void':\n        return void this.expression.evaluate(scope, lookupFunctions);\n    }\n\n    throw new Error(`Internal error [${this.operation}] not handled`);\n  }\n\n  accept(visitor) {\n    return visitor.visitPrefix(this);\n  }\n\n  connect(binding, scope) {\n    this.expression.connect(binding, scope);\n  }\n};\n\nexport let LiteralPrimitive = class LiteralPrimitive extends Expression {\n  constructor(value) {\n    super();\n\n    this.value = value;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return this.value;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralPrimitive(this);\n  }\n\n  connect(binding, scope) {}\n};\n\nexport let LiteralString = class LiteralString extends Expression {\n  constructor(value) {\n    super();\n\n    this.value = value;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return this.value;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralString(this);\n  }\n\n  connect(binding, scope) {}\n};\n\nexport let LiteralTemplate = class LiteralTemplate extends Expression {\n  constructor(cooked, expressions, raw, tag) {\n    super();\n    this.cooked = cooked;\n    this.expressions = expressions || [];\n    this.length = this.expressions.length;\n    this.tagged = tag !== undefined;\n    if (this.tagged) {\n      this.cooked.raw = raw;\n      this.tag = tag;\n      if (tag instanceof AccessScope) {\n        this.contextType = 'Scope';\n      } else if (tag instanceof AccessMember || tag instanceof AccessKeyed) {\n        this.contextType = 'Object';\n      } else {\n        throw new Error(`${this.tag} is not a valid template tag`);\n      }\n    }\n  }\n\n  getScopeContext(scope, lookupFunctions) {\n    return getContextFor(this.tag.name, scope, this.tag.ancestor);\n  }\n\n  getObjectContext(scope, lookupFunctions) {\n    return this.tag.object.evaluate(scope, lookupFunctions);\n  }\n\n  evaluate(scope, lookupFunctions, mustEvaluate) {\n    const results = new Array(this.length);\n    for (let i = 0; i < this.length; i++) {\n      results[i] = this.expressions[i].evaluate(scope, lookupFunctions);\n    }\n    if (this.tagged) {\n      const func = this.tag.evaluate(scope, lookupFunctions);\n      if (typeof func === 'function') {\n        const context = this[`get${this.contextType}Context`](scope, lookupFunctions);\n        return func.call(context, this.cooked, ...results);\n      }\n      if (!mustEvaluate) {\n        return null;\n      }\n      throw new Error(`${this.tag} is not a function`);\n    }\n    let result = this.cooked[0];\n    for (let i = 0; i < this.length; i++) {\n      result = String.prototype.concat(result, results[i], this.cooked[i + 1]);\n    }\n    return result;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralTemplate(this);\n  }\n\n  connect(binding, scope) {\n    for (let i = 0; i < this.length; i++) {\n      this.expressions[i].connect(binding, scope);\n    }\n    if (this.tagged) {\n      this.tag.connect(binding, scope);\n    }\n  }\n};\n\nexport let LiteralArray = class LiteralArray extends Expression {\n  constructor(elements) {\n    super();\n\n    this.elements = elements;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let elements = this.elements;\n    let result = [];\n\n    for (let i = 0, length = elements.length; i < length; ++i) {\n      result[i] = elements[i].evaluate(scope, lookupFunctions);\n    }\n\n    return result;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralArray(this);\n  }\n\n  connect(binding, scope) {\n    let length = this.elements.length;\n    for (let i = 0; i < length; i++) {\n      this.elements[i].connect(binding, scope);\n    }\n  }\n};\n\nexport let LiteralObject = class LiteralObject extends Expression {\n  constructor(keys, values) {\n    super();\n\n    this.keys = keys;\n    this.values = values;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    let instance = {};\n    let keys = this.keys;\n    let values = this.values;\n\n    for (let i = 0, length = keys.length; i < length; ++i) {\n      instance[keys[i]] = values[i].evaluate(scope, lookupFunctions);\n    }\n\n    return instance;\n  }\n\n  accept(visitor) {\n    return visitor.visitLiteralObject(this);\n  }\n\n  connect(binding, scope) {\n    let length = this.keys.length;\n    for (let i = 0; i < length; i++) {\n      this.values[i].connect(binding, scope);\n    }\n  }\n};\n\nfunction evalList(scope, list, lookupFunctions) {\n  const length = list.length;\n  const result = [];\n  for (let i = 0; i < length; i++) {\n    result[i] = list[i].evaluate(scope, lookupFunctions);\n  }\n  return result;\n}\n\nfunction autoConvertAdd(a, b) {\n  if (a !== null && b !== null) {\n    if (typeof a === 'string' && typeof b !== 'string') {\n      return a + b.toString();\n    }\n\n    if (typeof a !== 'string' && typeof b === 'string') {\n      return a.toString() + b;\n    }\n\n    return a + b;\n  }\n\n  if (a !== null) {\n    return a;\n  }\n\n  if (b !== null) {\n    return b;\n  }\n\n  return 0;\n}\n\nfunction getFunction(obj, name, mustExist) {\n  let func = obj === null || obj === undefined ? null : obj[name];\n  if (typeof func === 'function') {\n    return func;\n  }\n  if (!mustExist && (func === null || func === undefined)) {\n    return null;\n  }\n  throw new Error(`${name} is not a function`);\n}\n\nfunction getKeyed(obj, key) {\n  if (Array.isArray(obj)) {\n    return obj[parseInt(key, 10)];\n  } else if (obj) {\n    return obj[key];\n  } else if (obj === null || obj === undefined) {\n    return undefined;\n  }\n\n  return obj[key];\n}\n\nfunction setKeyed(obj, key, value) {\n  if (Array.isArray(obj)) {\n    let index = parseInt(key, 10);\n\n    if (obj.length <= index) {\n      obj.length = index + 1;\n    }\n\n    obj[index] = value;\n  } else {\n    obj[key] = value;\n  }\n\n  return value;\n}\n\nexport let Unparser = null;\n\nif (typeof FEATURE_NO_UNPARSER === 'undefined') {\n  Unparser = class {\n    constructor(buffer) {\n      this.buffer = buffer;\n    }\n\n    static unparse(expression) {\n      let buffer = [];\n      let visitor = new Unparser(buffer);\n\n      expression.accept(visitor);\n\n      return buffer.join('');\n    }\n\n    write(text) {\n      this.buffer.push(text);\n    }\n\n    writeArgs(args) {\n      this.write('(');\n\n      for (let i = 0, length = args.length; i < length; ++i) {\n        if (i !== 0) {\n          this.write(',');\n        }\n\n        args[i].accept(this);\n      }\n\n      this.write(')');\n    }\n\n    visitBindingBehavior(behavior) {\n      let args = behavior.args;\n\n      behavior.expression.accept(this);\n      this.write(`&${behavior.name}`);\n\n      for (let i = 0, length = args.length; i < length; ++i) {\n        this.write(':');\n        args[i].accept(this);\n      }\n    }\n\n    visitValueConverter(converter) {\n      let args = converter.args;\n\n      converter.expression.accept(this);\n      this.write(`|${converter.name}`);\n\n      for (let i = 0, length = args.length; i < length; ++i) {\n        this.write(':');\n        args[i].accept(this);\n      }\n    }\n\n    visitAssign(assign) {\n      assign.target.accept(this);\n      this.write('=');\n      assign.value.accept(this);\n    }\n\n    visitConditional(conditional) {\n      conditional.condition.accept(this);\n      this.write('?');\n      conditional.yes.accept(this);\n      this.write(':');\n      conditional.no.accept(this);\n    }\n\n    visitAccessThis(access) {\n      if (access.ancestor === 0) {\n        this.write('$this');\n        return;\n      }\n      this.write('$parent');\n      let i = access.ancestor - 1;\n      while (i--) {\n        this.write('.$parent');\n      }\n    }\n\n    visitAccessScope(access) {\n      let i = access.ancestor;\n      while (i--) {\n        this.write('$parent.');\n      }\n      this.write(access.name);\n    }\n\n    visitAccessMember(access) {\n      access.object.accept(this);\n      this.write(`.${access.name}`);\n    }\n\n    visitAccessKeyed(access) {\n      access.object.accept(this);\n      this.write('[');\n      access.key.accept(this);\n      this.write(']');\n    }\n\n    visitCallScope(call) {\n      let i = call.ancestor;\n      while (i--) {\n        this.write('$parent.');\n      }\n      this.write(call.name);\n      this.writeArgs(call.args);\n    }\n\n    visitCallFunction(call) {\n      call.func.accept(this);\n      this.writeArgs(call.args);\n    }\n\n    visitCallMember(call) {\n      call.object.accept(this);\n      this.write(`.${call.name}`);\n      this.writeArgs(call.args);\n    }\n\n    visitPrefix(prefix) {\n      this.write(`(${prefix.operation}`);\n      if (prefix.operation.charCodeAt(0) >= 97) {\n        this.write(' ');\n      }\n      prefix.expression.accept(this);\n      this.write(')');\n    }\n\n    visitBinary(binary) {\n      binary.left.accept(this);\n      if (binary.operation.charCodeAt(0) === 105) {\n        this.write(` ${binary.operation} `);\n      } else {\n        this.write(binary.operation);\n      }\n      binary.right.accept(this);\n    }\n\n    visitLiteralPrimitive(literal) {\n      this.write(`${literal.value}`);\n    }\n\n    visitLiteralArray(literal) {\n      let elements = literal.elements;\n\n      this.write('[');\n\n      for (let i = 0, length = elements.length; i < length; ++i) {\n        if (i !== 0) {\n          this.write(',');\n        }\n\n        elements[i].accept(this);\n      }\n\n      this.write(']');\n    }\n\n    visitLiteralObject(literal) {\n      let keys = literal.keys;\n      let values = literal.values;\n\n      this.write('{');\n\n      for (let i = 0, length = keys.length; i < length; ++i) {\n        if (i !== 0) {\n          this.write(',');\n        }\n\n        this.write(`'${keys[i]}':`);\n        values[i].accept(this);\n      }\n\n      this.write('}');\n    }\n\n    visitLiteralString(literal) {\n      let escaped = literal.value.replace(/'/g, \"\\'\");\n      this.write(`'${escaped}'`);\n    }\n\n    visitLiteralTemplate(literal) {\n      const { cooked, expressions } = literal;\n      const length = expressions.length;\n      this.write('`');\n      this.write(cooked[0]);\n      for (let i = 0; i < length; i++) {\n        expressions[i].accept(this);\n        this.write(cooked[i + 1]);\n      }\n      this.write('`');\n    }\n  };\n}\n\nexport let ExpressionCloner = class ExpressionCloner {\n  cloneExpressionArray(array) {\n    let clonedArray = [];\n    let i = array.length;\n    while (i--) {\n      clonedArray[i] = array[i].accept(this);\n    }\n    return clonedArray;\n  }\n\n  visitBindingBehavior(behavior) {\n    return new BindingBehavior(behavior.expression.accept(this), behavior.name, this.cloneExpressionArray(behavior.args));\n  }\n\n  visitValueConverter(converter) {\n    return new ValueConverter(converter.expression.accept(this), converter.name, this.cloneExpressionArray(converter.args));\n  }\n\n  visitAssign(assign) {\n    return new Assign(assign.target.accept(this), assign.value.accept(this));\n  }\n\n  visitConditional(conditional) {\n    return new Conditional(conditional.condition.accept(this), conditional.yes.accept(this), conditional.no.accept(this));\n  }\n\n  visitAccessThis(access) {\n    return new AccessThis(access.ancestor);\n  }\n\n  visitAccessScope(access) {\n    return new AccessScope(access.name, access.ancestor);\n  }\n\n  visitAccessMember(access) {\n    return new AccessMember(access.object.accept(this), access.name);\n  }\n\n  visitAccessKeyed(access) {\n    return new AccessKeyed(access.object.accept(this), access.key.accept(this));\n  }\n\n  visitCallScope(call) {\n    return new CallScope(call.name, this.cloneExpressionArray(call.args), call.ancestor);\n  }\n\n  visitCallFunction(call) {\n    return new CallFunction(call.func.accept(this), this.cloneExpressionArray(call.args));\n  }\n\n  visitCallMember(call) {\n    return new CallMember(call.object.accept(this), call.name, this.cloneExpressionArray(call.args));\n  }\n\n  visitUnary(unary) {\n    return new Unary(prefix.operation, prefix.expression.accept(this));\n  }\n\n  visitBinary(binary) {\n    return new Binary(binary.operation, binary.left.accept(this), binary.right.accept(this));\n  }\n\n  visitLiteralPrimitive(literal) {\n    return new LiteralPrimitive(literal);\n  }\n\n  visitLiteralArray(literal) {\n    return new LiteralArray(this.cloneExpressionArray(literal.elements));\n  }\n\n  visitLiteralObject(literal) {\n    return new LiteralObject(literal.keys, this.cloneExpressionArray(literal.values));\n  }\n\n  visitLiteralString(literal) {\n    return new LiteralString(literal.value);\n  }\n\n  visitLiteralTemplate(literal) {\n    return new LiteralTemplate(literal.cooked, this.cloneExpressionArray(literal.expressions), literal.raw, literal.tag && literal.tag.accept(this));\n  }\n};\n\nexport function cloneExpression(expression) {\n  let visitor = new ExpressionCloner();\n  return expression.accept(visitor);\n}\n\nexport const bindingMode = {\n  oneTime: 0,\n  toView: 1,\n  oneWay: 1,\n  twoWay: 2,\n  fromView: 3\n};\n\nexport let Parser = class Parser {\n  constructor() {\n    this.cache = Object.create(null);\n  }\n\n  parse(src) {\n    src = src || '';\n\n    return this.cache[src] || (this.cache[src] = new ParserImplementation(src).parseBindingBehavior());\n  }\n};\n\nconst fromCharCode = String.fromCharCode;\n\nexport let ParserImplementation = class ParserImplementation {\n  get raw() {\n    return this.src.slice(this.start, this.idx);\n  }\n\n  constructor(src) {\n    this.idx = 0;\n\n    this.start = 0;\n\n    this.src = src;\n    this.len = src.length;\n\n    this.tkn = T$EOF;\n\n    this.val = undefined;\n\n    this.ch = src.charCodeAt(0);\n  }\n\n  parseBindingBehavior() {\n    this.nextToken();\n    if (this.tkn & T$ExpressionTerminal) {\n      this.err('Invalid start of expression');\n    }\n    let result = this.parseValueConverter();\n    while (this.opt(T$Ampersand)) {\n      result = new BindingBehavior(result, this.val, this.parseVariadicArgs());\n    }\n    if (this.tkn !== T$EOF) {\n      this.err(`Unconsumed token ${this.raw}`);\n    }\n    return result;\n  }\n\n  parseValueConverter() {\n    let result = this.parseExpression();\n    while (this.opt(T$Bar)) {\n      result = new ValueConverter(result, this.val, this.parseVariadicArgs());\n    }\n    return result;\n  }\n\n  parseVariadicArgs() {\n    this.nextToken();\n    const result = [];\n    while (this.opt(T$Colon)) {\n      result.push(this.parseExpression());\n    }\n    return result;\n  }\n\n  parseExpression() {\n    let exprStart = this.idx;\n    let result = this.parseConditional();\n\n    while (this.tkn === T$Eq) {\n      if (!result.isAssignable) {\n        this.err(`Expression ${this.src.slice(exprStart, this.start)} is not assignable`);\n      }\n      this.nextToken();\n      exprStart = this.idx;\n      result = new Assign(result, this.parseConditional());\n    }\n    return result;\n  }\n\n  parseConditional() {\n    let result = this.parseBinary(0);\n\n    if (this.opt(T$Question)) {\n      let yes = this.parseExpression();\n      this.expect(T$Colon);\n      result = new Conditional(result, yes, this.parseExpression());\n    }\n    return result;\n  }\n\n  parseBinary(minPrecedence) {\n    let left = this.parseLeftHandSide(0);\n\n    while (this.tkn & T$BinaryOp) {\n      const opToken = this.tkn;\n      if ((opToken & T$Precedence) <= minPrecedence) {\n        break;\n      }\n      this.nextToken();\n      left = new Binary(TokenValues[opToken & T$TokenMask], left, this.parseBinary(opToken & T$Precedence));\n    }\n    return left;\n  }\n\n  parseLeftHandSide(context) {\n    let result;\n\n    primary: switch (this.tkn) {\n      case T$Plus:\n        this.nextToken();\n        return this.parseLeftHandSide(0);\n      case T$Minus:\n        this.nextToken();\n        return new Binary('-', new LiteralPrimitive(0), this.parseLeftHandSide(0));\n      case T$Bang:\n      case T$TypeofKeyword:\n      case T$VoidKeyword:\n        const op = TokenValues[this.tkn & T$TokenMask];\n        this.nextToken();\n        return new Unary(op, this.parseLeftHandSide(0));\n      case T$ParentScope:\n        {\n          do {\n            this.nextToken();\n            context++;\n            if (this.opt(T$Period)) {\n              if (this.tkn === T$Period) {\n                this.err();\n              }\n              continue;\n            } else if (this.tkn & T$AccessScopeTerminal) {\n              result = new AccessThis(context & C$Ancestor);\n\n              context = context & C$ShorthandProp | C$This;\n              break primary;\n            } else {\n              this.err();\n            }\n          } while (this.tkn === T$ParentScope);\n        }\n\n      case T$Identifier:\n        {\n          result = new AccessScope(this.val, context & C$Ancestor);\n          this.nextToken();\n          context = context & C$ShorthandProp | C$Scope;\n          break;\n        }\n      case T$ThisScope:\n        this.nextToken();\n        result = new AccessThis(0);\n        context = context & C$ShorthandProp | C$This;\n        break;\n      case T$LParen:\n        this.nextToken();\n        result = this.parseExpression();\n        this.expect(T$RParen);\n        context = C$Primary;\n        break;\n      case T$LBracket:\n        {\n          this.nextToken();\n          const elements = [];\n          if (this.tkn !== T$RBracket) {\n            do {\n              elements.push(this.parseExpression());\n            } while (this.opt(T$Comma));\n          }\n          this.expect(T$RBracket);\n          result = new LiteralArray(elements);\n          context = C$Primary;\n          break;\n        }\n      case T$LBrace:\n        {\n          const keys = [];\n          const values = [];\n          this.nextToken();\n          while (this.tkn !== T$RBrace) {\n            if (this.tkn & T$IdentifierOrKeyword) {\n              const { ch, tkn, idx } = this;\n              keys.push(this.val);\n              this.nextToken();\n              if (this.opt(T$Colon)) {\n                values.push(this.parseExpression());\n              } else {\n                this.ch = ch;\n                this.tkn = tkn;\n                this.idx = idx;\n                values.push(this.parseLeftHandSide(C$ShorthandProp));\n              }\n            } else if (this.tkn & T$Literal) {\n              keys.push(this.val);\n              this.nextToken();\n              this.expect(T$Colon);\n              values.push(this.parseExpression());\n            } else {\n              this.err();\n            }\n            if (this.tkn !== T$RBrace) {\n              this.expect(T$Comma);\n            }\n          }\n          this.expect(T$RBrace);\n          result = new LiteralObject(keys, values);\n          context = C$Primary;\n          break;\n        }\n      case T$StringLiteral:\n        result = new LiteralString(this.val);\n        this.nextToken();\n        context = C$Primary;\n        break;\n      case T$TemplateTail:\n        result = new LiteralTemplate([this.val]);\n        this.nextToken();\n        context = C$Primary;\n        break;\n      case T$TemplateContinuation:\n        result = this.parseTemplate(0);\n        context = C$Primary;\n        break;\n      case T$NumericLiteral:\n        {\n          result = new LiteralPrimitive(this.val);\n          this.nextToken();\n\n          break;\n        }\n      case T$NullKeyword:\n      case T$UndefinedKeyword:\n      case T$TrueKeyword:\n      case T$FalseKeyword:\n        result = new LiteralPrimitive(TokenValues[this.tkn & T$TokenMask]);\n        this.nextToken();\n        context = C$Primary;\n        break;\n      default:\n        if (this.idx >= this.len) {\n          this.err('Unexpected end of expression');\n        } else {\n          this.err();\n        }\n    }\n\n    if (context & C$ShorthandProp) {\n      return result;\n    }\n\n    let name = this.val;\n    while (this.tkn & T$MemberOrCallExpression) {\n      switch (this.tkn) {\n        case T$Period:\n          this.nextToken();\n          if (!(this.tkn & T$IdentifierOrKeyword)) {\n            this.err();\n          }\n          name = this.val;\n          this.nextToken();\n\n          context = context & C$Primary | (context & (C$This | C$Scope)) << 1 | context & C$Member | (context & C$Keyed) >> 1 | (context & C$Call) >> 2;\n          if (this.tkn === T$LParen) {\n            continue;\n          }\n          if (context & C$Scope) {\n            result = new AccessScope(name, result.ancestor);\n          } else {\n            result = new AccessMember(result, name);\n          }\n          continue;\n        case T$LBracket:\n          this.nextToken();\n          context = C$Keyed;\n          result = new AccessKeyed(result, this.parseExpression());\n          this.expect(T$RBracket);\n          break;\n        case T$LParen:\n          this.nextToken();\n          const args = [];\n          while (this.tkn !== T$RParen) {\n            args.push(this.parseExpression());\n            if (!this.opt(T$Comma)) {\n              break;\n            }\n          }\n          this.expect(T$RParen);\n          if (context & C$Scope) {\n            result = new CallScope(name, args, result.ancestor);\n          } else if (context & (C$Member | C$Primary)) {\n            result = new CallMember(result, name, args);\n          } else {\n            result = new CallFunction(result, args);\n          }\n          context = C$Call;\n          break;\n        case T$TemplateTail:\n          result = new LiteralTemplate([this.val], [], [this.raw], result);\n          this.nextToken();\n          break;\n        case T$TemplateContinuation:\n          result = this.parseTemplate(context | C$Tagged, result);\n      }\n    }\n\n    return result;\n  }\n\n  parseTemplate(context, func) {\n    const cooked = [this.val];\n    const raw = context & C$Tagged ? [this.raw] : undefined;\n    this.expect(T$TemplateContinuation);\n    const expressions = [this.parseExpression()];\n\n    while ((this.tkn = this.scanTemplateTail()) !== T$TemplateTail) {\n      cooked.push(this.val);\n      if (context & C$Tagged) {\n        raw.push(this.raw);\n      }\n      this.expect(T$TemplateContinuation);\n      expressions.push(this.parseExpression());\n    }\n\n    cooked.push(this.val);\n    if (context & C$Tagged) {\n      raw.push(this.raw);\n    }\n    this.nextToken();\n    return new LiteralTemplate(cooked, expressions, raw, func);\n  }\n\n  nextToken() {\n    while (this.idx < this.len) {\n      if (this.ch <= 0x20) {\n        this.next();\n        continue;\n      }\n      this.start = this.idx;\n      if (this.ch === 0x24 || this.ch >= 0x61 && this.ch <= 0x7A) {\n        this.tkn = this.scanIdentifier();\n        return;\n      }\n\n      if ((this.tkn = CharScanners[this.ch](this)) !== null) {\n        return;\n      }\n    }\n    this.tkn = T$EOF;\n  }\n\n  next() {\n    return this.ch = this.src.charCodeAt(++this.idx);\n  }\n\n  scanIdentifier() {\n    while (AsciiIdParts.has(this.next()) || this.ch > 0x7F && IdParts[this.ch]) {}\n\n    return KeywordLookup[this.val = this.raw] || T$Identifier;\n  }\n\n  scanNumber(isFloat) {\n    if (isFloat) {\n      this.val = 0;\n    } else {\n      this.val = this.ch - 0x30;\n      while (this.next() <= 0x39 && this.ch >= 0x30) {\n        this.val = this.val * 10 + this.ch - 0x30;\n      }\n    }\n\n    if (isFloat || this.ch === 0x2E) {\n      if (!isFloat) {\n        this.next();\n      }\n      const start = this.idx;\n      let value = this.ch - 0x30;\n      while (this.next() <= 0x39 && this.ch >= 0x30) {\n        value = value * 10 + this.ch - 0x30;\n      }\n      this.val = this.val + value / Math.pow(10, this.idx - start);\n    }\n\n    if (this.ch === 0x65 || this.ch === 0x45) {\n      const start = this.idx;\n\n      this.next();\n      if (this.ch === 0x2D || this.ch === 0x2B) {\n        this.next();\n      }\n\n      if (!(this.ch >= 0x30 && this.ch <= 0x39)) {\n        this.idx = start;\n        this.err('Invalid exponent');\n      }\n      while (this.next() <= 0x39 && this.ch >= 0x30) {}\n      this.val = parseFloat(this.src.slice(this.start, this.idx));\n    }\n\n    return T$NumericLiteral;\n  }\n\n  scanString() {\n    let quote = this.ch;\n    this.next();\n\n    let buffer;\n    let marker = this.idx;\n\n    while (this.ch !== quote) {\n      if (this.ch === 0x5C) {\n        if (!buffer) {\n          buffer = [];\n        }\n\n        buffer.push(this.src.slice(marker, this.idx));\n\n        this.next();\n\n        let unescaped;\n\n        if (this.ch === 0x75) {\n          this.next();\n\n          if (this.idx + 4 < this.len) {\n            let hex = this.src.slice(this.idx, this.idx + 4);\n\n            if (!/[A-Z0-9]{4}/i.test(hex)) {\n              this.err(`Invalid unicode escape [\\\\u${hex}]`);\n            }\n\n            unescaped = parseInt(hex, 16);\n            this.idx += 4;\n            this.ch = this.src.charCodeAt(this.idx);\n          } else {\n            this.err();\n          }\n        } else {\n          unescaped = unescape(this.ch);\n          this.next();\n        }\n\n        buffer.push(fromCharCode(unescaped));\n        marker = this.idx;\n      } else if (this.ch === 0 || this.idx >= this.len) {\n        this.err('Unterminated quote');\n      } else {\n        this.next();\n      }\n    }\n\n    let last = this.src.slice(marker, this.idx);\n    this.next();\n    let unescaped = last;\n\n    if (buffer !== null && buffer !== undefined) {\n      buffer.push(last);\n      unescaped = buffer.join('');\n    }\n\n    this.val = unescaped;\n    return T$StringLiteral;\n  }\n\n  scanTemplate() {\n    let tail = true;\n    let result = '';\n\n    while (this.next() !== 0x60) {\n      if (this.ch === 0x24) {\n        if (this.idx + 1 < this.len && this.src.charCodeAt(this.idx + 1) === 0x7B) {\n          this.idx++;\n          tail = false;\n          break;\n        } else {\n          result += '$';\n        }\n      } else if (this.ch === 0x5C) {\n        result += fromCharCode(unescape(this.next()));\n      } else if (this.ch === 0 || this.idx >= this.len) {\n        this.err('Unterminated template literal');\n      } else {\n        result += fromCharCode(this.ch);\n      }\n    }\n\n    this.next();\n    this.val = result;\n    if (tail) {\n      return T$TemplateTail;\n    }\n    return T$TemplateContinuation;\n  }\n\n  scanTemplateTail() {\n    if (this.idx >= this.len) {\n      this.err('Unterminated template');\n    }\n    this.idx--;\n    return this.scanTemplate();\n  }\n\n  err(message = `Unexpected token ${this.raw}`, column = this.start) {\n    throw new Error(`Parser Error: ${message} at column ${column} in expression [${this.src}]`);\n  }\n\n  opt(token) {\n    if (this.tkn === token) {\n      this.nextToken();\n      return true;\n    }\n\n    return false;\n  }\n\n  expect(token) {\n    if (this.tkn === token) {\n      this.nextToken();\n    } else {\n      this.err(`Missing expected token ${TokenValues[token & T$TokenMask]}`, this.idx);\n    }\n  }\n};\n\nfunction unescape(code) {\n  switch (code) {\n    case 0x66:\n      return 0xC;\n    case 0x6E:\n      return 0xA;\n    case 0x72:\n      return 0xD;\n    case 0x74:\n      return 0x9;\n    case 0x76:\n      return 0xB;\n    default:\n      return code;\n  }\n}\n\nconst C$This = 1 << 10;\nconst C$Scope = 1 << 11;\nconst C$Member = 1 << 12;\nconst C$Keyed = 1 << 13;\nconst C$Call = 1 << 14;\nconst C$Primary = 1 << 15;\nconst C$ShorthandProp = 1 << 16;\nconst C$Tagged = 1 << 17;\n\nconst C$Ancestor = (1 << 9) - 1;\n\nconst T$TokenMask = (1 << 6) - 1;\n\nconst T$PrecShift = 6;\n\nconst T$Precedence = 7 << T$PrecShift;\n\nconst T$ExpressionTerminal = 1 << 11;\n\nconst T$ClosingToken = 1 << 12;\n\nconst T$OpeningToken = 1 << 13;\n\nconst T$AccessScopeTerminal = 1 << 14;\nconst T$Keyword = 1 << 15;\nconst T$EOF = 1 << 16 | T$AccessScopeTerminal | T$ExpressionTerminal;\nconst T$Identifier = 1 << 17;\nconst T$IdentifierOrKeyword = T$Identifier | T$Keyword;\nconst T$Literal = 1 << 18;\nconst T$NumericLiteral = 1 << 19 | T$Literal;\nconst T$StringLiteral = 1 << 20 | T$Literal;\nconst T$BinaryOp = 1 << 21;\n\nconst T$UnaryOp = 1 << 22;\n\nconst T$MemberExpression = 1 << 23;\n\nconst T$MemberOrCallExpression = 1 << 24;\nconst T$TemplateTail = 1 << 25 | T$MemberOrCallExpression;\nconst T$TemplateContinuation = 1 << 26 | T$MemberOrCallExpression;\n\nconst T$FalseKeyword = 0 | T$Keyword | T$Literal;\nconst T$TrueKeyword = 1 | T$Keyword | T$Literal;\nconst T$NullKeyword = 2 | T$Keyword | T$Literal;\nconst T$UndefinedKeyword = 3 | T$Keyword | T$Literal;\nconst T$ThisScope = 4 | T$IdentifierOrKeyword;\nconst T$ParentScope = 5 | T$IdentifierOrKeyword;\n\nconst T$LParen = 6 | T$OpeningToken | T$AccessScopeTerminal | T$MemberOrCallExpression;\nconst T$LBrace = 7 | T$OpeningToken;\nconst T$Period = 8 | T$MemberExpression | T$MemberOrCallExpression;\nconst T$RBrace = 9 | T$AccessScopeTerminal | T$ClosingToken | T$ExpressionTerminal;\nconst T$RParen = 10 | T$AccessScopeTerminal | T$ClosingToken | T$ExpressionTerminal;\nconst T$Comma = 11 | T$AccessScopeTerminal;\nconst T$LBracket = 12 | T$OpeningToken | T$AccessScopeTerminal | T$MemberExpression | T$MemberOrCallExpression;\nconst T$RBracket = 13 | T$ClosingToken | T$ExpressionTerminal;\nconst T$Colon = 14 | T$AccessScopeTerminal;\nconst T$Question = 15;\n\nconst T$Ampersand = 18 | T$AccessScopeTerminal;\nconst T$Bar = 19 | T$AccessScopeTerminal;\nconst T$BarBar = 20 | 1 << T$PrecShift | T$BinaryOp;\nconst T$AmpersandAmpersand = 21 | 2 << T$PrecShift | T$BinaryOp;\nconst T$Caret = 22 | 3 << T$PrecShift | T$BinaryOp;\nconst T$EqEq = 23 | 4 << T$PrecShift | T$BinaryOp;\nconst T$BangEq = 24 | 4 << T$PrecShift | T$BinaryOp;\nconst T$EqEqEq = 25 | 4 << T$PrecShift | T$BinaryOp;\nconst T$BangEqEq = 26 | 4 << T$PrecShift | T$BinaryOp;\nconst T$Lt = 27 | 5 << T$PrecShift | T$BinaryOp;\nconst T$Gt = 28 | 5 << T$PrecShift | T$BinaryOp;\nconst T$LtEq = 29 | 5 << T$PrecShift | T$BinaryOp;\nconst T$GtEq = 30 | 5 << T$PrecShift | T$BinaryOp;\nconst T$InKeyword = 31 | 5 << T$PrecShift | T$BinaryOp | T$Keyword;\nconst T$InstanceOfKeyword = 32 | 5 << T$PrecShift | T$BinaryOp | T$Keyword;\nconst T$Plus = 33 | 6 << T$PrecShift | T$BinaryOp | T$UnaryOp;\nconst T$Minus = 34 | 6 << T$PrecShift | T$BinaryOp | T$UnaryOp;\nconst T$TypeofKeyword = 35 | T$UnaryOp | T$Keyword;\nconst T$VoidKeyword = 36 | T$UnaryOp | T$Keyword;\nconst T$Star = 37 | 7 << T$PrecShift | T$BinaryOp;\nconst T$Percent = 38 | 7 << T$PrecShift | T$BinaryOp;\nconst T$Slash = 39 | 7 << T$PrecShift | T$BinaryOp;\nconst T$Eq = 40;\nconst T$Bang = 41 | T$UnaryOp;\n\nconst KeywordLookup = Object.create(null);\nKeywordLookup.true = T$TrueKeyword;\nKeywordLookup.null = T$NullKeyword;\nKeywordLookup.false = T$FalseKeyword;\nKeywordLookup.undefined = T$UndefinedKeyword;\nKeywordLookup.$this = T$ThisScope;\nKeywordLookup.$parent = T$ParentScope;\nKeywordLookup.in = T$InKeyword;\nKeywordLookup.instanceof = T$InstanceOfKeyword;\nKeywordLookup.typeof = T$TypeofKeyword;\nKeywordLookup.void = T$VoidKeyword;\n\nconst TokenValues = [false, true, null, undefined, '$this', '$parent', '(', '{', '.', '}', ')', ',', '[', ']', ':', '?', '\\'', '\"', '&', '|', '||', '&&', '^', '==', '!=', '===', '!==', '<', '>', '<=', '>=', 'in', 'instanceof', '+', '-', 'typeof', 'void', '*', '%', '/', '=', '!'];\n\nconst codes = {\n  AsciiIdPart: [0x24, 0, 0x30, 0x3A, 0x41, 0x5B, 0x5F, 0, 0x61, 0x7B],\n  IdStart: [0x24, 0, 0x41, 0x5B, 0x5F, 0, 0x61, 0x7B, 0xAA, 0, 0xBA, 0, 0xC0, 0xD7, 0xD8, 0xF7, 0xF8, 0x2B9, 0x2E0, 0x2E5, 0x1D00, 0x1D26, 0x1D2C, 0x1D5D, 0x1D62, 0x1D66, 0x1D6B, 0x1D78, 0x1D79, 0x1DBF, 0x1E00, 0x1F00, 0x2071, 0, 0x207F, 0, 0x2090, 0x209D, 0x212A, 0x212C, 0x2132, 0, 0x214E, 0, 0x2160, 0x2189, 0x2C60, 0x2C80, 0xA722, 0xA788, 0xA78B, 0xA7AF, 0xA7B0, 0xA7B8, 0xA7F7, 0xA800, 0xAB30, 0xAB5B, 0xAB5C, 0xAB65, 0xFB00, 0xFB07, 0xFF21, 0xFF3B, 0xFF41, 0xFF5B],\n  Digit: [0x30, 0x3A],\n  Skip: [0, 0x21, 0x7F, 0xA1]\n};\n\nfunction decompress(lookup, set, compressed, value) {\n  let rangeCount = compressed.length;\n  for (let i = 0; i < rangeCount; i += 2) {\n    const start = compressed[i];\n    let end = compressed[i + 1];\n    end = end > 0 ? end : start + 1;\n    if (lookup) {\n      let j = start;\n      while (j < end) {\n        lookup[j] = value;\n        j++;\n      }\n    }\n    if (set) {\n      for (let ch = start; ch < end; ch++) {\n        set.add(ch);\n      }\n    }\n  }\n}\n\nfunction returnToken(token) {\n  return p => {\n    p.next();\n    return token;\n  };\n}\nfunction unexpectedCharacter(p) {\n  p.err(`Unexpected character [${fromCharCode(p.ch)}]`);\n  return null;\n}\n\nconst AsciiIdParts = new Set();\ndecompress(null, AsciiIdParts, codes.AsciiIdPart, true);\n\nconst IdParts = new Uint8Array(0xFFFF);\ndecompress(IdParts, null, codes.IdStart, 1);\ndecompress(IdParts, null, codes.Digit, 1);\n\nconst CharScanners = new Array(0xFFFF);\nlet ci = 0;\nwhile (ci < 0xFFFF) {\n  CharScanners[ci] = unexpectedCharacter;\n  ci++;\n}\n\ndecompress(CharScanners, null, codes.Skip, p => {\n  p.next();\n  return null;\n});\ndecompress(CharScanners, null, codes.IdStart, p => p.scanIdentifier());\ndecompress(CharScanners, null, codes.Digit, p => p.scanNumber(false));\n\nCharScanners[0x22] = CharScanners[0x27] = p => {\n  return p.scanString();\n};\nCharScanners[0x60] = p => {\n  return p.scanTemplate();\n};\n\nCharScanners[0x21] = p => {\n  if (p.next() !== 0x3D) {\n    return T$Bang;\n  }\n  if (p.next() !== 0x3D) {\n    return T$BangEq;\n  }\n  p.next();\n  return T$BangEqEq;\n};\n\nCharScanners[0x3D] = p => {\n  if (p.next() !== 0x3D) {\n    return T$Eq;\n  }\n  if (p.next() !== 0x3D) {\n    return T$EqEq;\n  }\n  p.next();\n  return T$EqEqEq;\n};\n\nCharScanners[0x26] = p => {\n  if (p.next() !== 0x26) {\n    return T$Ampersand;\n  }\n  p.next();\n  return T$AmpersandAmpersand;\n};\n\nCharScanners[0x7C] = p => {\n  if (p.next() !== 0x7C) {\n    return T$Bar;\n  }\n  p.next();\n  return T$BarBar;\n};\n\nCharScanners[0x2E] = p => {\n  if (p.next() <= 0x39 && p.ch >= 0x30) {\n    return p.scanNumber(true);\n  }\n  return T$Period;\n};\n\nCharScanners[0x3C] = p => {\n  if (p.next() !== 0x3D) {\n    return T$Lt;\n  }\n  p.next();\n  return T$LtEq;\n};\n\nCharScanners[0x3E] = p => {\n  if (p.next() !== 0x3D) {\n    return T$Gt;\n  }\n  p.next();\n  return T$GtEq;\n};\n\nCharScanners[0x25] = returnToken(T$Percent);\nCharScanners[0x28] = returnToken(T$LParen);\nCharScanners[0x29] = returnToken(T$RParen);\nCharScanners[0x2A] = returnToken(T$Star);\nCharScanners[0x2B] = returnToken(T$Plus);\nCharScanners[0x2C] = returnToken(T$Comma);\nCharScanners[0x2D] = returnToken(T$Minus);\nCharScanners[0x2F] = returnToken(T$Slash);\nCharScanners[0x3A] = returnToken(T$Colon);\nCharScanners[0x3F] = returnToken(T$Question);\nCharScanners[0x5B] = returnToken(T$LBracket);\nCharScanners[0x5D] = returnToken(T$RBracket);\nCharScanners[0x5E] = returnToken(T$Caret);\nCharScanners[0x7B] = returnToken(T$LBrace);\nCharScanners[0x7D] = returnToken(T$RBrace);\n\nlet mapProto = Map.prototype;\n\nexport function getMapObserver(taskQueue, map) {\n  return ModifyMapObserver.for(taskQueue, map);\n}\n\nlet ModifyMapObserver = class ModifyMapObserver extends ModifyCollectionObserver {\n  constructor(taskQueue, map) {\n    super(taskQueue, map);\n  }\n\n  static for(taskQueue, map) {\n    if (!('__map_observer__' in map)) {\n      Reflect.defineProperty(map, '__map_observer__', {\n        value: ModifyMapObserver.create(taskQueue, map),\n        enumerable: false, configurable: false\n      });\n    }\n    return map.__map_observer__;\n  }\n\n  static create(taskQueue, map) {\n    let observer = new ModifyMapObserver(taskQueue, map);\n\n    let proto = mapProto;\n    if (proto.set !== map.set || proto.delete !== map.delete || proto.clear !== map.clear) {\n      proto = {\n        set: map.set,\n        delete: map.delete,\n        clear: map.clear\n      };\n    }\n\n    map.set = function () {\n      let hasValue = map.has(arguments[0]);\n      let type = hasValue ? 'update' : 'add';\n      let oldValue = map.get(arguments[0]);\n      let methodCallResult = proto.set.apply(map, arguments);\n      if (!hasValue || oldValue !== map.get(arguments[0])) {\n        observer.addChangeRecord({\n          type: type,\n          object: map,\n          key: arguments[0],\n          oldValue: oldValue\n        });\n      }\n      return methodCallResult;\n    };\n\n    map.delete = function () {\n      let hasValue = map.has(arguments[0]);\n      let oldValue = map.get(arguments[0]);\n      let methodCallResult = proto.delete.apply(map, arguments);\n      if (hasValue) {\n        observer.addChangeRecord({\n          type: 'delete',\n          object: map,\n          key: arguments[0],\n          oldValue: oldValue\n        });\n      }\n      return methodCallResult;\n    };\n\n    map.clear = function () {\n      let methodCallResult = proto.clear.apply(map, arguments);\n      observer.addChangeRecord({\n        type: 'clear',\n        object: map\n      });\n      return methodCallResult;\n    };\n\n    return observer;\n  }\n};\n\nlet emLogger = LogManager.getLogger('event-manager');\n\nfunction findOriginalEventTarget(event) {\n  return event.composedPath && event.composedPath()[0] || event.deepPath && event.deepPath()[0] || event.path && event.path[0] || event.target;\n}\n\nfunction stopPropagation() {\n  this.standardStopPropagation();\n  this.propagationStopped = true;\n}\n\nfunction handleCapturedEvent(event) {\n  event.propagationStopped = false;\n  let target = findOriginalEventTarget(event);\n\n  let orderedCallbacks = [];\n\n  while (target) {\n    if (target.capturedCallbacks) {\n      let callback = target.capturedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        orderedCallbacks.push(callback);\n      }\n    }\n    target = target.parentNode;\n  }\n  for (let i = orderedCallbacks.length - 1; i >= 0 && !event.propagationStopped; i--) {\n    let orderedCallback = orderedCallbacks[i];\n    if ('handleEvent' in orderedCallback) {\n      orderedCallback.handleEvent(event);\n    } else {\n      orderedCallback(event);\n    }\n  }\n}\n\nlet CapturedHandlerEntry = class CapturedHandlerEntry {\n  constructor(eventName) {\n    this.eventName = eventName;\n    this.count = 0;\n  }\n\n  increment() {\n    this.count++;\n\n    if (this.count === 1) {\n      DOM.addEventListener(this.eventName, handleCapturedEvent, true);\n    }\n  }\n\n  decrement() {\n    if (this.count === 0) {\n      emLogger.warn('The same EventListener was disposed multiple times.');\n    } else if (--this.count === 0) {\n      DOM.removeEventListener(this.eventName, handleCapturedEvent, true);\n    }\n  }\n};\nlet DelegateHandlerEntry = class DelegateHandlerEntry {\n  constructor(eventName, eventManager) {\n    this.eventName = eventName;\n    this.count = 0;\n    this.eventManager = eventManager;\n  }\n\n  handleEvent(event) {\n    event.propagationStopped = false;\n    let target = findOriginalEventTarget(event);\n\n    while (target && !event.propagationStopped) {\n      if (target.delegatedCallbacks) {\n        let callback = target.delegatedCallbacks[event.type];\n        if (callback) {\n          if (event.stopPropagation !== stopPropagation) {\n            event.standardStopPropagation = event.stopPropagation;\n            event.stopPropagation = stopPropagation;\n          }\n          if ('handleEvent' in callback) {\n            callback.handleEvent(event);\n          } else {\n            callback(event);\n          }\n        }\n      }\n\n      const parent = target.parentNode;\n      const shouldEscapeShadowRoot = this.eventManager.escapeShadowRoot && parent instanceof ShadowRoot;\n\n      target = shouldEscapeShadowRoot ? parent.host : parent;\n    }\n  }\n\n  increment() {\n    this.count++;\n\n    if (this.count === 1) {\n      DOM.addEventListener(this.eventName, this, false);\n    }\n  }\n\n  decrement() {\n    if (this.count === 0) {\n      emLogger.warn('The same EventListener was disposed multiple times.');\n    } else if (--this.count === 0) {\n      DOM.removeEventListener(this.eventName, this, false);\n    }\n  }\n};\nlet DelegationEntryHandler = class DelegationEntryHandler {\n  constructor(entry, lookup, targetEvent) {\n    this.entry = entry;\n    this.lookup = lookup;\n    this.targetEvent = targetEvent;\n  }\n\n  dispose() {\n    if (this.lookup[this.targetEvent]) {\n      this.entry.decrement();\n      this.lookup[this.targetEvent] = null;\n    } else {\n      emLogger.warn('Calling .dispose() on already disposed eventListener');\n    }\n  }\n};\nlet EventHandler = class EventHandler {\n  constructor(target, targetEvent, callback) {\n    this.target = target;\n    this.targetEvent = targetEvent;\n    this.callback = callback;\n  }\n\n  dispose() {\n    this.target.removeEventListener(this.targetEvent, this.callback);\n  }\n};\nlet DefaultEventStrategy = class DefaultEventStrategy {\n\n  constructor(eventManager) {\n    this.delegatedHandlers = {};\n    this.capturedHandlers = {};\n\n    this.eventManager = eventManager;\n  }\n\n  subscribe(target, targetEvent, callback, strategy, disposable) {\n    let delegatedHandlers;\n    let capturedHandlers;\n    let handlerEntry;\n\n    if (strategy === delegationStrategy.bubbling) {\n      delegatedHandlers = this.delegatedHandlers;\n      handlerEntry = delegatedHandlers[targetEvent] || (delegatedHandlers[targetEvent] = new DelegateHandlerEntry(targetEvent, this.eventManager));\n      let delegatedCallbacks = target.delegatedCallbacks || (target.delegatedCallbacks = {});\n      if (!delegatedCallbacks[targetEvent]) {\n        handlerEntry.increment();\n      } else {\n        emLogger.warn('Overriding previous callback for event listener', { event: targetEvent, callback: callback, previousCallback: delegatedCallbacks[targetEvent] });\n      }\n      delegatedCallbacks[targetEvent] = callback;\n\n      if (disposable === true) {\n        return new DelegationEntryHandler(handlerEntry, delegatedCallbacks, targetEvent);\n      }\n\n      return function () {\n        handlerEntry.decrement();\n        delegatedCallbacks[targetEvent] = null;\n      };\n    }\n    if (strategy === delegationStrategy.capturing) {\n      capturedHandlers = this.capturedHandlers;\n      handlerEntry = capturedHandlers[targetEvent] || (capturedHandlers[targetEvent] = new CapturedHandlerEntry(targetEvent));\n      let capturedCallbacks = target.capturedCallbacks || (target.capturedCallbacks = {});\n      if (!capturedCallbacks[targetEvent]) {\n        handlerEntry.increment();\n      } else {\n        emLogger.error('already have a callback for event', { event: targetEvent, callback: callback });\n      }\n      capturedCallbacks[targetEvent] = callback;\n\n      if (disposable === true) {\n        return new DelegationEntryHandler(handlerEntry, capturedCallbacks, targetEvent);\n      }\n\n      return function () {\n        handlerEntry.decrement();\n        capturedCallbacks[targetEvent] = null;\n      };\n    }\n\n    target.addEventListener(targetEvent, callback);\n\n    if (disposable === true) {\n      return new EventHandler(target, targetEvent, callback);\n    }\n\n    return function () {\n      target.removeEventListener(targetEvent, callback);\n    };\n  }\n};\n\n\nexport const delegationStrategy = {\n  none: 0,\n  capturing: 1,\n  bubbling: 2\n};\n\nexport let EventManager = class EventManager {\n  constructor(escapeShadowRoot = false) {\n    this.elementHandlerLookup = {};\n    this.eventStrategyLookup = {};\n    this.escapeShadowRoot = escapeShadowRoot;\n\n    this.registerElementConfig({\n      tagName: 'input',\n      properties: {\n        value: ['change', 'input'],\n        checked: ['change', 'input'],\n        files: ['change', 'input']\n      }\n    });\n\n    this.registerElementConfig({\n      tagName: 'textarea',\n      properties: {\n        value: ['change', 'input']\n      }\n    });\n\n    this.registerElementConfig({\n      tagName: 'select',\n      properties: {\n        value: ['change']\n      }\n    });\n\n    this.registerElementConfig({\n      tagName: 'content editable',\n      properties: {\n        value: ['change', 'input', 'blur', 'keyup', 'paste']\n      }\n    });\n\n    this.registerElementConfig({\n      tagName: 'scrollable element',\n      properties: {\n        scrollTop: ['scroll'],\n        scrollLeft: ['scroll']\n      }\n    });\n\n    this.defaultEventStrategy = new DefaultEventStrategy(this);\n  }\n\n  registerElementConfig(config) {\n    let tagName = config.tagName.toLowerCase();\n    let properties = config.properties;\n    let propertyName;\n\n    let lookup = this.elementHandlerLookup[tagName] = {};\n\n    for (propertyName in properties) {\n      if (properties.hasOwnProperty(propertyName)) {\n        lookup[propertyName] = properties[propertyName];\n      }\n    }\n  }\n\n  registerEventStrategy(eventName, strategy) {\n    this.eventStrategyLookup[eventName] = strategy;\n  }\n\n  getElementHandler(target, propertyName) {\n    let tagName;\n    let lookup = this.elementHandlerLookup;\n\n    if (target.tagName) {\n      tagName = target.tagName.toLowerCase();\n\n      if (lookup[tagName] && lookup[tagName][propertyName]) {\n        return new EventSubscriber(lookup[tagName][propertyName]);\n      }\n\n      if (propertyName === 'textContent' || propertyName === 'innerHTML') {\n        return new EventSubscriber(lookup['content editable'].value);\n      }\n\n      if (propertyName === 'scrollTop' || propertyName === 'scrollLeft') {\n        return new EventSubscriber(lookup['scrollable element'][propertyName]);\n      }\n    }\n\n    return null;\n  }\n\n  addEventListener(target, targetEvent, callbackOrListener, delegate, disposable) {\n    return (this.eventStrategyLookup[targetEvent] || this.defaultEventStrategy).subscribe(target, targetEvent, callbackOrListener, delegate, disposable);\n  }\n};\n\nexport let EventSubscriber = class EventSubscriber {\n  constructor(events) {\n    this.events = events;\n    this.element = null;\n    this.handler = null;\n  }\n\n  subscribe(element, callbackOrListener) {\n    this.element = element;\n    this.handler = callbackOrListener;\n\n    let events = this.events;\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      element.addEventListener(events[i], callbackOrListener);\n    }\n  }\n\n  dispose() {\n    if (this.element === null) {\n      return;\n    }\n    let element = this.element;\n    let callbackOrListener = this.handler;\n    let events = this.events;\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      element.removeEventListener(events[i], callbackOrListener);\n    }\n    this.element = this.handler = null;\n  }\n};\n\nexport let DirtyChecker = class DirtyChecker {\n  constructor() {\n    this.tracked = [];\n    this.checkDelay = 120;\n  }\n\n  addProperty(property) {\n    let tracked = this.tracked;\n\n    tracked.push(property);\n\n    if (tracked.length === 1) {\n      this.scheduleDirtyCheck();\n    }\n  }\n\n  removeProperty(property) {\n    let tracked = this.tracked;\n    tracked.splice(tracked.indexOf(property), 1);\n  }\n\n  scheduleDirtyCheck() {\n    setTimeout(() => this.check(), this.checkDelay);\n  }\n\n  check() {\n    let tracked = this.tracked;\n    let i = tracked.length;\n\n    while (i--) {\n      let current = tracked[i];\n\n      if (current.isDirty()) {\n        current.call();\n      }\n    }\n\n    if (tracked.length) {\n      this.scheduleDirtyCheck();\n    }\n  }\n};\n\nexport let DirtyCheckProperty = (_dec5 = subscriberCollection(), _dec5(_class5 = class DirtyCheckProperty {\n  constructor(dirtyChecker, obj, propertyName) {\n    this.dirtyChecker = dirtyChecker;\n    this.obj = obj;\n    this.propertyName = propertyName;\n  }\n\n  getValue() {\n    return this.obj[this.propertyName];\n  }\n\n  setValue(newValue) {\n    this.obj[this.propertyName] = newValue;\n  }\n\n  call() {\n    let oldValue = this.oldValue;\n    let newValue = this.getValue();\n\n    this.callSubscribers(newValue, oldValue);\n\n    this.oldValue = newValue;\n  }\n\n  isDirty() {\n    return this.oldValue !== this.obj[this.propertyName];\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.dirtyChecker.addProperty(this);\n    }\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.dirtyChecker.removeProperty(this);\n    }\n  }\n}) || _class5);\n\nconst logger = LogManager.getLogger('property-observation');\n\nexport const propertyAccessor = {\n  getValue: (obj, propertyName) => obj[propertyName],\n  setValue: (value, obj, propertyName) => {\n    obj[propertyName] = value;\n  }\n};\n\nexport let PrimitiveObserver = class PrimitiveObserver {\n\n  constructor(primitive, propertyName) {\n    this.doNotCache = true;\n\n    this.primitive = primitive;\n    this.propertyName = propertyName;\n  }\n\n  getValue() {\n    return this.primitive[this.propertyName];\n  }\n\n  setValue() {\n    let type = typeof this.primitive;\n    throw new Error(`The ${this.propertyName} property of a ${type} (${this.primitive}) cannot be assigned.`);\n  }\n\n  subscribe() {}\n\n  unsubscribe() {}\n};\n\nexport let SetterObserver = (_dec6 = subscriberCollection(), _dec6(_class7 = class SetterObserver {\n  constructor(taskQueue, obj, propertyName) {\n    this.taskQueue = taskQueue;\n    this.obj = obj;\n    this.propertyName = propertyName;\n    this.queued = false;\n    this.observing = false;\n  }\n\n  getValue() {\n    return this.obj[this.propertyName];\n  }\n\n  setValue(newValue) {\n    this.obj[this.propertyName] = newValue;\n  }\n\n  getterValue() {\n    return this.currentValue;\n  }\n\n  setterValue(newValue) {\n    let oldValue = this.currentValue;\n\n    if (oldValue !== newValue) {\n      if (!this.queued) {\n        this.oldValue = oldValue;\n        this.queued = true;\n        this.taskQueue.queueMicroTask(this);\n      }\n\n      this.currentValue = newValue;\n    }\n  }\n\n  call() {\n    let oldValue = this.oldValue;\n    let newValue = this.oldValue = this.currentValue;\n\n    this.queued = false;\n\n    this.callSubscribers(newValue, oldValue);\n  }\n\n  subscribe(context, callable) {\n    if (!this.observing) {\n      this.convertProperty();\n    }\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    this.removeSubscriber(context, callable);\n  }\n\n  convertProperty() {\n    this.observing = true;\n    this.currentValue = this.obj[this.propertyName];\n    this.setValue = this.setterValue;\n    this.getValue = this.getterValue;\n\n    if (!Reflect.defineProperty(this.obj, this.propertyName, {\n      configurable: true,\n      enumerable: this.propertyName in this.obj ? this.obj.propertyIsEnumerable(this.propertyName) : true,\n      get: this.getValue.bind(this),\n      set: this.setValue.bind(this)\n    })) {\n      logger.warn(`Cannot observe property '${this.propertyName}' of object`, this.obj);\n    }\n  }\n}) || _class7);\n\nexport let XLinkAttributeObserver = class XLinkAttributeObserver {\n  constructor(element, propertyName, attributeName) {\n    this.element = element;\n    this.propertyName = propertyName;\n    this.attributeName = attributeName;\n  }\n\n  getValue() {\n    return this.element.getAttributeNS('http://www.w3.org/1999/xlink', this.attributeName);\n  }\n\n  setValue(newValue) {\n    return this.element.setAttributeNS('http://www.w3.org/1999/xlink', this.attributeName, newValue);\n  }\n\n  subscribe() {\n    throw new Error(`Observation of a \"${this.element.nodeName}\" element\\'s \"${this.propertyName}\" property is not supported.`);\n  }\n};\n\nexport const dataAttributeAccessor = {\n  getValue: (obj, propertyName) => obj.getAttribute(propertyName),\n  setValue: (value, obj, propertyName) => {\n    if (value === null || value === undefined) {\n      obj.removeAttribute(propertyName);\n    } else {\n      obj.setAttribute(propertyName, value);\n    }\n  }\n};\n\nexport let DataAttributeObserver = class DataAttributeObserver {\n  constructor(element, propertyName) {\n    this.element = element;\n    this.propertyName = propertyName;\n  }\n\n  getValue() {\n    return this.element.getAttribute(this.propertyName);\n  }\n\n  setValue(newValue) {\n    if (newValue === null || newValue === undefined) {\n      return this.element.removeAttribute(this.propertyName);\n    }\n    return this.element.setAttribute(this.propertyName, newValue);\n  }\n\n  subscribe() {\n    throw new Error(`Observation of a \"${this.element.nodeName}\" element\\'s \"${this.propertyName}\" property is not supported.`);\n  }\n};\n\nexport let StyleObserver = class StyleObserver {\n  constructor(element, propertyName) {\n    this.element = element;\n    this.propertyName = propertyName;\n\n    this.styles = null;\n    this.version = 0;\n  }\n\n  getValue() {\n    return this.element.style.cssText;\n  }\n\n  _setProperty(style, value) {\n    let priority = '';\n\n    if (value !== null && value !== undefined && typeof value.indexOf === 'function' && value.indexOf('!important') !== -1) {\n      priority = 'important';\n      value = value.replace('!important', '');\n    }\n    this.element.style.setProperty(style, value, priority);\n  }\n\n  setValue(newValue) {\n    let styles = this.styles || {};\n    let style;\n    let version = this.version;\n\n    if (newValue !== null && newValue !== undefined) {\n      if (newValue instanceof Object) {\n        let value;\n        for (style in newValue) {\n          if (newValue.hasOwnProperty(style)) {\n            value = newValue[style];\n            style = style.replace(/([A-Z])/g, m => '-' + m.toLowerCase());\n            styles[style] = version;\n            this._setProperty(style, value);\n          }\n        }\n      } else if (newValue.length) {\n        let rx = /\\s*([\\w\\-]+)\\s*:\\s*((?:(?:[\\w\\-]+\\(\\s*(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[\\w\\-]+\\(\\s*(?:^\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^\\)]*)\\),?|[^\\)]*)\\),?|\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^;]*),?\\s*)+);?/g;\n        let pair;\n        while ((pair = rx.exec(newValue)) !== null) {\n          style = pair[1];\n          if (!style) {\n            continue;\n          }\n\n          styles[style] = version;\n          this._setProperty(style, pair[2]);\n        }\n      }\n    }\n\n    this.styles = styles;\n    this.version += 1;\n\n    if (version === 0) {\n      return;\n    }\n\n    version -= 1;\n    for (style in styles) {\n      if (!styles.hasOwnProperty(style) || styles[style] !== version) {\n        continue;\n      }\n\n      this.element.style.removeProperty(style);\n    }\n  }\n\n  subscribe() {\n    throw new Error(`Observation of a \"${this.element.nodeName}\" element\\'s \"${this.propertyName}\" property is not supported.`);\n  }\n};\n\nexport let ValueAttributeObserver = (_dec7 = subscriberCollection(), _dec7(_class8 = class ValueAttributeObserver {\n  constructor(element, propertyName, handler) {\n    this.element = element;\n    this.propertyName = propertyName;\n    this.handler = handler;\n    if (propertyName === 'files') {\n      this.setValue = () => {};\n    }\n  }\n\n  getValue() {\n    return this.element[this.propertyName];\n  }\n\n  setValue(newValue) {\n    newValue = newValue === undefined || newValue === null ? '' : newValue;\n    if (this.element[this.propertyName] !== newValue) {\n      this.element[this.propertyName] = newValue;\n      this.notify();\n    }\n  }\n\n  notify() {\n    let oldValue = this.oldValue;\n    let newValue = this.getValue();\n\n    this.callSubscribers(newValue, oldValue);\n\n    this.oldValue = newValue;\n  }\n\n  handleEvent() {\n    this.notify();\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.handler.subscribe(this.element, this);\n    }\n\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n}) || _class8);\n\nconst checkedArrayContext = 'CheckedObserver:array';\nconst checkedValueContext = 'CheckedObserver:value';\n\nexport let CheckedObserver = (_dec8 = subscriberCollection(), _dec8(_class9 = class CheckedObserver {\n  constructor(element, handler, observerLocator) {\n    this.element = element;\n    this.handler = handler;\n    this.observerLocator = observerLocator;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(newValue) {\n    if (this.initialSync && this.value === newValue) {\n      return;\n    }\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribe(checkedArrayContext, this);\n      this.arrayObserver = null;\n    }\n\n    if (this.element.type === 'checkbox' && Array.isArray(newValue)) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(newValue);\n      this.arrayObserver.subscribe(checkedArrayContext, this);\n    }\n\n    this.oldValue = this.value;\n    this.value = newValue;\n    this.synchronizeElement();\n    this.notify();\n\n    if (!this.initialSync) {\n      this.initialSync = true;\n      this.observerLocator.taskQueue.queueMicroTask(this);\n    }\n  }\n\n  call(context, splices) {\n    this.synchronizeElement();\n\n    if (!this.valueObserver) {\n      this.valueObserver = this.element.__observers__.model || this.element.__observers__.value;\n      if (this.valueObserver) {\n        this.valueObserver.subscribe(checkedValueContext, this);\n      }\n    }\n  }\n\n  synchronizeElement() {\n    let value = this.value;\n    let element = this.element;\n    let elementValue = element.hasOwnProperty('model') ? element.model : element.value;\n    let isRadio = element.type === 'radio';\n    let matcher = element.matcher || ((a, b) => a === b);\n\n    element.checked = isRadio && !!matcher(value, elementValue) || !isRadio && value === true || !isRadio && Array.isArray(value) && value.findIndex(item => !!matcher(item, elementValue)) !== -1;\n  }\n\n  synchronizeValue() {\n    let value = this.value;\n    let element = this.element;\n    let elementValue = element.hasOwnProperty('model') ? element.model : element.value;\n    let index;\n    let matcher = element.matcher || ((a, b) => a === b);\n\n    if (element.type === 'checkbox') {\n      if (Array.isArray(value)) {\n        index = value.findIndex(item => !!matcher(item, elementValue));\n        if (element.checked && index === -1) {\n          value.push(elementValue);\n        } else if (!element.checked && index !== -1) {\n          value.splice(index, 1);\n        }\n\n        return;\n      }\n\n      value = element.checked;\n    } else if (element.checked) {\n      value = elementValue;\n    } else {\n      return;\n    }\n\n    this.oldValue = this.value;\n    this.value = value;\n    this.notify();\n  }\n\n  notify() {\n    let oldValue = this.oldValue;\n    let newValue = this.value;\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.callSubscribers(newValue, oldValue);\n  }\n\n  handleEvent() {\n    this.synchronizeValue();\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.element, this);\n    }\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  unbind() {\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribe(checkedArrayContext, this);\n      this.arrayObserver = null;\n    }\n    if (this.valueObserver) {\n      this.valueObserver.unsubscribe(checkedValueContext, this);\n    }\n  }\n}) || _class9);\n\nconst selectArrayContext = 'SelectValueObserver:array';\n\nexport let SelectValueObserver = (_dec9 = subscriberCollection(), _dec9(_class10 = class SelectValueObserver {\n  constructor(element, handler, observerLocator) {\n    this.element = element;\n    this.handler = handler;\n    this.observerLocator = observerLocator;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(newValue) {\n    if (newValue !== null && newValue !== undefined && this.element.multiple && !Array.isArray(newValue)) {\n      throw new Error('Only null or Array instances can be bound to a multi-select.');\n    }\n    if (this.value === newValue) {\n      return;\n    }\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribe(selectArrayContext, this);\n      this.arrayObserver = null;\n    }\n\n    if (Array.isArray(newValue)) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(newValue);\n      this.arrayObserver.subscribe(selectArrayContext, this);\n    }\n\n    this.oldValue = this.value;\n    this.value = newValue;\n    this.synchronizeOptions();\n    this.notify();\n\n    if (!this.initialSync) {\n      this.initialSync = true;\n      this.observerLocator.taskQueue.queueMicroTask(this);\n    }\n  }\n\n  call(context, splices) {\n    this.synchronizeOptions();\n  }\n\n  synchronizeOptions() {\n    let value = this.value;\n    let isArray;\n\n    if (Array.isArray(value)) {\n      isArray = true;\n    }\n\n    let options = this.element.options;\n    let i = options.length;\n    let matcher = this.element.matcher || ((a, b) => a === b);\n    while (i--) {\n      let option = options.item(i);\n      let optionValue = option.hasOwnProperty('model') ? option.model : option.value;\n      if (isArray) {\n        option.selected = value.findIndex(item => !!matcher(optionValue, item)) !== -1;\n        continue;\n      }\n      option.selected = !!matcher(optionValue, value);\n    }\n  }\n\n  synchronizeValue() {\n    let options = this.element.options;\n    let count = 0;\n    let value = [];\n\n    for (let i = 0, ii = options.length; i < ii; i++) {\n      let option = options.item(i);\n      if (!option.selected) {\n        continue;\n      }\n      value.push(option.hasOwnProperty('model') ? option.model : option.value);\n      count++;\n    }\n\n    if (this.element.multiple) {\n      if (Array.isArray(this.value)) {\n        let matcher = this.element.matcher || ((a, b) => a === b);\n\n        let i = 0;\n        while (i < this.value.length) {\n          let a = this.value[i];\n          if (value.findIndex(b => matcher(a, b)) === -1) {\n            this.value.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n\n        i = 0;\n        while (i < value.length) {\n          let a = value[i];\n          if (this.value.findIndex(b => matcher(a, b)) === -1) {\n            this.value.push(a);\n          }\n          i++;\n        }\n        return;\n      }\n    } else {\n      if (count === 0) {\n        value = null;\n      } else {\n        value = value[0];\n      }\n    }\n\n    if (value !== this.value) {\n      this.oldValue = this.value;\n      this.value = value;\n      this.notify();\n    }\n  }\n\n  notify() {\n    let oldValue = this.oldValue;\n    let newValue = this.value;\n\n    this.callSubscribers(newValue, oldValue);\n  }\n\n  handleEvent() {\n    this.synchronizeValue();\n  }\n\n  subscribe(context, callable) {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.element, this);\n    }\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    if (this.removeSubscriber(context, callable) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  bind() {\n    this.domObserver = DOM.createMutationObserver(() => {\n      this.synchronizeOptions();\n      this.synchronizeValue();\n    });\n    this.domObserver.observe(this.element, { childList: true, subtree: true, characterData: true });\n  }\n\n  unbind() {\n    this.domObserver.disconnect();\n    this.domObserver = null;\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribe(selectArrayContext, this);\n      this.arrayObserver = null;\n    }\n  }\n}) || _class10);\n\nexport let ClassObserver = class ClassObserver {\n  constructor(element) {\n    this.element = element;\n    this.doNotCache = true;\n    this.value = '';\n    this.version = 0;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(newValue) {\n    let nameIndex = this.nameIndex || {};\n    let version = this.version;\n    let names;\n    let name;\n\n    if (newValue !== null && newValue !== undefined && newValue.length) {\n      names = newValue.split(/\\s+/);\n      for (let i = 0, length = names.length; i < length; i++) {\n        name = names[i];\n        if (name === '') {\n          continue;\n        }\n        nameIndex[name] = version;\n        this.element.classList.add(name);\n      }\n    }\n\n    this.value = newValue;\n    this.nameIndex = nameIndex;\n    this.version += 1;\n\n    if (version === 0) {\n      return;\n    }\n\n    version -= 1;\n    for (name in nameIndex) {\n      if (!nameIndex.hasOwnProperty(name) || nameIndex[name] !== version) {\n        continue;\n      }\n      this.element.classList.remove(name);\n    }\n  }\n\n  subscribe() {\n    throw new Error(`Observation of a \"${this.element.nodeName}\" element\\'s \"class\" property is not supported.`);\n  }\n};\n\nexport function hasDeclaredDependencies(descriptor) {\n  return !!(descriptor && descriptor.get && descriptor.get.dependencies);\n}\n\nexport function declarePropertyDependencies(ctor, propertyName, dependencies) {\n  let descriptor = Object.getOwnPropertyDescriptor(ctor.prototype, propertyName);\n  descriptor.get.dependencies = dependencies;\n}\n\nexport function computedFrom(...rest) {\n  return function (target, key, descriptor) {\n    descriptor.get.dependencies = rest;\n    return descriptor;\n  };\n}\n\nexport let ComputedExpression = class ComputedExpression extends Expression {\n  constructor(name, dependencies) {\n    super();\n\n    this.name = name;\n    this.dependencies = dependencies;\n    this.isAssignable = true;\n  }\n\n  evaluate(scope, lookupFunctions) {\n    return scope.bindingContext[this.name];\n  }\n\n  assign(scope, value) {\n    scope.bindingContext[this.name] = value;\n  }\n\n  accept(visitor) {\n    throw new Error('not implemented');\n  }\n\n  connect(binding, scope) {\n    let dependencies = this.dependencies;\n    let i = dependencies.length;\n    while (i--) {\n      dependencies[i].connect(binding, scope);\n    }\n  }\n};\n\nexport function createComputedObserver(obj, propertyName, descriptor, observerLocator) {\n  let dependencies = descriptor.get.dependencies;\n  if (!(dependencies instanceof ComputedExpression)) {\n    let i = dependencies.length;\n    while (i--) {\n      dependencies[i] = observerLocator.parser.parse(dependencies[i]);\n    }\n    dependencies = descriptor.get.dependencies = new ComputedExpression(propertyName, dependencies);\n  }\n\n  let scope = { bindingContext: obj, overrideContext: createOverrideContext(obj) };\n  return new ExpressionObserver(scope, dependencies, observerLocator);\n}\n\nlet svgElements;\nlet svgPresentationElements;\nlet svgPresentationAttributes;\nlet svgAnalyzer;\n\nif (typeof FEATURE_NO_SVG === 'undefined') {\n  svgElements = {\n    a: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'target', 'transform', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    altGlyph: ['class', 'dx', 'dy', 'externalResourcesRequired', 'format', 'glyphRef', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    altGlyphDef: ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    altGlyphItem: ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    animate: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    animateColor: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    animateMotion: ['accumulate', 'additive', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keyPoints', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'origin', 'path', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'rotate', 'systemLanguage', 'to', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    animateTransform: ['accumulate', 'additive', 'attributeName', 'attributeType', 'begin', 'by', 'calcMode', 'dur', 'end', 'externalResourcesRequired', 'fill', 'from', 'id', 'keySplines', 'keyTimes', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'type', 'values', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    circle: ['class', 'cx', 'cy', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'r', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    clipPath: ['class', 'clipPathUnits', 'externalResourcesRequired', 'id', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    'color-profile': ['id', 'local', 'name', 'rendering-intent', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    cursor: ['externalResourcesRequired', 'id', 'requiredExtensions', 'requiredFeatures', 'systemLanguage', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    defs: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    desc: ['class', 'id', 'style', 'xml:base', 'xml:lang', 'xml:space'],\n    ellipse: ['class', 'cx', 'cy', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rx', 'ry', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    feBlend: ['class', 'height', 'id', 'in', 'in2', 'mode', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feColorMatrix: ['class', 'height', 'id', 'in', 'result', 'style', 'type', 'values', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feComponentTransfer: ['class', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feComposite: ['class', 'height', 'id', 'in', 'in2', 'k1', 'k2', 'k3', 'k4', 'operator', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feConvolveMatrix: ['bias', 'class', 'divisor', 'edgeMode', 'height', 'id', 'in', 'kernelMatrix', 'kernelUnitLength', 'order', 'preserveAlpha', 'result', 'style', 'targetX', 'targetY', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feDiffuseLighting: ['class', 'diffuseConstant', 'height', 'id', 'in', 'kernelUnitLength', 'result', 'style', 'surfaceScale', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feDisplacementMap: ['class', 'height', 'id', 'in', 'in2', 'result', 'scale', 'style', 'width', 'x', 'xChannelSelector', 'xml:base', 'xml:lang', 'xml:space', 'y', 'yChannelSelector'],\n    feDistantLight: ['azimuth', 'elevation', 'id', 'xml:base', 'xml:lang', 'xml:space'],\n    feFlood: ['class', 'height', 'id', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feFuncA: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    feFuncB: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    feFuncG: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    feFuncR: ['amplitude', 'exponent', 'id', 'intercept', 'offset', 'slope', 'tableValues', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    feGaussianBlur: ['class', 'height', 'id', 'in', 'result', 'stdDeviation', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feImage: ['class', 'externalResourcesRequired', 'height', 'id', 'preserveAspectRatio', 'result', 'style', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feMerge: ['class', 'height', 'id', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feMergeNode: ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    feMorphology: ['class', 'height', 'id', 'in', 'operator', 'radius', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feOffset: ['class', 'dx', 'dy', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    fePointLight: ['id', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'z'],\n    feSpecularLighting: ['class', 'height', 'id', 'in', 'kernelUnitLength', 'result', 'specularConstant', 'specularExponent', 'style', 'surfaceScale', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feSpotLight: ['id', 'limitingConeAngle', 'pointsAtX', 'pointsAtY', 'pointsAtZ', 'specularExponent', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'z'],\n    feTile: ['class', 'height', 'id', 'in', 'result', 'style', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    feTurbulence: ['baseFrequency', 'class', 'height', 'id', 'numOctaves', 'result', 'seed', 'stitchTiles', 'style', 'type', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    filter: ['class', 'externalResourcesRequired', 'filterRes', 'filterUnits', 'height', 'id', 'primitiveUnits', 'style', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    font: ['class', 'externalResourcesRequired', 'horiz-adv-x', 'horiz-origin-x', 'horiz-origin-y', 'id', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face': ['accent-height', 'alphabetic', 'ascent', 'bbox', 'cap-height', 'descent', 'font-family', 'font-size', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'hanging', 'id', 'ideographic', 'mathematical', 'overline-position', 'overline-thickness', 'panose-1', 'slope', 'stemh', 'stemv', 'strikethrough-position', 'strikethrough-thickness', 'underline-position', 'underline-thickness', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'widths', 'x-height', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face-format': ['id', 'string', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face-name': ['id', 'name', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face-src': ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    'font-face-uri': ['id', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    foreignObject: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    g: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    glyph: ['arabic-form', 'class', 'd', 'glyph-name', 'horiz-adv-x', 'id', 'lang', 'orientation', 'style', 'unicode', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],\n    glyphRef: ['class', 'dx', 'dy', 'format', 'glyphRef', 'id', 'style', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    hkern: ['g1', 'g2', 'id', 'k', 'u1', 'u2', 'xml:base', 'xml:lang', 'xml:space'],\n    image: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    line: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'x1', 'x2', 'xml:base', 'xml:lang', 'xml:space', 'y1', 'y2'],\n    linearGradient: ['class', 'externalResourcesRequired', 'gradientTransform', 'gradientUnits', 'id', 'spreadMethod', 'style', 'x1', 'x2', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y1', 'y2'],\n    marker: ['class', 'externalResourcesRequired', 'id', 'markerHeight', 'markerUnits', 'markerWidth', 'orient', 'preserveAspectRatio', 'refX', 'refY', 'style', 'viewBox', 'xml:base', 'xml:lang', 'xml:space'],\n    mask: ['class', 'externalResourcesRequired', 'height', 'id', 'maskContentUnits', 'maskUnits', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    metadata: ['id', 'xml:base', 'xml:lang', 'xml:space'],\n    'missing-glyph': ['class', 'd', 'horiz-adv-x', 'id', 'style', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'xml:base', 'xml:lang', 'xml:space'],\n    mpath: ['externalResourcesRequired', 'id', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    path: ['class', 'd', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'pathLength', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    pattern: ['class', 'externalResourcesRequired', 'height', 'id', 'patternContentUnits', 'patternTransform', 'patternUnits', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'viewBox', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    polygon: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'points', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    polyline: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'points', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    radialGradient: ['class', 'cx', 'cy', 'externalResourcesRequired', 'fx', 'fy', 'gradientTransform', 'gradientUnits', 'id', 'r', 'spreadMethod', 'style', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    rect: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rx', 'ry', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    script: ['externalResourcesRequired', 'id', 'type', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    set: ['attributeName', 'attributeType', 'begin', 'dur', 'end', 'externalResourcesRequired', 'fill', 'id', 'max', 'min', 'onbegin', 'onend', 'onload', 'onrepeat', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'restart', 'systemLanguage', 'to', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    stop: ['class', 'id', 'offset', 'style', 'xml:base', 'xml:lang', 'xml:space'],\n    style: ['id', 'media', 'title', 'type', 'xml:base', 'xml:lang', 'xml:space'],\n    svg: ['baseProfile', 'class', 'contentScriptType', 'contentStyleType', 'externalResourcesRequired', 'height', 'id', 'onabort', 'onactivate', 'onclick', 'onerror', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onresize', 'onscroll', 'onunload', 'onzoom', 'preserveAspectRatio', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'version', 'viewBox', 'width', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y', 'zoomAndPan'],\n    switch: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'xml:base', 'xml:lang', 'xml:space'],\n    symbol: ['class', 'externalResourcesRequired', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'preserveAspectRatio', 'style', 'viewBox', 'xml:base', 'xml:lang', 'xml:space'],\n    text: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'transform', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    textPath: ['class', 'externalResourcesRequired', 'id', 'lengthAdjust', 'method', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'spacing', 'startOffset', 'style', 'systemLanguage', 'textLength', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space'],\n    title: ['class', 'id', 'style', 'xml:base', 'xml:lang', 'xml:space'],\n    tref: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'x', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    tspan: ['class', 'dx', 'dy', 'externalResourcesRequired', 'id', 'lengthAdjust', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'rotate', 'style', 'systemLanguage', 'textLength', 'x', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    use: ['class', 'externalResourcesRequired', 'height', 'id', 'onactivate', 'onclick', 'onfocusin', 'onfocusout', 'onload', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'requiredExtensions', 'requiredFeatures', 'style', 'systemLanguage', 'transform', 'width', 'x', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xml:lang', 'xml:space', 'y'],\n    view: ['externalResourcesRequired', 'id', 'preserveAspectRatio', 'viewBox', 'viewTarget', 'xml:base', 'xml:lang', 'xml:space', 'zoomAndPan'],\n    vkern: ['g1', 'g2', 'id', 'k', 'u1', 'u2', 'xml:base', 'xml:lang', 'xml:space']\n  };\n\n\n  svgPresentationElements = {\n    'a': true,\n    'altGlyph': true,\n    'animate': true,\n    'animateColor': true,\n    'circle': true,\n    'clipPath': true,\n    'defs': true,\n    'ellipse': true,\n    'feBlend': true,\n    'feColorMatrix': true,\n    'feComponentTransfer': true,\n    'feComposite': true,\n    'feConvolveMatrix': true,\n    'feDiffuseLighting': true,\n    'feDisplacementMap': true,\n    'feFlood': true,\n    'feGaussianBlur': true,\n    'feImage': true,\n    'feMerge': true,\n    'feMorphology': true,\n    'feOffset': true,\n    'feSpecularLighting': true,\n    'feTile': true,\n    'feTurbulence': true,\n    'filter': true,\n    'font': true,\n    'foreignObject': true,\n    'g': true,\n    'glyph': true,\n    'glyphRef': true,\n    'image': true,\n    'line': true,\n    'linearGradient': true,\n    'marker': true,\n    'mask': true,\n    'missing-glyph': true,\n    'path': true,\n    'pattern': true,\n    'polygon': true,\n    'polyline': true,\n    'radialGradient': true,\n    'rect': true,\n    'stop': true,\n    'svg': true,\n    'switch': true,\n    'symbol': true,\n    'text': true,\n    'textPath': true,\n    'tref': true,\n    'tspan': true,\n    'use': true\n  };\n\n  svgPresentationAttributes = {\n    'alignment-baseline': true,\n    'baseline-shift': true,\n    'clip-path': true,\n    'clip-rule': true,\n    'clip': true,\n    'color-interpolation-filters': true,\n    'color-interpolation': true,\n    'color-profile': true,\n    'color-rendering': true,\n    'color': true,\n    'cursor': true,\n    'direction': true,\n    'display': true,\n    'dominant-baseline': true,\n    'enable-background': true,\n    'fill-opacity': true,\n    'fill-rule': true,\n    'fill': true,\n    'filter': true,\n    'flood-color': true,\n    'flood-opacity': true,\n    'font-family': true,\n    'font-size-adjust': true,\n    'font-size': true,\n    'font-stretch': true,\n    'font-style': true,\n    'font-variant': true,\n    'font-weight': true,\n    'glyph-orientation-horizontal': true,\n    'glyph-orientation-vertical': true,\n    'image-rendering': true,\n    'kerning': true,\n    'letter-spacing': true,\n    'lighting-color': true,\n    'marker-end': true,\n    'marker-mid': true,\n    'marker-start': true,\n    'mask': true,\n    'opacity': true,\n    'overflow': true,\n    'pointer-events': true,\n    'shape-rendering': true,\n    'stop-color': true,\n    'stop-opacity': true,\n    'stroke-dasharray': true,\n    'stroke-dashoffset': true,\n    'stroke-linecap': true,\n    'stroke-linejoin': true,\n    'stroke-miterlimit': true,\n    'stroke-opacity': true,\n    'stroke-width': true,\n    'stroke': true,\n    'text-anchor': true,\n    'text-decoration': true,\n    'text-rendering': true,\n    'unicode-bidi': true,\n    'visibility': true,\n    'word-spacing': true,\n    'writing-mode': true\n  };\n\n  let createElement = function (html) {\n    let div = DOM.createElement('div');\n    div.innerHTML = html;\n    return div.firstChild;\n  };\n\n  svgAnalyzer = class SVGAnalyzer {\n    constructor() {\n      if (createElement('<svg><altGlyph /></svg>').firstElementChild.nodeName === 'altglyph' && elements.altGlyph) {\n        elements.altglyph = elements.altGlyph;\n        delete elements.altGlyph;\n        elements.altglyphdef = elements.altGlyphDef;\n        delete elements.altGlyphDef;\n        elements.altglyphitem = elements.altGlyphItem;\n        delete elements.altGlyphItem;\n        elements.glyphref = elements.glyphRef;\n        delete elements.glyphRef;\n      }\n    }\n\n    isStandardSvgAttribute(nodeName, attributeName) {\n      return presentationElements[nodeName] && presentationAttributes[attributeName] || elements[nodeName] && elements[nodeName].indexOf(attributeName) !== -1;\n    }\n  };\n}\n\nexport const elements = svgElements;\nexport const presentationElements = svgPresentationElements;\nexport const presentationAttributes = svgPresentationAttributes;\nexport const SVGAnalyzer = svgAnalyzer || class {\n  isStandardSvgAttribute() {\n    return false;\n  }\n};\n\nexport let ObserverLocator = (_temp = _class11 = class ObserverLocator {\n  constructor(taskQueue, eventManager, dirtyChecker, svgAnalyzer, parser) {\n    this.taskQueue = taskQueue;\n    this.eventManager = eventManager;\n    this.dirtyChecker = dirtyChecker;\n    this.svgAnalyzer = svgAnalyzer;\n    this.parser = parser;\n\n    this.adapters = [];\n    this.logger = LogManager.getLogger('observer-locator');\n  }\n\n  getObserver(obj, propertyName) {\n    let observersLookup = obj.__observers__;\n    let observer;\n\n    if (observersLookup && propertyName in observersLookup) {\n      return observersLookup[propertyName];\n    }\n\n    observer = this.createPropertyObserver(obj, propertyName);\n\n    if (!observer.doNotCache) {\n      if (observersLookup === undefined) {\n        observersLookup = this.getOrCreateObserversLookup(obj);\n      }\n\n      observersLookup[propertyName] = observer;\n    }\n\n    return observer;\n  }\n\n  getOrCreateObserversLookup(obj) {\n    return obj.__observers__ || this.createObserversLookup(obj);\n  }\n\n  createObserversLookup(obj) {\n    let value = {};\n\n    if (!Reflect.defineProperty(obj, '__observers__', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    })) {\n      this.logger.warn('Cannot add observers to object', obj);\n    }\n\n    return value;\n  }\n\n  addAdapter(adapter) {\n    this.adapters.push(adapter);\n  }\n\n  getAdapterObserver(obj, propertyName, descriptor) {\n    for (let i = 0, ii = this.adapters.length; i < ii; i++) {\n      let adapter = this.adapters[i];\n      let observer = adapter.getObserver(obj, propertyName, descriptor);\n      if (observer) {\n        return observer;\n      }\n    }\n    return null;\n  }\n\n  createPropertyObserver(obj, propertyName) {\n    let descriptor;\n    let handler;\n    let xlinkResult;\n\n    if (!(obj instanceof Object)) {\n      return new PrimitiveObserver(obj, propertyName);\n    }\n\n    if (obj instanceof DOM.Element) {\n      if (propertyName === 'class') {\n        return new ClassObserver(obj);\n      }\n      if (propertyName === 'style' || propertyName === 'css') {\n        return new StyleObserver(obj, propertyName);\n      }\n      handler = this.eventManager.getElementHandler(obj, propertyName);\n      if (propertyName === 'value' && obj.tagName.toLowerCase() === 'select') {\n        return new SelectValueObserver(obj, handler, this);\n      }\n      if (propertyName === 'checked' && obj.tagName.toLowerCase() === 'input') {\n        return new CheckedObserver(obj, handler, this);\n      }\n      if (handler) {\n        return new ValueAttributeObserver(obj, propertyName, handler);\n      }\n      xlinkResult = /^xlink:(.+)$/.exec(propertyName);\n      if (xlinkResult) {\n        return new XLinkAttributeObserver(obj, propertyName, xlinkResult[1]);\n      }\n      if (propertyName === 'role' && (obj instanceof DOM.Element || obj instanceof DOM.SVGElement) || /^\\w+:|^data-|^aria-/.test(propertyName) || obj instanceof DOM.SVGElement && this.svgAnalyzer.isStandardSvgAttribute(obj.nodeName, propertyName)) {\n        return new DataAttributeObserver(obj, propertyName);\n      }\n    }\n\n    descriptor = Object.getPropertyDescriptor(obj, propertyName);\n\n    if (hasDeclaredDependencies(descriptor)) {\n      return createComputedObserver(obj, propertyName, descriptor, this);\n    }\n\n    if (descriptor) {\n      const existingGetterOrSetter = descriptor.get || descriptor.set;\n      if (existingGetterOrSetter) {\n        if (existingGetterOrSetter.getObserver) {\n          return existingGetterOrSetter.getObserver(obj);\n        }\n\n        let adapterObserver = this.getAdapterObserver(obj, propertyName, descriptor);\n        if (adapterObserver) {\n          return adapterObserver;\n        }\n        return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);\n      }\n    }\n\n    if (obj instanceof Array) {\n      if (propertyName === 'length') {\n        return this.getArrayObserver(obj).getLengthObserver();\n      }\n\n      return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);\n    } else if (obj instanceof Map) {\n      if (propertyName === 'size') {\n        return this.getMapObserver(obj).getLengthObserver();\n      }\n\n      return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);\n    } else if (obj instanceof Set) {\n      if (propertyName === 'size') {\n        return this.getSetObserver(obj).getLengthObserver();\n      }\n\n      return new DirtyCheckProperty(this.dirtyChecker, obj, propertyName);\n    }\n\n    return new SetterObserver(this.taskQueue, obj, propertyName);\n  }\n\n  getAccessor(obj, propertyName) {\n    if (obj instanceof DOM.Element) {\n      if (propertyName === 'class' || propertyName === 'style' || propertyName === 'css' || propertyName === 'value' && (obj.tagName.toLowerCase() === 'input' || obj.tagName.toLowerCase() === 'select') || propertyName === 'checked' && obj.tagName.toLowerCase() === 'input' || propertyName === 'model' && obj.tagName.toLowerCase() === 'input' || /^xlink:.+$/.exec(propertyName)) {\n        return this.getObserver(obj, propertyName);\n      }\n      if (/^\\w+:|^data-|^aria-/.test(propertyName) || obj instanceof DOM.SVGElement && this.svgAnalyzer.isStandardSvgAttribute(obj.nodeName, propertyName) || obj.tagName.toLowerCase() === 'img' && propertyName === 'src' || obj.tagName.toLowerCase() === 'a' && propertyName === 'href') {\n        return dataAttributeAccessor;\n      }\n    }\n    return propertyAccessor;\n  }\n\n  getArrayObserver(array) {\n    return getArrayObserver(this.taskQueue, array);\n  }\n\n  getMapObserver(map) {\n    return getMapObserver(this.taskQueue, map);\n  }\n\n  getSetObserver(set) {\n    return getSetObserver(this.taskQueue, set);\n  }\n}, _class11.inject = [TaskQueue, EventManager, DirtyChecker, SVGAnalyzer, Parser], _temp);\n\nexport let ObjectObservationAdapter = class ObjectObservationAdapter {\n  getObserver(object, propertyName, descriptor) {\n    throw new Error('BindingAdapters must implement getObserver(object, propertyName).');\n  }\n};\n\nexport let BindingExpression = class BindingExpression {\n  constructor(observerLocator, targetProperty, sourceExpression, mode, lookupFunctions, attribute) {\n    this.observerLocator = observerLocator;\n    this.targetProperty = targetProperty;\n    this.sourceExpression = sourceExpression;\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n    this.attribute = attribute;\n    this.discrete = false;\n  }\n\n  createBinding(target) {\n    return new Binding(this.observerLocator, this.sourceExpression, target, this.targetProperty, this.mode, this.lookupFunctions);\n  }\n};\n\nexport let Binding = (_dec10 = connectable(), _dec10(_class12 = class Binding {\n  constructor(observerLocator, sourceExpression, target, targetProperty, mode, lookupFunctions) {\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.targetProperty = targetProperty;\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  updateTarget(value) {\n    this.targetObserver.setValue(value, this.target, this.targetProperty);\n  }\n\n  updateSource(value) {\n    this.sourceExpression.assign(this.source, value, this.lookupFunctions);\n  }\n\n  call(context, newValue, oldValue) {\n    if (!this.isBound) {\n      return;\n    }\n    if (context === sourceContext) {\n      oldValue = this.targetObserver.getValue(this.target, this.targetProperty);\n      newValue = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n      if (newValue !== oldValue) {\n        this.updateTarget(newValue);\n      }\n      if (this.mode !== bindingMode.oneTime) {\n        this._version++;\n        this.sourceExpression.connect(this, this.source);\n        this.unobserve(false);\n      }\n      return;\n    }\n    if (context === targetContext) {\n      if (newValue !== this.sourceExpression.evaluate(this.source, this.lookupFunctions)) {\n        this.updateSource(newValue);\n      }\n      return;\n    }\n    throw new Error(`Unexpected call context ${context}`);\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n\n    let mode = this.mode;\n    if (!this.targetObserver) {\n      let method = mode === bindingMode.twoWay || mode === bindingMode.fromView ? 'getObserver' : 'getAccessor';\n      this.targetObserver = this.observerLocator[method](this.target, this.targetProperty);\n    }\n\n    if ('bind' in this.targetObserver) {\n      this.targetObserver.bind();\n    }\n    if (this.mode !== bindingMode.fromView) {\n      let value = this.sourceExpression.evaluate(source, this.lookupFunctions);\n      this.updateTarget(value);\n    }\n\n    if (mode === bindingMode.oneTime) {\n      return;\n    } else if (mode === bindingMode.toView) {\n      enqueueBindingConnect(this);\n    } else if (mode === bindingMode.twoWay) {\n      this.sourceExpression.connect(this, source);\n      this.targetObserver.subscribe(targetContext, this);\n    } else if (mode === bindingMode.fromView) {\n      this.targetObserver.subscribe(targetContext, this);\n    }\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    if ('unbind' in this.targetObserver) {\n      this.targetObserver.unbind();\n    }\n    if (this.targetObserver.unsubscribe) {\n      this.targetObserver.unsubscribe(targetContext, this);\n    }\n    this.unobserve(true);\n  }\n\n  connect(evaluate) {\n    if (!this.isBound) {\n      return;\n    }\n    if (evaluate) {\n      let value = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n      this.updateTarget(value);\n    }\n    this.sourceExpression.connect(this, this.source);\n  }\n}) || _class12);\n\nexport let CallExpression = class CallExpression {\n  constructor(observerLocator, targetProperty, sourceExpression, lookupFunctions) {\n    this.observerLocator = observerLocator;\n    this.targetProperty = targetProperty;\n    this.sourceExpression = sourceExpression;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  createBinding(target) {\n    return new Call(this.observerLocator, this.sourceExpression, target, this.targetProperty, this.lookupFunctions);\n  }\n};\n\nexport let Call = class Call {\n  constructor(observerLocator, sourceExpression, target, targetProperty, lookupFunctions) {\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.targetProperty = observerLocator.getObserver(target, targetProperty);\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  callSource($event) {\n    let overrideContext = this.source.overrideContext;\n    Object.assign(overrideContext, $event);\n    overrideContext.$event = $event;\n    let mustEvaluate = true;\n    let result = this.sourceExpression.evaluate(this.source, this.lookupFunctions, mustEvaluate);\n    delete overrideContext.$event;\n    for (let prop in $event) {\n      delete overrideContext[prop];\n    }\n    return result;\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n    this.targetProperty.setValue($event => this.callSource($event));\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    this.targetProperty.setValue(null);\n  }\n};\n\nexport let ValueConverterResource = class ValueConverterResource {\n  constructor(name) {\n    this.name = name;\n  }\n\n  static convention(name) {\n    if (name.endsWith('ValueConverter')) {\n      return new ValueConverterResource(camelCase(name.substring(0, name.length - 14)));\n    }\n  }\n\n  initialize(container, target) {\n    this.instance = container.get(target);\n  }\n\n  register(registry, name) {\n    registry.registerValueConverter(name || this.name, this.instance);\n  }\n\n  load(container, target) {}\n};\n\nexport function valueConverter(nameOrTarget) {\n  if (nameOrTarget === undefined || typeof nameOrTarget === 'string') {\n    return function (target) {\n      metadata.define(metadata.resource, new ValueConverterResource(nameOrTarget), target);\n    };\n  }\n\n  metadata.define(metadata.resource, new ValueConverterResource(), nameOrTarget);\n}\n\nexport let BindingBehaviorResource = class BindingBehaviorResource {\n  constructor(name) {\n    this.name = name;\n  }\n\n  static convention(name) {\n    if (name.endsWith('BindingBehavior')) {\n      return new BindingBehaviorResource(camelCase(name.substring(0, name.length - 15)));\n    }\n  }\n\n  initialize(container, target) {\n    this.instance = container.get(target);\n  }\n\n  register(registry, name) {\n    registry.registerBindingBehavior(name || this.name, this.instance);\n  }\n\n  load(container, target) {}\n};\n\nexport function bindingBehavior(nameOrTarget) {\n  if (nameOrTarget === undefined || typeof nameOrTarget === 'string') {\n    return function (target) {\n      metadata.define(metadata.resource, new BindingBehaviorResource(nameOrTarget), target);\n    };\n  }\n\n  metadata.define(metadata.resource, new BindingBehaviorResource(), nameOrTarget);\n}\n\nexport let ListenerExpression = class ListenerExpression {\n  constructor(eventManager, targetEvent, sourceExpression, delegationStrategy, preventDefault, lookupFunctions) {\n    this.eventManager = eventManager;\n    this.targetEvent = targetEvent;\n    this.sourceExpression = sourceExpression;\n    this.delegationStrategy = delegationStrategy;\n    this.discrete = true;\n    this.preventDefault = preventDefault;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  createBinding(target) {\n    return new Listener(this.eventManager, this.targetEvent, this.delegationStrategy, this.sourceExpression, target, this.preventDefault, this.lookupFunctions);\n  }\n};\n\nexport let Listener = class Listener {\n  constructor(eventManager, targetEvent, delegationStrategy, sourceExpression, target, preventDefault, lookupFunctions) {\n    this.eventManager = eventManager;\n    this.targetEvent = targetEvent;\n    this.delegationStrategy = delegationStrategy;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.preventDefault = preventDefault;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  callSource(event) {\n    let overrideContext = this.source.overrideContext;\n    overrideContext.$event = event;\n    let mustEvaluate = true;\n    let result = this.sourceExpression.evaluate(this.source, this.lookupFunctions, mustEvaluate);\n    delete overrideContext.$event;\n    if (result !== true && this.preventDefault) {\n      event.preventDefault();\n    }\n    return result;\n  }\n\n  handleEvent(event) {\n    this.callSource(event);\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n    this._handler = this.eventManager.addEventListener(this.target, this.targetEvent, this, this.delegationStrategy, true);\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    this._handler.dispose();\n    this._handler = null;\n  }\n};\n\nfunction getAU(element) {\n  let au = element.au;\n\n  if (au === undefined) {\n    throw new Error(`No Aurelia APIs are defined for the element: \"${element.tagName}\".`);\n  }\n\n  return au;\n}\n\nexport let NameExpression = class NameExpression {\n  constructor(sourceExpression, apiName, lookupFunctions) {\n    this.sourceExpression = sourceExpression;\n    this.apiName = apiName;\n    this.lookupFunctions = lookupFunctions;\n    this.discrete = true;\n  }\n\n  createBinding(target) {\n    return new NameBinder(this.sourceExpression, NameExpression.locateAPI(target, this.apiName), this.lookupFunctions);\n  }\n\n  static locateAPI(element, apiName) {\n    switch (apiName) {\n      case 'element':\n        return element;\n      case 'controller':\n        return getAU(element).controller;\n      case 'view-model':\n        return getAU(element).controller.viewModel;\n      case 'view':\n        return getAU(element).controller.view;\n      default:\n        let target = getAU(element)[apiName];\n\n        if (target === undefined) {\n          throw new Error(`Attempted to reference \"${apiName}\", but it was not found amongst the target's API.`);\n        }\n\n        return target.viewModel;\n    }\n  }\n};\n\nlet NameBinder = class NameBinder {\n  constructor(sourceExpression, target, lookupFunctions) {\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n    this.sourceExpression.assign(this.source, this.target, this.lookupFunctions);\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.evaluate(this.source, this.lookupFunctions) === this.target) {\n      this.sourceExpression.assign(this.source, null, this.lookupFunctions);\n    }\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n  }\n};\n\n\nconst LookupFunctions = {\n  bindingBehaviors: name => null,\n  valueConverters: name => null\n};\n\nexport let BindingEngine = (_temp2 = _class13 = class BindingEngine {\n\n  constructor(observerLocator, parser) {\n    this.observerLocator = observerLocator;\n    this.parser = parser;\n  }\n\n  createBindingExpression(targetProperty, sourceExpression, mode = bindingMode.toView, lookupFunctions = LookupFunctions) {\n    return new BindingExpression(this.observerLocator, targetProperty, this.parser.parse(sourceExpression), mode, lookupFunctions);\n  }\n\n  propertyObserver(obj, propertyName) {\n    return {\n      subscribe: callback => {\n        let observer = this.observerLocator.getObserver(obj, propertyName);\n        observer.subscribe(callback);\n        return {\n          dispose: () => observer.unsubscribe(callback)\n        };\n      }\n    };\n  }\n\n  collectionObserver(collection) {\n    return {\n      subscribe: callback => {\n        let observer;\n        if (collection instanceof Array) {\n          observer = this.observerLocator.getArrayObserver(collection);\n        } else if (collection instanceof Map) {\n          observer = this.observerLocator.getMapObserver(collection);\n        } else if (collection instanceof Set) {\n          observer = this.observerLocator.getSetObserver(collection);\n        } else {\n          throw new Error('collection must be an instance of Array, Map or Set.');\n        }\n        observer.subscribe(callback);\n        return {\n          dispose: () => observer.unsubscribe(callback)\n        };\n      }\n    };\n  }\n\n  expressionObserver(bindingContext, expression) {\n    let scope = { bindingContext, overrideContext: createOverrideContext(bindingContext) };\n    return new ExpressionObserver(scope, this.parser.parse(expression), this.observerLocator, LookupFunctions);\n  }\n\n  parseExpression(expression) {\n    return this.parser.parse(expression);\n  }\n\n  registerAdapter(adapter) {\n    this.observerLocator.addAdapter(adapter);\n  }\n}, _class13.inject = [ObserverLocator, Parser], _temp2);\n\nlet setProto = Set.prototype;\n\nexport function getSetObserver(taskQueue, set) {\n  return ModifySetObserver.for(taskQueue, set);\n}\n\nlet ModifySetObserver = class ModifySetObserver extends ModifyCollectionObserver {\n  constructor(taskQueue, set) {\n    super(taskQueue, set);\n  }\n\n  static for(taskQueue, set) {\n    if (!('__set_observer__' in set)) {\n      Reflect.defineProperty(set, '__set_observer__', {\n        value: ModifySetObserver.create(taskQueue, set),\n        enumerable: false, configurable: false\n      });\n    }\n    return set.__set_observer__;\n  }\n\n  static create(taskQueue, set) {\n    let observer = new ModifySetObserver(taskQueue, set);\n\n    let proto = setProto;\n    if (proto.add !== set.add || proto.delete !== set.delete || proto.clear !== set.clear) {\n      proto = {\n        add: set.add,\n        delete: set.delete,\n        clear: set.clear\n      };\n    }\n\n    set.add = function () {\n      let type = 'add';\n      let oldSize = set.size;\n      let methodCallResult = proto.add.apply(set, arguments);\n      let hasValue = set.size === oldSize;\n      if (!hasValue) {\n        observer.addChangeRecord({\n          type: type,\n          object: set,\n          value: Array.from(set).pop()\n        });\n      }\n      return methodCallResult;\n    };\n\n    set.delete = function () {\n      let hasValue = set.has(arguments[0]);\n      let methodCallResult = proto.delete.apply(set, arguments);\n      if (hasValue) {\n        observer.addChangeRecord({\n          type: 'delete',\n          object: set,\n          value: arguments[0]\n        });\n      }\n      return methodCallResult;\n    };\n\n    set.clear = function () {\n      let methodCallResult = proto.clear.apply(set, arguments);\n      observer.addChangeRecord({\n        type: 'clear',\n        object: set\n      });\n      return methodCallResult;\n    };\n\n    return observer;\n  }\n};\n\n\nexport function observable(targetOrConfig, key, descriptor) {\n  function deco(target, key, descriptor, config) {\n    const isClassDecorator = key === undefined;\n    if (isClassDecorator) {\n      target = target.prototype;\n      key = typeof config === 'string' ? config : config.name;\n    }\n\n    let innerPropertyName = `_${key}`;\n    const innerPropertyDescriptor = {\n      configurable: true,\n      enumerable: false,\n      writable: true\n    };\n\n    const callbackName = config && config.changeHandler || `${key}Changed`;\n\n    if (descriptor) {\n      if (typeof descriptor.initializer === 'function') {\n        innerPropertyDescriptor.value = descriptor.initializer();\n      }\n    } else {\n      descriptor = {};\n    }\n\n    if (!('enumerable' in descriptor)) {\n      descriptor.enumerable = true;\n    }\n\n    delete descriptor.value;\n    delete descriptor.writable;\n    delete descriptor.initializer;\n\n    Reflect.defineProperty(target, innerPropertyName, innerPropertyDescriptor);\n\n    descriptor.get = function () {\n      return this[innerPropertyName];\n    };\n    descriptor.set = function (newValue) {\n      let oldValue = this[innerPropertyName];\n      if (newValue === oldValue) {\n        return;\n      }\n\n      this[innerPropertyName] = newValue;\n      Reflect.defineProperty(this, innerPropertyName, { enumerable: false });\n\n      if (this[callbackName]) {\n        this[callbackName](newValue, oldValue, key);\n      }\n    };\n\n    descriptor.get.dependencies = [innerPropertyName];\n\n    if (isClassDecorator) {\n      Reflect.defineProperty(target, key, descriptor);\n    } else {\n      return descriptor;\n    }\n  }\n\n  if (key === undefined) {\n    return (t, k, d) => deco(t, k, d, targetOrConfig);\n  }\n  return deco(targetOrConfig, key, descriptor);\n}\n\nconst signals = {};\n\nexport function connectBindingToSignal(binding, name) {\n  if (!signals.hasOwnProperty(name)) {\n    signals[name] = 0;\n  }\n  binding.observeProperty(signals, name);\n}\n\nexport function signalBindings(name) {\n  if (signals.hasOwnProperty(name)) {\n    signals[name]++;\n  }\n}","import 'aurelia-polyfills';\nimport { PLATFORM, isInitialized } from 'aurelia-pal';\n\nlet bootstrapPromises = [];\nlet startResolve;\n\nconst startPromise = new Promise(resolve => startResolve = resolve);\nconst host = PLATFORM.global;\nconst isNodeLike = typeof process !== 'undefined' && !process.browser;\n\nfunction ready() {\n  if (!host.document || host.document.readyState === 'complete') {\n    return Promise.resolve();\n  }\n\n  return new Promise(resolve => {\n    host.document.addEventListener('DOMContentLoaded', completed);\n    host.addEventListener('load', completed);\n\n    function completed() {\n      host.document.removeEventListener('DOMContentLoaded', completed);\n      host.removeEventListener('load', completed);\n      resolve();\n    }\n  });\n}\n\nfunction createLoader() {\n  if (PLATFORM.Loader) {\n    return Promise.resolve(new PLATFORM.Loader());\n  }\n\n  if (typeof AURELIA_WEBPACK_2_0 === 'undefined') {\n    if (typeof __webpack_require__ !== 'undefined') {\n      const m = __webpack_require__(require.resolve('aurelia-loader-webpack'));\n      return Promise.resolve(new m.WebpackLoader());\n    }\n\n    if (host.System && typeof host.System.config === 'function') {\n      return host.System.normalize('aurelia-bootstrapper').then(bsn => {\n        return host.System.normalize('aurelia-loader-default', bsn);\n      }).then(loaderName => {\n        return host.System.import(loaderName).then(m => new m.DefaultLoader());\n      });\n    }\n\n    if (typeof host.require === 'function' && typeof host.define === 'function' && typeof host.define.amd === 'object') {\n      return new Promise((resolve, reject) => host.require(['aurelia-loader-default'], m => resolve(new m.DefaultLoader()), reject));\n    }\n\n    if (isNodeLike && typeof module !== 'undefined' && typeof module.require !== 'undefined') {\n      const m = module.require('aurelia-loader-nodejs');\n      return Promise.resolve(new m.NodeJsLoader());\n    }\n  }\n\n  return Promise.reject('No PLATFORM.Loader is defined and there is neither a System API (ES6) or a Require API (AMD) globally available to load your app.');\n}\n\nfunction initializePal(loader) {\n  if (isInitialized) return Promise.resolve();\n\n  let type;\n\n  const isRenderer = isNodeLike && (process.type === 'renderer' || process.versions['node-webkit']);\n\n  if (isNodeLike && !isRenderer) {\n    type = 'nodejs';\n  } else if (typeof window !== 'undefined') {\n    type = 'browser';\n  } else if (typeof self !== 'undefined') {\n    type = 'worker';\n  } else {\n    throw new Error('Could not determine platform implementation to load.');\n  }\n\n  return loader.loadModule('aurelia-pal-' + type).then(palModule => type === 'nodejs' && !isInitialized && palModule.globalize() || palModule.initialize());\n}\n\nfunction preparePlatform(loader) {\n  const map = (moduleId, relativeTo) => loader.normalize(moduleId, relativeTo).then(normalized => {\n    loader.map(moduleId, normalized);\n    return normalized;\n  });\n\n  return initializePal(loader).then(() => loader.normalize('aurelia-bootstrapper')).then(bootstrapperName => {\n    const frameworkPromise = map(PLATFORM.moduleName('aurelia-framework', { exports: ['Aurelia'] }), bootstrapperName);\n\n    return Promise.all([frameworkPromise, frameworkPromise.then(frameworkName => map('aurelia-dependency-injection', frameworkName)), map('aurelia-router', bootstrapperName), map('aurelia-logging-console', bootstrapperName)]);\n  }).then(([frameworkName]) => loader.loadModule(frameworkName)).then(fx => startResolve(() => new fx.Aurelia(loader)));\n}\n\nfunction config(appHost, configModuleId, aurelia) {\n  aurelia.host = appHost;\n  aurelia.configModuleId = configModuleId || null;\n\n  if (configModuleId) {\n    return aurelia.loader.loadModule(configModuleId).then(customConfig => {\n      if (!customConfig.configure) {\n        throw new Error(`Cannot initialize module '${configModuleId}' without a configure function.`);\n      }\n\n      return customConfig.configure(aurelia);\n    });\n  }\n\n  aurelia.use.standardConfiguration().developmentLogging();\n\n  return aurelia.start().then(() => aurelia.setRoot());\n}\n\nfunction run() {\n  return ready().then(createLoader).then(preparePlatform).then(() => {\n    const appHosts = host.document.querySelectorAll('[aurelia-app],[data-aurelia-app]');\n    for (let i = 0, ii = appHosts.length; i < ii; ++i) {\n      const appHost = appHosts[i];\n      const moduleId = appHost.getAttribute('aurelia-app') || appHost.getAttribute('data-aurelia-app');\n      bootstrap(config.bind(null, appHost, moduleId));\n    }\n\n    const toConsole = console.error.bind(console);\n    const bootstraps = bootstrapPromises.map(p => p.catch(toConsole));\n    bootstrapPromises = null;\n    return Promise.all(bootstraps);\n  });\n}\n\nexport function bootstrap(configure) {\n  const p = startPromise.then(factory => configure(factory()));\n  if (bootstrapPromises) bootstrapPromises.push(p);\n  return p;\n}\n\nexport const starting = run();","import { metadata, protocol } from 'aurelia-metadata';\nimport { AggregateError } from 'aurelia-pal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\n\nfunction isInjectable(potentialTarget) {\r\n    return !!potentialTarget;\r\n}\r\nfunction autoinject(potentialTarget) {\r\n    const deco = (target) => {\r\n        if (!target.hasOwnProperty('inject')) {\r\n            target.inject = (metadata.getOwn(metadata.paramTypes, target) ||\r\n                _emptyParameters).slice();\r\n            if (target.inject && target.inject.length > 0) {\r\n                if (target.inject[target.inject.length - 1] === Object) {\r\n                    target.inject.splice(-1, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    if (isInjectable(potentialTarget)) {\r\n        return deco(potentialTarget);\r\n    }\r\n    return deco;\r\n}\r\nfunction inject(...rest) {\r\n    return (target, _key, descriptor) => {\r\n        if (typeof descriptor === 'number') {\r\n            autoinject(target);\r\n            if (rest.length === 1) {\r\n                target.inject[descriptor] = rest[0];\r\n            }\r\n            return;\r\n        }\r\n        if (descriptor) {\r\n            const fn = descriptor.value;\r\n            fn.inject = rest;\r\n        }\r\n        else {\r\n            target.inject = rest;\r\n        }\r\n    };\r\n}\n\nvar Lazy_1, All_1, Optional_1, Parent_1, Factory_1, NewInstance_1;\r\nconst resolver = protocol.create('aurelia:resolver', (target) => {\r\n    if (!(typeof target.get === 'function')) {\r\n        return 'Resolvers must implement: get(container: Container, key: any): any';\r\n    }\r\n    return true;\r\n});\r\nvar Strategy;\r\n(function (Strategy) {\r\n    Strategy[Strategy[\"instance\"] = 0] = \"instance\";\r\n    Strategy[Strategy[\"singleton\"] = 1] = \"singleton\";\r\n    Strategy[Strategy[\"transient\"] = 2] = \"transient\";\r\n    Strategy[Strategy[\"function\"] = 3] = \"function\";\r\n    Strategy[Strategy[\"array\"] = 4] = \"array\";\r\n    Strategy[Strategy[\"alias\"] = 5] = \"alias\";\r\n})(Strategy || (Strategy = {}));\r\nfunction isStrategy(actual, expected, state) {\r\n    return actual === expected;\r\n}\r\nlet StrategyResolver = class StrategyResolver {\r\n    constructor(strategy, state) {\r\n        this.strategy = strategy;\r\n        this.state = state;\r\n    }\r\n    get(container, key) {\r\n        if (isStrategy(this.strategy, Strategy.instance, this.state)) {\r\n            return this.state;\r\n        }\r\n        if (isStrategy(this.strategy, Strategy.singleton, this.state)) {\r\n            const singleton = container.invoke(this.state);\r\n            this.state = singleton;\r\n            this.strategy = 0;\r\n            return singleton;\r\n        }\r\n        if (isStrategy(this.strategy, Strategy.transient, this.state)) {\r\n            return container.invoke(this.state);\r\n        }\r\n        if (isStrategy(this.strategy, Strategy.function, this.state)) {\r\n            return this.state(container, key, this);\r\n        }\r\n        if (isStrategy(this.strategy, Strategy.array, this.state)) {\r\n            return this.state[0].get(container, key);\r\n        }\r\n        if (isStrategy(this.strategy, Strategy.alias, this.state)) {\r\n            return container.get(this.state);\r\n        }\r\n        throw new Error('Invalid strategy: ' + this.strategy);\r\n    }\r\n};\r\nStrategyResolver = __decorate([\r\n    resolver(),\r\n    __metadata(\"design:paramtypes\", [Number, Object])\r\n], StrategyResolver);\r\nlet Lazy = Lazy_1 = class Lazy {\r\n    constructor(key) {\r\n        this._key = key;\r\n    }\r\n    get(container) {\r\n        return () => container.get(this._key);\r\n    }\r\n    static of(key) {\r\n        return new Lazy_1(key);\r\n    }\r\n};\r\nLazy = Lazy_1 = __decorate([\r\n    resolver(),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], Lazy);\r\nlet All = All_1 = class All {\r\n    constructor(key) {\r\n        this._key = key;\r\n    }\r\n    get(container) {\r\n        return container.getAll(this._key);\r\n    }\r\n    static of(key) {\r\n        return new All_1(key);\r\n    }\r\n};\r\nAll = All_1 = __decorate([\r\n    resolver(),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], All);\r\nlet Optional = Optional_1 = class Optional {\r\n    constructor(key, checkParent = true) {\r\n        this._key = key;\r\n        this._checkParent = checkParent;\r\n    }\r\n    get(container) {\r\n        if (container.hasResolver(this._key, this._checkParent)) {\r\n            return container.get(this._key);\r\n        }\r\n        return null;\r\n    }\r\n    static of(key, checkParent = true) {\r\n        return new Optional_1(key, checkParent);\r\n    }\r\n};\r\nOptional = Optional_1 = __decorate([\r\n    resolver(),\r\n    __metadata(\"design:paramtypes\", [Object, Boolean])\r\n], Optional);\r\nlet Parent = Parent_1 = class Parent {\r\n    constructor(key) {\r\n        this._key = key;\r\n    }\r\n    get(container) {\r\n        return container.parent ? container.parent.get(this._key) : null;\r\n    }\r\n    static of(key) {\r\n        return new Parent_1(key);\r\n    }\r\n};\r\nParent = Parent_1 = __decorate([\r\n    resolver(),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], Parent);\r\nlet Factory = Factory_1 = class Factory {\r\n    constructor(key) {\r\n        this._key = key;\r\n    }\r\n    get(container) {\r\n        let fn = this._key;\r\n        const resolver = container.getResolver(fn);\r\n        if (resolver && resolver.strategy === Strategy.function) {\r\n            fn = resolver.state;\r\n        }\r\n        return (...rest) => container.invoke(fn, rest);\r\n    }\r\n    static of(key) {\r\n        return new Factory_1(key);\r\n    }\r\n};\r\nFactory = Factory_1 = __decorate([\r\n    resolver(),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], Factory);\r\nlet NewInstance = NewInstance_1 = class NewInstance {\r\n    constructor(key, ...dynamicDependencies) {\r\n        this.key = key;\r\n        this.asKey = key;\r\n        this.dynamicDependencies = dynamicDependencies;\r\n    }\r\n    get(container) {\r\n        const dynamicDependencies = this.dynamicDependencies.length > 0\r\n            ? this.dynamicDependencies.map(dependency => dependency['protocol:aurelia:resolver']\r\n                ? dependency.get(container)\r\n                : container.get(dependency))\r\n            : undefined;\r\n        let fn = this.key;\r\n        const resolver = container.getResolver(fn);\r\n        if (resolver && resolver.strategy === 3) {\r\n            fn = resolver.state;\r\n        }\r\n        const instance = container.invoke(fn, dynamicDependencies);\r\n        container.registerInstance(this.asKey, instance);\r\n        return instance;\r\n    }\r\n    as(key) {\r\n        this.asKey = key;\r\n        return this;\r\n    }\r\n    static of(key, ...dynamicDependencies) {\r\n        return new NewInstance_1(key, ...dynamicDependencies);\r\n    }\r\n};\r\nNewInstance = NewInstance_1 = __decorate([\r\n    resolver(),\r\n    __metadata(\"design:paramtypes\", [Object, Object])\r\n], NewInstance);\r\nfunction getDecoratorDependencies(target) {\r\n    autoinject(target);\r\n    return target.inject;\r\n}\r\nfunction lazy(keyValue) {\r\n    return (target, _key, index) => {\r\n        const inject$$1 = getDecoratorDependencies(target);\r\n        inject$$1[index] = Lazy.of(keyValue);\r\n    };\r\n}\r\nfunction all(keyValue) {\r\n    return (target, _key, index) => {\r\n        const inject$$1 = getDecoratorDependencies(target);\r\n        inject$$1[index] = All.of(keyValue);\r\n    };\r\n}\r\nfunction optional(checkParentOrTarget = true) {\r\n    const deco = (checkParent) => {\r\n        return (target, _key, index) => {\r\n            const inject$$1 = getDecoratorDependencies(target);\r\n            inject$$1[index] = Optional.of(inject$$1[index], checkParent);\r\n        };\r\n    };\r\n    if (typeof checkParentOrTarget === 'boolean') {\r\n        return deco(checkParentOrTarget);\r\n    }\r\n    return deco(true);\r\n}\r\nfunction parent(target, _key, index) {\r\n    const inject$$1 = getDecoratorDependencies(target);\r\n    inject$$1[index] = Parent.of(inject$$1[index]);\r\n}\r\nfunction factory(keyValue) {\r\n    return (target, _key, index) => {\r\n        const inject$$1 = getDecoratorDependencies(target);\r\n        inject$$1[index] = Factory.of(keyValue);\r\n    };\r\n}\r\nfunction newInstance(asKeyOrTarget, ...dynamicDependencies) {\r\n    const deco = (asKey) => {\r\n        return (target, _key, index) => {\r\n            const inject$$1 = getDecoratorDependencies(target);\r\n            inject$$1[index] = NewInstance.of(inject$$1[index], ...dynamicDependencies);\r\n            if (!!asKey) {\r\n                inject$$1[index].as(asKey);\r\n            }\r\n        };\r\n    };\r\n    if (arguments.length >= 1) {\r\n        return deco(asKeyOrTarget);\r\n    }\r\n    return deco();\r\n}\n\nfunction validateKey(key) {\r\n    if (key === null || key === undefined) {\r\n        throw new Error('key/value cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?');\r\n    }\r\n}\r\nconst _emptyParameters = Object.freeze([]);\r\nmetadata.registration = 'aurelia:registration';\r\nmetadata.invoker = 'aurelia:invoker';\r\nconst resolverDecorates = resolver.decorates;\r\nclass InvocationHandler {\r\n    constructor(fn, invoker, dependencies) {\r\n        this.fn = fn;\r\n        this.invoker = invoker;\r\n        this.dependencies = dependencies;\r\n    }\r\n    invoke(container, dynamicDependencies) {\r\n        return dynamicDependencies !== undefined\r\n            ? this.invoker.invokeWithDynamicDependencies(container, this.fn, this.dependencies, dynamicDependencies)\r\n            : this.invoker.invoke(container, this.fn, this.dependencies);\r\n    }\r\n}\r\nfunction invokeWithDynamicDependencies(container, fn, staticDependencies, dynamicDependencies) {\r\n    let i = staticDependencies.length;\r\n    let args = new Array(i);\r\n    let lookup;\r\n    while (i--) {\r\n        lookup = staticDependencies[i];\r\n        if (lookup === null || lookup === undefined) {\r\n            throw new Error('Constructor Parameter with index ' +\r\n                i +\r\n                ' cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?');\r\n        }\r\n        else {\r\n            args[i] = container.get(lookup);\r\n        }\r\n    }\r\n    if (dynamicDependencies !== undefined) {\r\n        args = args.concat(dynamicDependencies);\r\n    }\r\n    return Reflect.construct(fn, args);\r\n}\r\nconst classInvoker = {\r\n    invoke(container, Type, deps) {\r\n        const instances = deps.map((dep) => container.get(dep));\r\n        return Reflect.construct(Type, instances);\r\n    },\r\n    invokeWithDynamicDependencies\r\n};\r\nfunction getDependencies(f) {\r\n    if (!f.hasOwnProperty('inject')) {\r\n        return [];\r\n    }\r\n    if (typeof f.inject === 'function') {\r\n        return f.inject();\r\n    }\r\n    return f.inject;\r\n}\r\nclass Container {\r\n    constructor(configuration) {\r\n        if (configuration === undefined) {\r\n            configuration = {};\r\n        }\r\n        this._configuration = configuration;\r\n        this._onHandlerCreated = configuration.onHandlerCreated;\r\n        this._handlers =\r\n            configuration.handlers || (configuration.handlers = new Map());\r\n        this._resolvers = new Map();\r\n        this.root = this;\r\n        this.parent = null;\r\n    }\r\n    makeGlobal() {\r\n        Container.instance = this;\r\n        return this;\r\n    }\r\n    setHandlerCreatedCallback(onHandlerCreated) {\r\n        this._onHandlerCreated = onHandlerCreated;\r\n        this._configuration.onHandlerCreated = onHandlerCreated;\r\n    }\r\n    registerInstance(key, instance) {\r\n        return this.registerResolver(key, new StrategyResolver(0, instance === undefined ? key : instance));\r\n    }\r\n    registerSingleton(key, fn) {\r\n        return this.registerResolver(key, new StrategyResolver(1, fn === undefined ? key : fn));\r\n    }\r\n    registerTransient(key, fn) {\r\n        return this.registerResolver(key, new StrategyResolver(2, fn === undefined ? key : fn));\r\n    }\r\n    registerHandler(key, handler) {\r\n        return this.registerResolver(key, new StrategyResolver(3, handler));\r\n    }\r\n    registerAlias(originalKey, aliasKey) {\r\n        return this.registerResolver(aliasKey, new StrategyResolver(5, originalKey));\r\n    }\r\n    registerResolver(key, resolver$$1) {\r\n        validateKey(key);\r\n        const allResolvers = this._resolvers;\r\n        const result = allResolvers.get(key);\r\n        if (result === undefined) {\r\n            allResolvers.set(key, resolver$$1);\r\n        }\r\n        else if (result.strategy === 4) {\r\n            result.state.push(resolver$$1);\r\n        }\r\n        else {\r\n            allResolvers.set(key, new StrategyResolver(4, [result, resolver$$1]));\r\n        }\r\n        return resolver$$1;\r\n    }\r\n    autoRegister(key, fn) {\r\n        fn = fn === undefined ? key : fn;\r\n        if (typeof fn === 'function') {\r\n            const registration = metadata.get(metadata.registration, fn);\r\n            if (registration === undefined) {\r\n                return this.registerResolver(key, new StrategyResolver(1, fn));\r\n            }\r\n            return registration.registerResolver(this, key, fn);\r\n        }\r\n        return this.registerResolver(key, new StrategyResolver(0, fn));\r\n    }\r\n    autoRegisterAll(fns) {\r\n        let i = fns.length;\r\n        while (i--) {\r\n            this.autoRegister(fns[i]);\r\n        }\r\n    }\r\n    unregister(key) {\r\n        this._resolvers.delete(key);\r\n    }\r\n    hasResolver(key, checkParent = false) {\r\n        validateKey(key);\r\n        return (this._resolvers.has(key) ||\r\n            (checkParent &&\r\n                this.parent !== null &&\r\n                this.parent.hasResolver(key, checkParent)));\r\n    }\r\n    getResolver(key) {\r\n        return this._resolvers.get(key);\r\n    }\r\n    get(key) {\r\n        validateKey(key);\r\n        if (key === Container) {\r\n            return this;\r\n        }\r\n        if (resolverDecorates(key)) {\r\n            return key.get(this, key);\r\n        }\r\n        const resolver$$1 = this._resolvers.get(key);\r\n        if (resolver$$1 === undefined) {\r\n            if (this.parent === null) {\r\n                return this.autoRegister(key).get(this, key);\r\n            }\r\n            const registration = metadata.get(metadata.registration, key);\r\n            if (registration === undefined) {\r\n                return this.parent._get(key);\r\n            }\r\n            return registration.registerResolver(this, key, key).get(this, key);\r\n        }\r\n        return resolver$$1.get(this, key);\r\n    }\r\n    _get(key) {\r\n        const resolver$$1 = this._resolvers.get(key);\r\n        if (resolver$$1 === undefined) {\r\n            if (this.parent === null) {\r\n                return this.autoRegister(key).get(this, key);\r\n            }\r\n            return this.parent._get(key);\r\n        }\r\n        return resolver$$1.get(this, key);\r\n    }\r\n    getAll(key) {\r\n        validateKey(key);\r\n        const resolver$$1 = this._resolvers.get(key);\r\n        if (resolver$$1 === undefined) {\r\n            if (this.parent === null) {\r\n                return _emptyParameters;\r\n            }\r\n            return this.parent.getAll(key);\r\n        }\r\n        if (resolver$$1.strategy === 4) {\r\n            const state = resolver$$1.state;\r\n            let i = state.length;\r\n            const results = new Array(i);\r\n            while (i--) {\r\n                results[i] = state[i].get(this, key);\r\n            }\r\n            return results;\r\n        }\r\n        return [resolver$$1.get(this, key)];\r\n    }\r\n    createChild() {\r\n        const child = new Container(this._configuration);\r\n        child.root = this.root;\r\n        child.parent = this;\r\n        return child;\r\n    }\r\n    invoke(fn, dynamicDependencies) {\r\n        try {\r\n            let handler = this._handlers.get(fn);\r\n            if (handler === undefined) {\r\n                handler = this._createInvocationHandler(fn);\r\n                this._handlers.set(fn, handler);\r\n            }\r\n            return handler.invoke(this, dynamicDependencies);\r\n        }\r\n        catch (e) {\r\n            throw new AggregateError(`Error invoking ${fn.name}. Check the inner error for details.`, e, true);\r\n        }\r\n    }\r\n    _createInvocationHandler(fn) {\r\n        let dependencies;\r\n        if (fn.inject === undefined) {\r\n            dependencies =\r\n                metadata.getOwn(metadata.paramTypes, fn) || _emptyParameters;\r\n        }\r\n        else {\r\n            dependencies = [];\r\n            let ctor = fn;\r\n            while (typeof ctor === 'function') {\r\n                dependencies.push(...getDependencies(ctor));\r\n                ctor = Object.getPrototypeOf(ctor);\r\n            }\r\n        }\r\n        const invoker = metadata.getOwn(metadata.invoker, fn) || classInvoker;\r\n        const handler = new InvocationHandler(fn, invoker, dependencies);\r\n        return this._onHandlerCreated !== undefined\r\n            ? this._onHandlerCreated(handler)\r\n            : handler;\r\n    }\r\n}\n\nfunction invoker(value) {\r\n    return target => {\r\n        metadata.define(metadata.invoker, value, target);\r\n    };\r\n}\r\nfunction invokeAsFactory(potentialTarget) {\r\n    const deco = (target) => {\r\n        metadata.define(metadata.invoker, FactoryInvoker.instance, target);\r\n    };\r\n    return potentialTarget ? deco(potentialTarget) : deco;\r\n}\r\nclass FactoryInvoker {\r\n    invoke(container, fn, dependencies) {\r\n        let i = dependencies.length;\r\n        const args = new Array(i);\r\n        while (i--) {\r\n            args[i] = container.get(dependencies[i]);\r\n        }\r\n        return fn.apply(undefined, args);\r\n    }\r\n    invokeWithDynamicDependencies(container, fn, staticDependencies, dynamicDependencies) {\r\n        let i = staticDependencies.length;\r\n        let args = new Array(i);\r\n        while (i--) {\r\n            args[i] = container.get(staticDependencies[i]);\r\n        }\r\n        if (dynamicDependencies !== undefined) {\r\n            args = args.concat(dynamicDependencies);\r\n        }\r\n        return fn.apply(undefined, args);\r\n    }\r\n}\r\nFactoryInvoker.instance = new FactoryInvoker();\n\nfunction registration(value) {\r\n    return (target) => {\r\n        metadata.define(metadata.registration, value, target);\r\n    };\r\n}\r\nfunction transient(key) {\r\n    return registration(new TransientRegistration(key));\r\n}\r\nfunction singleton(keyOrRegisterInChild, registerInChild = false) {\r\n    return registration(new SingletonRegistration(keyOrRegisterInChild, registerInChild));\r\n}\r\nclass TransientRegistration {\r\n    constructor(key) {\r\n        this._key = key;\r\n    }\r\n    registerResolver(container, key, fn) {\r\n        const existingResolver = container.getResolver(this._key || key);\r\n        return existingResolver === undefined\r\n            ? container.registerTransient((this._key || key), fn)\r\n            : existingResolver;\r\n    }\r\n}\r\nclass SingletonRegistration {\r\n    constructor(keyOrRegisterInChild, registerInChild = false) {\r\n        if (typeof keyOrRegisterInChild === 'boolean') {\r\n            this._registerInChild = keyOrRegisterInChild;\r\n        }\r\n        else {\r\n            this._key = keyOrRegisterInChild;\r\n            this._registerInChild = registerInChild;\r\n        }\r\n    }\r\n    registerResolver(container, key, fn) {\r\n        const targetContainer = this._registerInChild ? container : container.root;\r\n        const existingResolver = targetContainer.getResolver(this._key || key);\r\n        return existingResolver === undefined\r\n            ? targetContainer.registerSingleton(this._key || key, fn)\r\n            : existingResolver;\r\n    }\r\n}\n\nexport { _emptyParameters, InvocationHandler, Container, autoinject, inject, invoker, invokeAsFactory, FactoryInvoker, registration, transient, singleton, TransientRegistration, SingletonRegistration, resolver, Strategy, StrategyResolver, Lazy, All, Optional, Parent, Factory, NewInstance, getDecoratorDependencies, lazy, all, optional, parent, factory, newInstance };\n","\n\nfunction mi(name) {\n  throw new Error(`History must implement ${name}().`);\n}\n\nexport let History = class History {\n  activate(options) {\n    mi('activate');\n  }\n\n  deactivate() {\n    mi('deactivate');\n  }\n\n  getAbsoluteRoot() {\n    mi('getAbsoluteRoot');\n  }\n\n  navigate(fragment, options) {\n    mi('navigate');\n  }\n\n  navigateBack() {\n    mi('navigateBack');\n  }\n\n  setTitle(title) {\n    mi('setTitle');\n  }\n\n  setState(key, value) {\n    mi('setState');\n  }\n\n  getState(key) {\n    mi('getState');\n  }\n\n  getHistoryIndex() {\n    mi('getHistoryIndex');\n  }\n\n  go(movement) {\n    mi('go');\n  }\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Origin } from 'aurelia-metadata';\nimport { Loader } from 'aurelia-loader';\nimport { DOM, PLATFORM } from 'aurelia-pal';\n/**\n* An implementation of the TemplateLoader interface implemented with text-based loading.\n*/\nexport class TextTemplateLoader {\n    /**\n    * Loads a template.\n    * @param loader The loader that is requesting the template load.\n    * @param entry The TemplateRegistryEntry to load and populate with a template.\n    * @return A promise which resolves when the TemplateRegistryEntry is loaded with a template.\n    */\n    loadTemplate(loader, entry) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const text = yield loader.loadText(entry.address);\n            entry.template = DOM.createTemplateFromMarkup(text);\n        });\n    }\n}\nexport function ensureOriginOnExports(moduleExports, moduleId) {\n    let target = moduleExports;\n    let key;\n    let exportedValue;\n    if (target.__useDefault) {\n        target = target.default;\n    }\n    Origin.set(target, new Origin(moduleId, 'default'));\n    if (typeof target === 'object') {\n        for (key in target) {\n            exportedValue = target[key];\n            if (typeof exportedValue === 'function') {\n                Origin.set(exportedValue, new Origin(moduleId, key));\n            }\n        }\n    }\n    return moduleExports;\n}\n/**\n* A default implementation of the Loader abstraction which works with webpack (extended common-js style).\n*/\nexport class WebpackLoader extends Loader {\n    constructor() {\n        super();\n        this.moduleRegistry = Object.create(null);\n        this.loaderPlugins = Object.create(null);\n        this.modulesBeingLoaded = new Map();\n        this.useTemplateLoader(new TextTemplateLoader());\n        this.addPlugin('template-registry-entry', {\n            fetch: (moduleId) => __awaiter(this, void 0, void 0, function* () {\n                // HMR:\n                if (module.hot) {\n                    if (!this.hmrContext) {\n                        // Note: Please do NOT import aurelia-hot-module-reload statically at the top of file.\n                        //       We don't want to bundle it when not using --hot, in particular in production builds.\n                        //       Webpack will evaluate the `if (module.hot)` above at build time \n                        //       and will include (or not) aurelia-hot-module-reload accordingly.\n                        const { HmrContext } = require('aurelia-hot-module-reload');\n                        this.hmrContext = new HmrContext(this);\n                    }\n                    module.hot.accept(moduleId, () => __awaiter(this, void 0, void 0, function* () {\n                        yield this.hmrContext.handleViewChange(moduleId);\n                    }));\n                }\n                const entry = this.getOrCreateTemplateRegistryEntry(moduleId);\n                if (!entry.templateIsLoaded) {\n                    yield this.templateLoader.loadTemplate(this, entry);\n                }\n                return entry;\n            })\n        });\n        PLATFORM.eachModule = callback => {\n            const registry = __webpack_require__.c;\n            const cachedModuleIds = Object.getOwnPropertyNames(registry);\n            cachedModuleIds\n                // Note: we use .some here like a .forEach that can be \"break\"ed out of.\n                // It will stop iterating only when a truthy value is returned.\n                // Even though the docs say \"true\" explicitly, loader-default also goes by truthy\n                // and this is to keep it consistent with that.\n                .some(moduleId => {\n                const moduleExports = registry[moduleId].exports;\n                if (typeof moduleExports === 'object') {\n                    return callback(moduleId, moduleExports);\n                }\n                return false;\n            });\n        };\n    }\n    _import(address, defaultHMR = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const addressParts = address.split('!');\n            const moduleId = addressParts.splice(addressParts.length - 1, 1)[0];\n            const loaderPlugin = addressParts.length === 1 ? addressParts[0] : null;\n            if (loaderPlugin) {\n                const plugin = this.loaderPlugins[loaderPlugin];\n                if (!plugin) {\n                    throw new Error(`Plugin ${loaderPlugin} is not registered in the loader.`);\n                }\n                if (module.hot && plugin.hot) {\n                    module.hot.accept(moduleId, () => plugin.hot(moduleId));\n                }\n                return yield plugin.fetch(moduleId);\n            }\n            if (__webpack_require__.m[moduleId]) {\n                if (defaultHMR && module.hot && this.hmrContext) {\n                    module.hot.accept(moduleId, () => this.hmrContext.handleModuleChange(moduleId, module.hot));\n                }\n                return __webpack_require__(moduleId);\n            }\n            const asyncModuleId = `async!${moduleId}`;\n            if (__webpack_require__.m[asyncModuleId]) {\n                if (defaultHMR && module.hot && this.hmrContext) {\n                    module.hot.accept(moduleId, () => this.hmrContext.handleModuleChange(moduleId, module.hot));\n                    module.hot.accept(asyncModuleId, () => this.hmrContext.handleModuleChange(moduleId, module.hot));\n                }\n                const callback = __webpack_require__(asyncModuleId);\n                return yield new Promise(callback);\n            }\n            throw new Error(`Unable to find module with ID: ${moduleId}`);\n        });\n    }\n    /**\n    * Maps a module id to a source.\n    * @param id The module id.\n    * @param source The source to map the module to.\n    */\n    map(id, source) { }\n    /**\n    * Normalizes a module id.\n    * @param moduleId The module id to normalize.\n    * @param relativeTo What the module id should be normalized relative to.\n    * @return The normalized module id.\n    */\n    normalizeSync(moduleId, relativeTo) {\n        return moduleId;\n    }\n    /**\n    * Normalizes a module id.\n    * @param moduleId The module id to normalize.\n    * @param relativeTo What the module id should be normalized relative to.\n    * @return The normalized module id.\n    */\n    normalize(moduleId, relativeTo) {\n        return Promise.resolve(moduleId);\n    }\n    /**\n    * Instructs the loader to use a specific TemplateLoader instance for loading templates\n    * @param templateLoader The instance of TemplateLoader to use for loading templates.\n    */\n    useTemplateLoader(templateLoader) {\n        this.templateLoader = templateLoader;\n    }\n    /**\n    * Loads a collection of modules.\n    * @param ids The set of module ids to load.\n    * @return A Promise for an array of loaded modules.\n    */\n    loadAllModules(ids) {\n        return Promise.all(ids.map(id => this.loadModule(id)));\n    }\n    /**\n    * Loads a module.\n    * @param moduleId The module ID to load.\n    * @return A Promise for the loaded module.\n    */\n    loadModule(moduleId, defaultHMR = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let existing = this.moduleRegistry[moduleId];\n            if (existing) {\n                return existing;\n            }\n            let beingLoaded = this.modulesBeingLoaded.get(moduleId);\n            if (beingLoaded) {\n                return beingLoaded;\n            }\n            beingLoaded = this._import(moduleId, defaultHMR);\n            this.modulesBeingLoaded.set(moduleId, beingLoaded);\n            const moduleExports = yield beingLoaded;\n            this.moduleRegistry[moduleId] = ensureOriginOnExports(moduleExports, moduleId);\n            this.modulesBeingLoaded.delete(moduleId);\n            return moduleExports;\n        });\n    }\n    /**\n    * Loads a template.\n    * @param url The url of the template to load.\n    * @return A Promise for a TemplateRegistryEntry containing the template.\n    */\n    loadTemplate(url) {\n        return this.loadModule(this.applyPluginToUrl(url, 'template-registry-entry'), false);\n    }\n    /**\n    * Loads a text-based resource.\n    * @param url The url of the text file to load.\n    * @return A Promise for text content.\n    */\n    loadText(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.loadModule(url, false);\n            if (result instanceof Array && result[0] instanceof Array && result.hasOwnProperty('toString')) {\n                // we're dealing with a file loaded using the css-loader:\n                return result.toString();\n            }\n            return result;\n        });\n    }\n    /**\n    * Alters a module id so that it includes a plugin loader.\n    * @param url The url of the module to load.\n    * @param pluginName The plugin to apply to the module id.\n    * @return The plugin-based module id.\n    */\n    applyPluginToUrl(url, pluginName) {\n        return `${pluginName}!${url}`;\n    }\n    /**\n    * Registers a plugin with the loader.\n    * @param pluginName The name of the plugin.\n    * @param implementation The plugin implementation.\n    */\n    addPlugin(pluginName, implementation) {\n        this.loaderPlugins[pluginName] = implementation;\n    }\n}\nPLATFORM.Loader = WebpackLoader;\n","import { relativeToFile } from 'aurelia-path';\nimport { Origin } from 'aurelia-metadata';\n\nexport let TemplateDependency = class TemplateDependency {\n  constructor(src, name) {\n    this.src = src;\n    this.name = name;\n  }\n};\n\nexport let TemplateRegistryEntry = class TemplateRegistryEntry {\n  constructor(address) {\n    this.templateIsLoaded = false;\n    this.factoryIsReady = false;\n    this.resources = null;\n    this.dependencies = null;\n\n    this.address = address;\n    this.onReady = null;\n    this._template = null;\n    this._factory = null;\n  }\n\n  get template() {\n    return this._template;\n  }\n\n  set template(value) {\n    let address = this.address;\n    let requires;\n    let current;\n    let src;\n    let dependencies;\n\n    this._template = value;\n    this.templateIsLoaded = true;\n\n    requires = value.content.querySelectorAll('require');\n    dependencies = this.dependencies = new Array(requires.length);\n\n    for (let i = 0, ii = requires.length; i < ii; ++i) {\n      current = requires[i];\n      src = current.getAttribute('from');\n\n      if (!src) {\n        throw new Error(`<require> element in ${address} has no \"from\" attribute.`);\n      }\n\n      dependencies[i] = new TemplateDependency(relativeToFile(src, address), current.getAttribute('as'));\n\n      if (current.parentNode) {\n        current.parentNode.removeChild(current);\n      }\n    }\n  }\n\n  get factory() {\n    return this._factory;\n  }\n\n  set factory(value) {\n    this._factory = value;\n    this.factoryIsReady = true;\n  }\n\n  addDependency(src, name) {\n    let finalSrc = typeof src === 'string' ? relativeToFile(src, this.address) : Origin.get(src).moduleId;\n\n    this.dependencies.push(new TemplateDependency(finalSrc, name));\n  }\n};\n\nexport let Loader = class Loader {\n  constructor() {\n    this.templateRegistry = {};\n  }\n\n  map(id, source) {\n    throw new Error('Loaders must implement map(id, source).');\n  }\n\n  normalizeSync(moduleId, relativeTo) {\n    throw new Error('Loaders must implement normalizeSync(moduleId, relativeTo).');\n  }\n\n  normalize(moduleId, relativeTo) {\n    throw new Error('Loaders must implement normalize(moduleId: string, relativeTo: string): Promise<string>.');\n  }\n\n  loadModule(id) {\n    throw new Error('Loaders must implement loadModule(id).');\n  }\n\n  loadAllModules(ids) {\n    throw new Error('Loader must implement loadAllModules(ids).');\n  }\n\n  loadTemplate(url) {\n    throw new Error('Loader must implement loadTemplate(url).');\n  }\n\n  loadText(url) {\n    throw new Error('Loader must implement loadText(url).');\n  }\n\n  applyPluginToUrl(url, pluginName) {\n    throw new Error('Loader must implement applyPluginToUrl(url, pluginName).');\n  }\n\n  addPlugin(pluginName, implementation) {\n    throw new Error('Loader must implement addPlugin(pluginName, implementation).');\n  }\n\n  getOrCreateTemplateRegistryEntry(address) {\n    return this.templateRegistry[address] || (this.templateRegistry[address] = new TemplateRegistryEntry(address));\n  }\n};","\nexport const logLevel = {\n  none: 0,\n  error: 10,\n  warn: 20,\n  info: 30,\n  debug: 40\n};\n\nlet loggers = {};\nlet appenders = [];\nlet globalDefaultLevel = logLevel.none;\n\nconst standardLevels = ['none', 'error', 'warn', 'info', 'debug'];\nfunction isStandardLevel(level) {\n  return standardLevels.filter(l => l === level).length > 0;\n}\n\nfunction appendArgs() {\n  return [this, ...arguments];\n}\n\nfunction logFactory(level) {\n  const threshold = logLevel[level];\n  return function () {\n    if (this.level < threshold) {\n      return;\n    }\n\n    const args = appendArgs.apply(this, arguments);\n    let i = appenders.length;\n    while (i--) {\n      appenders[i][level](...args);\n    }\n  };\n}\n\nfunction logFactoryCustom(level) {\n  const threshold = logLevel[level];\n  return function () {\n    if (this.level < threshold) {\n      return;\n    }\n\n    const args = appendArgs.apply(this, arguments);\n    let i = appenders.length;\n    while (i--) {\n      const appender = appenders[i];\n      if (appender[level] !== undefined) {\n        appender[level](...args);\n      }\n    }\n  };\n}\n\nfunction connectLoggers() {\n  let proto = Logger.prototype;\n  for (let level in logLevel) {\n    if (isStandardLevel(level)) {\n      if (level !== 'none') {\n        proto[level] = logFactory(level);\n      }\n    } else {\n      proto[level] = logFactoryCustom(level);\n    }\n  }\n}\n\nfunction disconnectLoggers() {\n  let proto = Logger.prototype;\n  for (let level in logLevel) {\n    if (level !== 'none') {\n      proto[level] = function () {};\n    }\n  }\n}\n\nexport function getLogger(id) {\n  return loggers[id] || new Logger(id);\n}\n\nexport function addAppender(appender) {\n  if (appenders.push(appender) === 1) {\n    connectLoggers();\n  }\n}\n\nexport function removeAppender(appender) {\n  appenders = appenders.filter(a => a !== appender);\n}\n\nexport function getAppenders() {\n  return [...appenders];\n}\n\nexport function clearAppenders() {\n  appenders = [];\n  disconnectLoggers();\n}\n\nexport function addCustomLevel(name, value) {\n  if (logLevel[name] !== undefined) {\n    throw Error(`Log level \"${name}\" already exists.`);\n  }\n\n  if (isNaN(value)) {\n    throw Error('Value must be a number.');\n  }\n\n  logLevel[name] = value;\n\n  if (appenders.length > 0) {\n    connectLoggers();\n  } else {\n    Logger.prototype[name] = function () {};\n  }\n}\n\nexport function removeCustomLevel(name) {\n  if (logLevel[name] === undefined) {\n    return;\n  }\n\n  if (isStandardLevel(name)) {\n    throw Error(`Built-in log level \"${name}\" cannot be removed.`);\n  }\n\n  delete logLevel[name];\n  delete Logger.prototype[name];\n}\n\nexport function setLevel(level) {\n  globalDefaultLevel = level;\n  for (let key in loggers) {\n    loggers[key].setLevel(level);\n  }\n}\n\nexport function getLevel() {\n  return globalDefaultLevel;\n}\n\nexport let Logger = class Logger {\n  constructor(id) {\n    let cached = loggers[id];\n    if (cached) {\n      return cached;\n    }\n\n    loggers[id] = this;\n    this.id = id;\n    this.level = globalDefaultLevel;\n  }\n\n  debug(message, ...rest) {}\n\n  info(message, ...rest) {}\n\n  warn(message, ...rest) {}\n\n  error(message, ...rest) {}\n\n  setLevel(level) {\n    this.level = level;\n  }\n\n  isDebugEnabled() {\n    return this.level === logLevel.debug;\n  }\n};","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { PLATFORM } from 'aurelia-pal';\n\nfunction isObject(val) {\n  return val && (typeof val === 'function' || typeof val === 'object');\n}\n\nexport const metadata = {\n  resource: 'aurelia:resource',\n  paramTypes: 'design:paramtypes',\n  propertyType: 'design:type',\n  properties: 'design:properties',\n  get(metadataKey, target, targetKey) {\n    if (!isObject(target)) {\n      return undefined;\n    }\n    let result = metadata.getOwn(metadataKey, target, targetKey);\n    return result === undefined ? metadata.get(metadataKey, Object.getPrototypeOf(target), targetKey) : result;\n  },\n  getOwn(metadataKey, target, targetKey) {\n    if (!isObject(target)) {\n      return undefined;\n    }\n    return Reflect.getOwnMetadata(metadataKey, target, targetKey);\n  },\n  define(metadataKey, metadataValue, target, targetKey) {\n    Reflect.defineMetadata(metadataKey, metadataValue, target, targetKey);\n  },\n  getOrCreateOwn(metadataKey, Type, target, targetKey) {\n    let result = metadata.getOwn(metadataKey, target, targetKey);\n\n    if (result === undefined) {\n      result = new Type();\n      Reflect.defineMetadata(metadataKey, result, target, targetKey);\n    }\n\n    return result;\n  }\n};\n\nconst originStorage = new Map();\nconst unknownOrigin = Object.freeze({ moduleId: undefined, moduleMember: undefined });\n\nexport let Origin = class Origin {\n  constructor(moduleId, moduleMember) {\n    this.moduleId = moduleId;\n    this.moduleMember = moduleMember;\n  }\n\n  static get(fn) {\n    let origin = originStorage.get(fn);\n\n    if (origin === undefined) {\n      PLATFORM.eachModule((key, value) => {\n        if (typeof value === 'object') {\n          for (let name in value) {\n            try {\n              let exp = value[name];\n              if (exp === fn) {\n                originStorage.set(fn, origin = new Origin(key, name));\n                return true;\n              }\n            } catch (e) {}\n          }\n        }\n\n        if (value === fn) {\n          originStorage.set(fn, origin = new Origin(key, 'default'));\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return origin || unknownOrigin;\n  }\n\n  static set(fn, origin) {\n    originStorage.set(fn, origin);\n  }\n};\n\nexport function decorators(...rest) {\n  let applicator = function (target, key, descriptor) {\n    let i = rest.length;\n\n    if (key) {\n      descriptor = descriptor || {\n        value: target[key],\n        writable: true,\n        configurable: true,\n        enumerable: true\n      };\n\n      while (i--) {\n        descriptor = rest[i](target, key, descriptor) || descriptor;\n      }\n\n      Object.defineProperty(target, key, descriptor);\n    } else {\n      while (i--) {\n        target = rest[i](target) || target;\n      }\n    }\n\n    return target;\n  };\n\n  applicator.on = applicator;\n  return applicator;\n}\n\nexport function deprecated(optionsOrTarget, maybeKey, maybeDescriptor) {\n  function decorator(target, key, descriptor) {\n    const methodSignature = `${target.constructor.name}#${key}`;\n    let options = maybeKey ? {} : optionsOrTarget || {};\n    let message = `DEPRECATION - ${methodSignature}`;\n\n    if (typeof descriptor.value !== 'function') {\n      throw new SyntaxError('Only methods can be marked as deprecated.');\n    }\n\n    if (options.message) {\n      message += ` - ${options.message}`;\n    }\n\n    return _extends({}, descriptor, {\n      value: function deprecationWrapper() {\n        if (options.error) {\n          throw new Error(message);\n        } else {\n          console.warn(message);\n        }\n\n        return descriptor.value.apply(this, arguments);\n      }\n    });\n  }\n\n  return maybeKey ? decorator(optionsOrTarget, maybeKey, maybeDescriptor) : decorator;\n}\n\nexport function mixin(behavior) {\n  const instanceKeys = Object.keys(behavior);\n\n  function _mixin(possible) {\n    let decorator = function (target) {\n      let resolvedTarget = typeof target === 'function' ? target.prototype : target;\n\n      let i = instanceKeys.length;\n      while (i--) {\n        let property = instanceKeys[i];\n        Object.defineProperty(resolvedTarget, property, {\n          value: behavior[property],\n          writable: true\n        });\n      }\n    };\n\n    return possible ? decorator(possible) : decorator;\n  }\n\n  return _mixin;\n}\n\nfunction alwaysValid() {\n  return true;\n}\nfunction noCompose() {}\n\nfunction ensureProtocolOptions(options) {\n  if (options === undefined) {\n    options = {};\n  } else if (typeof options === 'function') {\n    options = {\n      validate: options\n    };\n  }\n\n  if (!options.validate) {\n    options.validate = alwaysValid;\n  }\n\n  if (!options.compose) {\n    options.compose = noCompose;\n  }\n\n  return options;\n}\n\nfunction createProtocolValidator(validate) {\n  return function (target) {\n    let result = validate(target);\n    return result === true;\n  };\n}\n\nfunction createProtocolAsserter(name, validate) {\n  return function (target) {\n    let result = validate(target);\n    if (result !== true) {\n      throw new Error(result || `${name} was not correctly implemented.`);\n    }\n  };\n}\n\nexport function protocol(name, options) {\n  options = ensureProtocolOptions(options);\n\n  let result = function (target) {\n    let resolvedTarget = typeof target === 'function' ? target.prototype : target;\n\n    options.compose(resolvedTarget);\n    result.assert(resolvedTarget);\n\n    Object.defineProperty(resolvedTarget, 'protocol:' + name, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: true\n    });\n  };\n\n  result.validate = createProtocolValidator(options.validate);\n  result.assert = createProtocolAsserter(name, options.validate);\n\n  return result;\n}\n\nprotocol.create = function (name, options) {\n  options = ensureProtocolOptions(options);\n  let hidden = 'protocol:' + name;\n  let result = function (target) {\n    let decorator = protocol(name, options);\n    return target ? decorator(target) : decorator;\n  };\n\n  result.decorates = function (obj) {\n    return obj[hidden] === true;\n  };\n  result.validate = createProtocolValidator(options.validate);\n  result.assert = createProtocolAsserter(name, options.validate);\n\n  return result;\n};","\nexport function AggregateError(message, innerError, skipIfAlreadyAggregate) {\n  if (innerError) {\n    if (innerError.innerError && skipIfAlreadyAggregate) {\n      return innerError;\n    }\n\n    const separator = '\\n------------------------------------------------\\n';\n\n    message += `${separator}Inner Error:\\n`;\n\n    if (typeof innerError === 'string') {\n      message += `Message: ${innerError}`;\n    } else {\n      if (innerError.message) {\n        message += `Message: ${innerError.message}`;\n      } else {\n        message += `Unknown Inner Error Type. Displaying Inner Error as JSON:\\n ${JSON.stringify(innerError, null, '  ')}`;\n      }\n\n      if (innerError.stack) {\n        message += `\\nInner Error Stack:\\n${innerError.stack}`;\n        message += '\\nEnd Inner Error Stack';\n      }\n    }\n\n    message += separator;\n  }\n\n  let e = new Error(message);\n  if (innerError) {\n    e.innerError = innerError;\n  }\n\n  return e;\n}\n\nexport const FEATURE = {};\n\nexport const PLATFORM = {\n  noop() {},\n  eachModule() {},\n  moduleName(moduleName) {\n    return moduleName;\n  }\n};\n\nPLATFORM.global = function () {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  return new Function('return this')();\n}();\n\nexport const DOM = {};\nexport let isInitialized = false;\n\nexport function initializePAL(callback) {\n  if (isInitialized) {\n    return;\n  }\n  isInitialized = true;\n  if (typeof Object.getPropertyDescriptor !== 'function') {\n    Object.getPropertyDescriptor = function (subject, name) {\n      let pd = Object.getOwnPropertyDescriptor(subject, name);\n      let proto = Object.getPrototypeOf(subject);\n      while (typeof pd === 'undefined' && proto !== null) {\n        pd = Object.getOwnPropertyDescriptor(proto, name);\n        proto = Object.getPrototypeOf(proto);\n      }\n      return pd;\n    };\n  }\n\n  callback(PLATFORM, FEATURE, DOM);\n}\nexport function reset() {\n  isInitialized = false;\n}","\nfunction trimDots(ary) {\n  for (let i = 0; i < ary.length; ++i) {\n    let part = ary[i];\n    if (part === '.') {\n      ary.splice(i, 1);\n      i -= 1;\n    } else if (part === '..') {\n      if (i === 0 || i === 1 && ary[2] === '..' || ary[i - 1] === '..') {\n        continue;\n      } else if (i > 0) {\n        ary.splice(i - 1, 2);\n        i -= 2;\n      }\n    }\n  }\n}\n\nexport function relativeToFile(name, file) {\n  let fileParts = file && file.split('/');\n  let nameParts = name.trim().split('/');\n\n  if (nameParts[0].charAt(0) === '.' && fileParts) {\n    let normalizedBaseParts = fileParts.slice(0, fileParts.length - 1);\n    nameParts.unshift(...normalizedBaseParts);\n  }\n\n  trimDots(nameParts);\n\n  return nameParts.join('/');\n}\n\nexport function join(path1, path2) {\n  if (!path1) {\n    return path2;\n  }\n\n  if (!path2) {\n    return path1;\n  }\n\n  let schemeMatch = path1.match(/^([^/]*?:)\\//);\n  let scheme = schemeMatch && schemeMatch.length > 0 ? schemeMatch[1] : '';\n  path1 = path1.substr(scheme.length);\n\n  let urlPrefix;\n  if (path1.indexOf('///') === 0 && scheme === 'file:') {\n    urlPrefix = '///';\n  } else if (path1.indexOf('//') === 0) {\n    urlPrefix = '//';\n  } else if (path1.indexOf('/') === 0) {\n    urlPrefix = '/';\n  } else {\n    urlPrefix = '';\n  }\n\n  let trailingSlash = path2.slice(-1) === '/' ? '/' : '';\n\n  let url1 = path1.split('/');\n  let url2 = path2.split('/');\n  let url3 = [];\n\n  for (let i = 0, ii = url1.length; i < ii; ++i) {\n    if (url1[i] === '..') {\n      if (url3.length && url3[url3.length - 1] !== '..') {\n        url3.pop();\n      } else {\n        url3.push(url1[i]);\n      }\n    } else if (url1[i] === '.' || url1[i] === '') {\n      continue;\n    } else {\n      url3.push(url1[i]);\n    }\n  }\n\n  for (let i = 0, ii = url2.length; i < ii; ++i) {\n    if (url2[i] === '..') {\n      if (url3.length && url3[url3.length - 1] !== '..') {\n        url3.pop();\n      } else {\n        url3.push(url2[i]);\n      }\n    } else if (url2[i] === '.' || url2[i] === '') {\n      continue;\n    } else {\n      url3.push(url2[i]);\n    }\n  }\n\n  return scheme + urlPrefix + url3.join('/') + trailingSlash;\n}\n\nlet encode = encodeURIComponent;\nlet encodeKey = k => encode(k).replace('%24', '$');\n\nfunction buildParam(key, value, traditional) {\n  let result = [];\n  if (value === null || value === undefined) {\n    return result;\n  }\n  if (Array.isArray(value)) {\n    for (let i = 0, l = value.length; i < l; i++) {\n      if (traditional) {\n        result.push(`${encodeKey(key)}=${encode(value[i])}`);\n      } else {\n        let arrayKey = key + '[' + (typeof value[i] === 'object' && value[i] !== null ? i : '') + ']';\n        result = result.concat(buildParam(arrayKey, value[i]));\n      }\n    }\n  } else if (typeof value === 'object' && !traditional) {\n    for (let propertyName in value) {\n      result = result.concat(buildParam(key + '[' + propertyName + ']', value[propertyName]));\n    }\n  } else {\n    result.push(`${encodeKey(key)}=${encode(value)}`);\n  }\n  return result;\n}\n\nexport function buildQueryString(params, traditional) {\n  let pairs = [];\n  let keys = Object.keys(params || {}).sort();\n  for (let i = 0, len = keys.length; i < len; i++) {\n    let key = keys[i];\n    pairs = pairs.concat(buildParam(key, params[key], traditional));\n  }\n\n  if (pairs.length === 0) {\n    return '';\n  }\n\n  return pairs.join('&');\n}\n\nfunction processScalarParam(existedParam, value) {\n  if (Array.isArray(existedParam)) {\n    existedParam.push(value);\n    return existedParam;\n  }\n  if (existedParam !== undefined) {\n    return [existedParam, value];\n  }\n\n  return value;\n}\n\nfunction parseComplexParam(queryParams, keys, value) {\n  let currentParams = queryParams;\n  let keysLastIndex = keys.length - 1;\n  for (let j = 0; j <= keysLastIndex; j++) {\n    let key = keys[j] === '' ? currentParams.length : keys[j];\n    if (j < keysLastIndex) {\n      let prevValue = !currentParams[key] || typeof currentParams[key] === 'object' ? currentParams[key] : [currentParams[key]];\n      currentParams = currentParams[key] = prevValue || (isNaN(keys[j + 1]) ? {} : []);\n    } else {\n      currentParams = currentParams[key] = value;\n    }\n  }\n}\n\nexport function parseQueryString(queryString) {\n  let queryParams = {};\n  if (!queryString || typeof queryString !== 'string') {\n    return queryParams;\n  }\n\n  let query = queryString;\n  if (query.charAt(0) === '?') {\n    query = query.substr(1);\n  }\n\n  let pairs = query.replace(/\\+/g, ' ').split('&');\n  for (let i = 0; i < pairs.length; i++) {\n    let pair = pairs[i].split('=');\n    let key = decodeURIComponent(pair[0]);\n    if (!key) {\n      continue;\n    }\n\n    let keys = key.split('][');\n    let keysLastIndex = keys.length - 1;\n\n    if (/\\[/.test(keys[0]) && /\\]$/.test(keys[keysLastIndex])) {\n      keys[keysLastIndex] = keys[keysLastIndex].replace(/\\]$/, '');\n      keys = keys.shift().split('[').concat(keys);\n      keysLastIndex = keys.length - 1;\n    } else {\n      keysLastIndex = 0;\n    }\n\n    if (pair.length >= 2) {\n      let value = pair[1] ? decodeURIComponent(pair[1]) : '';\n      if (keysLastIndex) {\n        parseComplexParam(queryParams, keys, value);\n      } else {\n        queryParams[key] = processScalarParam(queryParams[key], value);\n      }\n    } else {\n      queryParams[key] = true;\n    }\n  }\n  return queryParams;\n}","import { PLATFORM } from 'aurelia-pal';\n\nif (typeof FEATURE_NO_ES2015 === 'undefined') {\n\n  (function (Object, GOPS) {\n    'use strict';\n\n    if (GOPS in Object) return;\n\n    var setDescriptor,\n        G = PLATFORM.global,\n        id = 0,\n        random = '' + Math.random(),\n        prefix = '__\\x01symbol:',\n        prefixLength = prefix.length,\n        internalSymbol = '__\\x01symbol@@' + random,\n        DP = 'defineProperty',\n        DPies = 'defineProperties',\n        GOPN = 'getOwnPropertyNames',\n        GOPD = 'getOwnPropertyDescriptor',\n        PIE = 'propertyIsEnumerable',\n        gOPN = Object[GOPN],\n        gOPD = Object[GOPD],\n        create = Object.create,\n        keys = Object.keys,\n        defineProperty = Object[DP],\n        $defineProperties = Object[DPies],\n        descriptor = gOPD(Object, GOPN),\n        ObjectProto = Object.prototype,\n        hOP = ObjectProto.hasOwnProperty,\n        pIE = ObjectProto[PIE],\n        toString = ObjectProto.toString,\n        indexOf = Array.prototype.indexOf || function (v) {\n      for (var i = this.length; i-- && this[i] !== v;) {}\n      return i;\n    },\n        addInternalIfNeeded = function (o, uid, enumerable) {\n      if (!hOP.call(o, internalSymbol)) {\n        defineProperty(o, internalSymbol, {\n          enumerable: false,\n          configurable: false,\n          writable: false,\n          value: {}\n        });\n      }\n      o[internalSymbol]['@@' + uid] = enumerable;\n    },\n        createWithSymbols = function (proto, descriptors) {\n      var self = create(proto);\n      if (descriptors !== null && typeof descriptors === 'object') {\n        gOPN(descriptors).forEach(function (key) {\n          if (propertyIsEnumerable.call(descriptors, key)) {\n            $defineProperty(self, key, descriptors[key]);\n          }\n        });\n      }\n      return self;\n    },\n        copyAsNonEnumerable = function (descriptor) {\n      var newDescriptor = create(descriptor);\n      newDescriptor.enumerable = false;\n      return newDescriptor;\n    },\n        get = function get() {},\n        onlyNonSymbols = function (name) {\n      return name != internalSymbol && !hOP.call(source, name);\n    },\n        onlySymbols = function (name) {\n      return name != internalSymbol && hOP.call(source, name);\n    },\n        propertyIsEnumerable = function propertyIsEnumerable(key) {\n      var uid = '' + key;\n      return onlySymbols(uid) ? hOP.call(this, uid) && this[internalSymbol] && this[internalSymbol]['@@' + uid] : pIE.call(this, key);\n    },\n        setAndGetSymbol = function (uid) {\n      var descriptor = {\n        enumerable: false,\n        configurable: true,\n        get: get,\n        set: function (value) {\n          setDescriptor(this, uid, {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n          addInternalIfNeeded(this, uid, true);\n        }\n      };\n      defineProperty(ObjectProto, uid, descriptor);\n      return source[uid] = defineProperty(Object(uid), 'constructor', sourceConstructor);\n    },\n        Symbol = function Symbol(description) {\n      if (this && this !== G) {\n        throw new TypeError('Symbol is not a constructor');\n      }\n      return setAndGetSymbol(prefix.concat(description || '', random, ++id));\n    },\n        source = create(null),\n        sourceConstructor = { value: Symbol },\n        sourceMap = function (uid) {\n      return source[uid];\n    },\n        $defineProperty = function defineProp(o, key, descriptor) {\n      var uid = '' + key;\n      if (onlySymbols(uid)) {\n        setDescriptor(o, uid, descriptor.enumerable ? copyAsNonEnumerable(descriptor) : descriptor);\n        addInternalIfNeeded(o, uid, !!descriptor.enumerable);\n      } else {\n        defineProperty(o, key, descriptor);\n      }\n      return o;\n    },\n        $getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n      var cof = toString.call(o);\n      o = cof === '[object String]' ? o.split('') : Object(o);\n      return gOPN(o).filter(onlySymbols).map(sourceMap);\n    };\n\n    descriptor.value = $defineProperty;\n    defineProperty(Object, DP, descriptor);\n\n    descriptor.value = $getOwnPropertySymbols;\n    defineProperty(Object, GOPS, descriptor);\n\n    var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\n    var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n    descriptor.value = function getOwnPropertyNames(o) {\n      if (toString.call(o) === '[object Window]') {\n        try {\n          return originalObjectGetOwnPropertyNames(o);\n        } catch (e) {\n          return [].concat([], cachedWindowNames);\n        }\n      }\n      return gOPN(o).filter(onlyNonSymbols);\n    };\n    defineProperty(Object, GOPN, descriptor);\n\n    descriptor.value = function defineProperties(o, descriptors) {\n      var symbols = $getOwnPropertySymbols(descriptors);\n      if (symbols.length) {\n        keys(descriptors).concat(symbols).forEach(function (uid) {\n          if (propertyIsEnumerable.call(descriptors, uid)) {\n            $defineProperty(o, uid, descriptors[uid]);\n          }\n        });\n      } else {\n        $defineProperties(o, descriptors);\n      }\n      return o;\n    };\n    defineProperty(Object, DPies, descriptor);\n\n    descriptor.value = propertyIsEnumerable;\n    defineProperty(ObjectProto, PIE, descriptor);\n\n    descriptor.value = Symbol;\n    defineProperty(G, 'Symbol', descriptor);\n\n    descriptor.value = function (key) {\n      var uid = prefix.concat(prefix, key, random);\n      return uid in ObjectProto ? source[uid] : setAndGetSymbol(uid);\n    };\n    defineProperty(Symbol, 'for', descriptor);\n\n    descriptor.value = function (symbol) {\n      return hOP.call(source, symbol) ? symbol.slice(prefixLength * 2, -random.length) : void 0;\n    };\n    defineProperty(Symbol, 'keyFor', descriptor);\n\n    descriptor.value = function getOwnPropertyDescriptor(o, key) {\n      var descriptor = gOPD(o, key);\n      if (descriptor && onlySymbols(key)) {\n        descriptor.enumerable = propertyIsEnumerable.call(o, key);\n      }\n      return descriptor;\n    };\n    defineProperty(Object, GOPD, descriptor);\n\n    descriptor.value = function (proto, descriptors) {\n      return arguments.length === 1 ? create(proto) : createWithSymbols(proto, descriptors);\n    };\n    defineProperty(Object, 'create', descriptor);\n\n    descriptor.value = function () {\n      var str = toString.call(this);\n      return str === '[object String]' && onlySymbols(this) ? '[object Symbol]' : str;\n    };\n    defineProperty(ObjectProto, 'toString', descriptor);\n\n    try {\n      setDescriptor = create(defineProperty({}, prefix, {\n        get: function () {\n          return defineProperty(this, prefix, { value: false })[prefix];\n        }\n      }))[prefix] || defineProperty;\n    } catch (o_O) {\n      setDescriptor = function (o, key, descriptor) {\n        var protoDescriptor = gOPD(ObjectProto, key);\n        delete ObjectProto[key];\n        defineProperty(o, key, descriptor);\n        defineProperty(ObjectProto, key, protoDescriptor);\n      };\n    }\n  })(Object, 'getOwnPropertySymbols');\n\n  (function (O, S) {\n    var dP = O.defineProperty,\n        ObjectProto = O.prototype,\n        toString = ObjectProto.toString,\n        toStringTag = 'toStringTag',\n        descriptor;\n    ['iterator', 'match', 'replace', 'search', 'split', 'hasInstance', 'isConcatSpreadable', 'unscopables', 'species', 'toPrimitive', toStringTag].forEach(function (name) {\n      if (!(name in Symbol)) {\n        dP(Symbol, name, { value: Symbol(name) });\n        switch (name) {\n          case toStringTag:\n            descriptor = O.getOwnPropertyDescriptor(ObjectProto, 'toString');\n            descriptor.value = function () {\n              var str = toString.call(this),\n                  tst = typeof this === 'undefined' || this === null ? undefined : this[Symbol.toStringTag];\n              return typeof tst === 'undefined' ? str : '[object ' + tst + ']';\n            };\n            dP(ObjectProto, 'toString', descriptor);\n            break;\n        }\n      }\n    });\n  })(Object, Symbol);\n\n  (function (Si, AP, SP) {\n\n    function returnThis() {\n      return this;\n    }\n\n    if (!AP[Si]) AP[Si] = function () {\n      var i = 0,\n          self = this,\n          iterator = {\n        next: function next() {\n          var done = self.length <= i;\n          return done ? { done: done } : { done: done, value: self[i++] };\n        }\n      };\n      iterator[Si] = returnThis;\n      return iterator;\n    };\n\n    if (!SP[Si]) SP[Si] = function () {\n      var fromCodePoint = String.fromCodePoint,\n          self = this,\n          i = 0,\n          length = self.length,\n          iterator = {\n        next: function next() {\n          var done = length <= i,\n              c = done ? '' : fromCodePoint(self.codePointAt(i));\n          i += c.length;\n          return done ? { done: done } : { done: done, value: c };\n        }\n      };\n      iterator[Si] = returnThis;\n      return iterator;\n    };\n  })(Symbol.iterator, Array.prototype, String.prototype);\n}\n\nif (typeof FEATURE_NO_ES2015 === 'undefined') {\n\n  Number.isNaN = Number.isNaN || function (value) {\n    return value !== value;\n  };\n\n  Number.isFinite = Number.isFinite || function (value) {\n    return typeof value === \"number\" && isFinite(value);\n  };\n}\n\nif (!String.prototype.endsWith || function () {\n  try {\n    return !\"ab\".endsWith(\"a\", 1);\n  } catch (e) {\n    return true;\n  }\n}()) {\n  String.prototype.endsWith = function (searchString, position) {\n    let subjectString = this.toString();\n    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n      position = subjectString.length;\n    }\n    position -= searchString.length;\n    let lastIndex = subjectString.indexOf(searchString, position);\n    return lastIndex !== -1 && lastIndex === position;\n  };\n}\n\nif (!String.prototype.startsWith || function () {\n  try {\n    return !\"ab\".startsWith(\"b\", 1);\n  } catch (e) {\n    return true;\n  }\n}()) {\n  String.prototype.startsWith = function (searchString, position) {\n    position = position || 0;\n    return this.substr(position, searchString.length) === searchString;\n  };\n}\n\nif (typeof FEATURE_NO_ES2015 === 'undefined') {\n\n  if (!Array.from) {\n    Array.from = function () {\n      var toInteger = function (it) {\n        return isNaN(it = +it) ? 0 : (it > 0 ? Math.floor : Math.ceil)(it);\n      };\n      var toLength = function (it) {\n        return it > 0 ? Math.min(toInteger(it), 0x1fffffffffffff) : 0;\n      };\n      var iterCall = function (iter, fn, val, index) {\n        try {\n          return fn(val, index);\n        } catch (E) {\n          if (typeof iter.return == 'function') iter.return();\n          throw E;\n        }\n      };\n\n      return function from(arrayLike) {\n        var O = Object(arrayLike),\n            C = typeof this == 'function' ? this : Array,\n            aLen = arguments.length,\n            mapfn = aLen > 1 ? arguments[1] : undefined,\n            mapping = mapfn !== undefined,\n            index = 0,\n            iterFn = O[Symbol.iterator],\n            length,\n            result,\n            step,\n            iterator;\n        if (mapping) mapfn = mapfn.bind(aLen > 2 ? arguments[2] : undefined);\n        if (iterFn != undefined && !Array.isArray(arrayLike)) {\n          for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n            result[index] = mapping ? iterCall(iterator, mapfn, step.value, index) : step.value;\n          }\n        } else {\n          length = toLength(O.length);\n          for (result = new C(length); length > index; index++) {\n            result[index] = mapping ? mapfn(O[index], index) : O[index];\n          }\n        }\n        result.length = index;\n        return result;\n      };\n    }();\n  }\n\n  if (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: function (predicate) {\n        if (this === null) {\n          throw new TypeError('Array.prototype.find called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n          throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n\n        for (var i = 0; i < length; i++) {\n          value = list[i];\n          if (predicate.call(thisArg, value, i, list)) {\n            return value;\n          }\n        }\n        return undefined;\n      }\n    });\n  }\n\n  if (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: function (predicate) {\n        if (this === null) {\n          throw new TypeError('Array.prototype.findIndex called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n          throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n\n        for (var i = 0; i < length; i++) {\n          value = list[i];\n          if (predicate.call(thisArg, value, i, list)) {\n            return i;\n          }\n        }\n        return -1;\n      }\n    });\n  }\n}\n\nif (typeof FEATURE_NO_ES2016 === 'undefined' && !Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, 'includes', {\n    configurable: true,\n    writable: true,\n    enumerable: false,\n    value: function (searchElement) {\n      var O = Object(this);\n      var len = parseInt(O.length) || 0;\n      if (len === 0) {\n        return false;\n      }\n      var n = parseInt(arguments[1]) || 0;\n      var k;\n      if (n >= 0) {\n        k = n;\n      } else {\n        k = len + n;\n        if (k < 0) {\n          k = 0;\n        }\n      }\n      var currentElement;\n      while (k < len) {\n        currentElement = O[k];\n        if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {\n          return true;\n        }\n        k++;\n      }\n      return false;\n    }\n  });\n}\n\nif (typeof FEATURE_NO_ES2015 === 'undefined') {\n\n  (function () {\n    let needsFix = false;\n\n    try {\n      let s = Object.keys('a');\n      needsFix = s.length !== 1 || s[0] !== '0';\n    } catch (e) {\n      needsFix = true;\n    }\n\n    if (needsFix) {\n      Object.keys = function () {\n        var hasOwnProperty = Object.prototype.hasOwnProperty,\n            hasDontEnumBug = !{ toString: null }.propertyIsEnumerable('toString'),\n            dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],\n            dontEnumsLength = dontEnums.length;\n\n        return function (obj) {\n          if (obj === undefined || obj === null) {\n            throw TypeError(`Cannot convert undefined or null to object`);\n          }\n\n          obj = Object(obj);\n\n          var result = [],\n              prop,\n              i;\n\n          for (prop in obj) {\n            if (hasOwnProperty.call(obj, prop)) {\n              result.push(prop);\n            }\n          }\n\n          if (hasDontEnumBug) {\n            for (i = 0; i < dontEnumsLength; i++) {\n              if (hasOwnProperty.call(obj, dontEnums[i])) {\n                result.push(dontEnums[i]);\n              }\n            }\n          }\n\n          return result;\n        };\n      }();\n    }\n  })();\n\n  (function (O) {\n    if ('assign' in O) {\n      return;\n    }\n\n    O.defineProperty(O, 'assign', {\n      configurable: true,\n      writable: true,\n      value: function () {\n        var gOPS = O.getOwnPropertySymbols,\n            pIE = O.propertyIsEnumerable,\n            filterOS = gOPS ? function (self) {\n          return gOPS(self).filter(pIE, self);\n        } : function () {\n          return Array.prototype;\n        };\n\n        return function assign(where) {\n          if (gOPS && !(where instanceof O)) {\n            console.warn('problematic Symbols', where);\n          }\n\n          function set(keyOrSymbol) {\n            where[keyOrSymbol] = arg[keyOrSymbol];\n          }\n\n          for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var arg = arguments[i];\n\n            if (arg === null || arg === undefined) {\n              continue;\n            }\n\n            O.keys(arg).concat(filterOS(arg)).forEach(set);\n          }\n\n          return where;\n        };\n      }()\n    });\n  })(Object);\n\n  if (!Object.is) {\n    Object.is = function (x, y) {\n      if (x === y) {\n        return x !== 0 || 1 / x === 1 / y;\n      } else {\n        return x !== x && y !== y;\n      }\n    };\n  }\n}\n\nif (typeof FEATURE_NO_ES2015 === 'undefined') {\n\n  (function (global) {\n    var i;\n\n    var defineProperty = Object.defineProperty,\n        is = function (a, b) {\n      return a === b || a !== a && b !== b;\n    };\n\n    if (typeof WeakMap == 'undefined') {\n      global.WeakMap = createCollection({\n        'delete': sharedDelete,\n\n        clear: sharedClear,\n\n        get: sharedGet,\n\n        has: mapHas,\n\n        set: sharedSet\n      }, true);\n    }\n\n    if (typeof Map == 'undefined' || typeof new Map().values !== 'function' || !new Map().values().next) {\n      global.Map = createCollection({\n        'delete': sharedDelete,\n\n        has: mapHas,\n\n        get: sharedGet,\n\n        set: sharedSet,\n\n        keys: sharedKeys,\n\n        values: sharedValues,\n\n        entries: mapEntries,\n\n        forEach: sharedForEach,\n\n        clear: sharedClear,\n\n        [Symbol.iterator]: mapEntries\n      });\n    }\n\n    if (typeof Set == 'undefined' || typeof new Set().values !== 'function' || !new Set().values().next) {\n      global.Set = createCollection({\n        has: setHas,\n\n        add: sharedAdd,\n\n        'delete': sharedDelete,\n\n        clear: sharedClear,\n\n        keys: sharedValues,\n        values: sharedValues,\n\n        entries: setEntries,\n\n        forEach: sharedForEach,\n\n        [Symbol.iterator]: sharedValues\n      });\n    }\n\n    if (typeof WeakSet == 'undefined') {\n      global.WeakSet = createCollection({\n        'delete': sharedDelete,\n\n        add: sharedAdd,\n\n        clear: sharedClear,\n\n        has: setHas\n      }, true);\n    }\n\n    function createCollection(proto, objectOnly) {\n      function Collection(a) {\n        if (!this || this.constructor !== Collection) return new Collection(a);\n        this._keys = [];\n        this._values = [];\n        this._itp = [];\n        this.objectOnly = objectOnly;\n\n        if (a) init.call(this, a);\n      }\n\n      if (!objectOnly) {\n        defineProperty(proto, 'size', {\n          get: sharedSize\n        });\n      }\n\n      proto.constructor = Collection;\n      Collection.prototype = proto;\n\n      return Collection;\n    }\n\n    function init(a) {\n      var i;\n\n      if (this.add) a.forEach(this.add, this);else a.forEach(function (a) {\n          this.set(a[0], a[1]);\n        }, this);\n    }\n\n    function sharedDelete(key) {\n      if (this.has(key)) {\n        this._keys.splice(i, 1);\n        this._values.splice(i, 1);\n\n        this._itp.forEach(function (p) {\n          if (i < p[0]) p[0]--;\n        });\n      }\n\n      return -1 < i;\n    };\n\n    function sharedGet(key) {\n      return this.has(key) ? this._values[i] : undefined;\n    }\n\n    function has(list, key) {\n      if (this.objectOnly && key !== Object(key)) throw new TypeError(\"Invalid value used as weak collection key\");\n\n      if (key != key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} else i = list.indexOf(key);\n      return -1 < i;\n    }\n\n    function setHas(value) {\n      return has.call(this, this._values, value);\n    }\n\n    function mapHas(value) {\n      return has.call(this, this._keys, value);\n    }\n\n    function sharedSet(key, value) {\n      this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value;\n      return this;\n    }\n\n    function sharedAdd(value) {\n      if (!this.has(value)) this._values.push(value);\n      return this;\n    }\n\n    function sharedClear() {\n      (this._keys || 0).length = this._values.length = 0;\n    }\n\n    function sharedKeys() {\n      return sharedIterator(this._itp, this._keys);\n    }\n\n    function sharedValues() {\n      return sharedIterator(this._itp, this._values);\n    }\n\n    function mapEntries() {\n      return sharedIterator(this._itp, this._keys, this._values);\n    }\n\n    function setEntries() {\n      return sharedIterator(this._itp, this._values, this._values);\n    }\n\n    function sharedIterator(itp, array, array2) {\n      var p = [0],\n          done = false;\n      itp.push(p);\n      return {\n        [Symbol.iterator]: function () {\n          return this;\n        },\n        next: function () {\n          var v,\n              k = p[0];\n          if (!done && k < array.length) {\n            v = array2 ? [array[k], array2[k]] : array[k];\n            p[0]++;\n          } else {\n            done = true;\n            itp.splice(itp.indexOf(p), 1);\n          }\n          return { done: done, value: v };\n        }\n      };\n    }\n\n    function sharedSize() {\n      return this._values.length;\n    }\n\n    function sharedForEach(callback, context) {\n      var it = this.entries();\n      for (;;) {\n        var r = it.next();\n        if (r.done) break;\n        callback.call(context, r.value[1], r.value[0], this);\n      }\n    }\n  })(PLATFORM.global);\n}\n\nif (typeof FEATURE_NO_ES2015 === 'undefined') {\n\n  const bind = Function.prototype.bind;\n\n  if (typeof PLATFORM.global.Reflect === 'undefined') {\n    PLATFORM.global.Reflect = {};\n  }\n\n  if (typeof Reflect.defineProperty !== 'function') {\n    Reflect.defineProperty = function (target, propertyKey, descriptor) {\n      if (typeof target === 'object' ? target === null : typeof target !== 'function') {\n        throw new TypeError('Reflect.defineProperty called on non-object');\n      }\n      try {\n        Object.defineProperty(target, propertyKey, descriptor);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    };\n  }\n\n  if (typeof Reflect.construct !== 'function') {\n    Reflect.construct = function (Target, args) {\n      if (args) {\n        switch (args.length) {\n          case 0:\n            return new Target();\n          case 1:\n            return new Target(args[0]);\n          case 2:\n            return new Target(args[0], args[1]);\n          case 3:\n            return new Target(args[0], args[1], args[2]);\n          case 4:\n            return new Target(args[0], args[1], args[2], args[3]);\n        }\n      }\n\n      var a = [null];\n      a.push.apply(a, args);\n      return new (bind.apply(Target, a))();\n    };\n  }\n\n  if (typeof Reflect.ownKeys !== 'function') {\n    Reflect.ownKeys = function (o) {\n      return Object.getOwnPropertyNames(o).concat(Object.getOwnPropertySymbols(o));\n    };\n  }\n}\n\nif (typeof FEATURE_NO_ESNEXT === 'undefined') {\n\n  const emptyMetadata = Object.freeze({});\n  const metadataContainerKey = '__metadata__';\n\n  if (typeof Reflect.getOwnMetadata !== 'function') {\n    Reflect.getOwnMetadata = function (metadataKey, target, targetKey) {\n      if (target.hasOwnProperty(metadataContainerKey)) {\n        return (target[metadataContainerKey][targetKey] || emptyMetadata)[metadataKey];\n      }\n    };\n  }\n\n  if (typeof Reflect.defineMetadata !== 'function') {\n    Reflect.defineMetadata = function (metadataKey, metadataValue, target, targetKey) {\n      let metadataContainer = target.hasOwnProperty(metadataContainerKey) ? target[metadataContainerKey] : target[metadataContainerKey] = {};\n      let targetContainer = metadataContainer[targetKey] || (metadataContainer[targetKey] = {});\n      targetContainer[metadataKey] = metadataValue;\n    };\n  }\n\n  if (typeof Reflect.metadata !== 'function') {\n    Reflect.metadata = function (metadataKey, metadataValue) {\n      return function (target, targetKey) {\n        Reflect.defineMetadata(metadataKey, metadataValue, target, targetKey);\n      };\n    };\n  }\n}","import { buildQueryString, parseQueryString } from 'aurelia-path';\n\nexport let State = class State {\n  constructor(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  get(charSpec) {\n    for (let child of this.nextStates) {\n      let isEqual = child.charSpec.validChars === charSpec.validChars && child.charSpec.invalidChars === charSpec.invalidChars;\n\n      if (isEqual) {\n        return child;\n      }\n    }\n\n    return undefined;\n  }\n\n  put(charSpec) {\n    let state = this.get(charSpec);\n\n    if (state) {\n      return state;\n    }\n\n    state = new State(charSpec);\n\n    this.nextStates.push(state);\n\n    if (charSpec.repeat) {\n      state.nextStates.push(state);\n    }\n\n    return state;\n  }\n\n  match(ch) {\n    let nextStates = this.nextStates;\n    let results = [];\n\n    for (let i = 0, l = nextStates.length; i < l; i++) {\n      let child = nextStates[i];\n      let charSpec = child.charSpec;\n\n      if (charSpec.validChars !== undefined) {\n        if (charSpec.validChars.indexOf(ch) !== -1) {\n          results.push(child);\n        }\n      } else if (charSpec.invalidChars !== undefined) {\n        if (charSpec.invalidChars.indexOf(ch) === -1) {\n          results.push(child);\n        }\n      }\n    }\n\n    return results;\n  }\n};\n\nconst specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\nconst escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\nexport let StaticSegment = class StaticSegment {\n  constructor(string, caseSensitive) {\n    this.string = string;\n    this.caseSensitive = caseSensitive;\n  }\n\n  eachChar(callback) {\n    let s = this.string;\n    for (let i = 0, ii = s.length; i < ii; ++i) {\n      let ch = s[i];\n      callback({ validChars: this.caseSensitive ? ch : ch.toUpperCase() + ch.toLowerCase() });\n    }\n  }\n\n  regex() {\n    return this.string.replace(escapeRegex, '\\\\$1');\n  }\n\n  generate() {\n    return this.string;\n  }\n};\n\nexport let DynamicSegment = class DynamicSegment {\n  constructor(name, optional) {\n    this.name = name;\n    this.optional = optional;\n  }\n\n  eachChar(callback) {\n    callback({ invalidChars: '/', repeat: true });\n  }\n\n  regex() {\n    return '([^/]+)';\n  }\n\n  generate(params, consumed) {\n    consumed[this.name] = true;\n    return params[this.name];\n  }\n};\n\nexport let StarSegment = class StarSegment {\n  constructor(name) {\n    this.name = name;\n  }\n\n  eachChar(callback) {\n    callback({ invalidChars: '', repeat: true });\n  }\n\n  regex() {\n    return '(.+)';\n  }\n\n  generate(params, consumed) {\n    consumed[this.name] = true;\n    return params[this.name];\n  }\n};\n\nexport let EpsilonSegment = class EpsilonSegment {\n  eachChar() {}\n\n  regex() {\n    return '';\n  }\n\n  generate() {\n    return '';\n  }\n};\n\nexport let RouteRecognizer = class RouteRecognizer {\n  constructor() {\n    this.rootState = new State();\n    this.names = {};\n    this.routes = new Map();\n  }\n\n  add(route) {\n    if (Array.isArray(route)) {\n      route.forEach(r => this.add(r));\n      return undefined;\n    }\n\n    let currentState = this.rootState;\n    let skippableStates = [];\n    let regex = '^';\n    let types = { statics: 0, dynamics: 0, stars: 0 };\n    let names = [];\n    let routeName = route.handler.name;\n    let isEmpty = true;\n    let segments = parse(route.path, names, types, route.caseSensitive);\n\n    for (let i = 0, ii = segments.length; i < ii; i++) {\n      let segment = segments[i];\n      if (segment instanceof EpsilonSegment) {\n        continue;\n      }\n\n      let [firstState, nextState] = addSegment(currentState, segment);\n\n      for (let j = 0, jj = skippableStates.length; j < jj; j++) {\n        skippableStates[j].nextStates.push(firstState);\n      }\n\n      if (segment.optional) {\n        skippableStates.push(nextState);\n        regex += `(?:/${segment.regex()})?`;\n      } else {\n        currentState = nextState;\n        regex += `/${segment.regex()}`;\n        skippableStates.length = 0;\n        isEmpty = false;\n      }\n    }\n\n    if (isEmpty) {\n      currentState = currentState.put({ validChars: '/' });\n      regex += '/?';\n    }\n\n    let handlers = [{ handler: route.handler, names: names }];\n\n    this.routes.set(route.handler, { segments, handlers });\n    if (routeName) {\n      let routeNames = Array.isArray(routeName) ? routeName : [routeName];\n      for (let i = 0; i < routeNames.length; i++) {\n        if (!(routeNames[i] in this.names)) {\n          this.names[routeNames[i]] = { segments, handlers };\n        }\n      }\n    }\n\n    for (let i = 0; i < skippableStates.length; i++) {\n      let state = skippableStates[i];\n      state.handlers = handlers;\n      state.regex = new RegExp(regex + '$', route.caseSensitive ? '' : 'i');\n      state.types = types;\n    }\n\n    currentState.handlers = handlers;\n    currentState.regex = new RegExp(regex + '$', route.caseSensitive ? '' : 'i');\n    currentState.types = types;\n\n    return currentState;\n  }\n\n  getRoute(nameOrRoute) {\n    return typeof nameOrRoute === 'string' ? this.names[nameOrRoute] : this.routes.get(nameOrRoute);\n  }\n\n  handlersFor(nameOrRoute) {\n    let route = this.getRoute(nameOrRoute);\n    if (!route) {\n      throw new Error(`There is no route named ${nameOrRoute}`);\n    }\n\n    return [...route.handlers];\n  }\n\n  hasRoute(nameOrRoute) {\n    return !!this.getRoute(nameOrRoute);\n  }\n\n  generate(nameOrRoute, params) {\n    let route = this.getRoute(nameOrRoute);\n    if (!route) {\n      throw new Error(`There is no route named ${nameOrRoute}`);\n    }\n\n    let handler = route.handlers[0].handler;\n    if (handler.generationUsesHref) {\n      return handler.href;\n    }\n\n    let routeParams = Object.assign({}, params);\n    let segments = route.segments;\n    let consumed = {};\n    let output = '';\n\n    for (let i = 0, l = segments.length; i < l; i++) {\n      let segment = segments[i];\n\n      if (segment instanceof EpsilonSegment) {\n        continue;\n      }\n\n      let segmentValue = segment.generate(routeParams, consumed);\n      if (segmentValue === null || segmentValue === undefined) {\n        if (!segment.optional) {\n          throw new Error(`A value is required for route parameter '${segment.name}' in route '${nameOrRoute}'.`);\n        }\n      } else {\n        output += '/';\n        output += segmentValue;\n      }\n    }\n\n    if (output.charAt(0) !== '/') {\n      output = '/' + output;\n    }\n\n    for (let param in consumed) {\n      delete routeParams[param];\n    }\n\n    let queryString = buildQueryString(routeParams);\n    output += queryString ? `?${queryString}` : '';\n\n    return output;\n  }\n\n  recognize(path) {\n    let states = [this.rootState];\n    let queryParams = {};\n    let isSlashDropped = false;\n    let normalizedPath = path;\n\n    let queryStart = normalizedPath.indexOf('?');\n    if (queryStart !== -1) {\n      let queryString = normalizedPath.substr(queryStart + 1, normalizedPath.length);\n      normalizedPath = normalizedPath.substr(0, queryStart);\n      queryParams = parseQueryString(queryString);\n    }\n\n    normalizedPath = decodeURI(normalizedPath);\n\n    if (normalizedPath.charAt(0) !== '/') {\n      normalizedPath = '/' + normalizedPath;\n    }\n\n    let pathLen = normalizedPath.length;\n    if (pathLen > 1 && normalizedPath.charAt(pathLen - 1) === '/') {\n      normalizedPath = normalizedPath.substr(0, pathLen - 1);\n      isSlashDropped = true;\n    }\n\n    for (let i = 0, l = normalizedPath.length; i < l; i++) {\n      states = recognizeChar(states, normalizedPath.charAt(i));\n      if (!states.length) {\n        break;\n      }\n    }\n\n    let solutions = [];\n    for (let i = 0, l = states.length; i < l; i++) {\n      if (states[i].handlers) {\n        solutions.push(states[i]);\n      }\n    }\n\n    states = sortSolutions(solutions);\n\n    let state = solutions[0];\n    if (state && state.handlers) {\n      if (isSlashDropped && state.regex.source.slice(-5) === '(.+)$') {\n        normalizedPath = normalizedPath + '/';\n      }\n\n      return findHandler(state, normalizedPath, queryParams);\n    }\n  }\n};\n\nlet RecognizeResults = class RecognizeResults {\n  constructor(queryParams) {\n    this.splice = Array.prototype.splice;\n    this.slice = Array.prototype.slice;\n    this.push = Array.prototype.push;\n    this.length = 0;\n    this.queryParams = queryParams || {};\n  }\n};\n\n\nfunction parse(route, names, types, caseSensitive) {\n  let normalizedRoute = route;\n  if (route.charAt(0) === '/') {\n    normalizedRoute = route.substr(1);\n  }\n\n  let results = [];\n\n  let splitRoute = normalizedRoute.split('/');\n  for (let i = 0, ii = splitRoute.length; i < ii; ++i) {\n    let segment = splitRoute[i];\n\n    let match = segment.match(/^:([^?]+)(\\?)?$/);\n    if (match) {\n      let [, name, optional] = match;\n      if (name.indexOf('=') !== -1) {\n        throw new Error(`Parameter ${name} in route ${route} has a default value, which is not supported.`);\n      }\n      results.push(new DynamicSegment(name, !!optional));\n      names.push(name);\n      types.dynamics++;\n      continue;\n    }\n\n    match = segment.match(/^\\*(.+)$/);\n    if (match) {\n      results.push(new StarSegment(match[1]));\n      names.push(match[1]);\n      types.stars++;\n    } else if (segment === '') {\n      results.push(new EpsilonSegment());\n    } else {\n      results.push(new StaticSegment(segment, caseSensitive));\n      types.statics++;\n    }\n  }\n\n  return results;\n}\n\nfunction sortSolutions(states) {\n  return states.sort((a, b) => {\n    if (a.types.stars !== b.types.stars) {\n      return a.types.stars - b.types.stars;\n    }\n\n    if (a.types.stars) {\n      if (a.types.statics !== b.types.statics) {\n        return b.types.statics - a.types.statics;\n      }\n      if (a.types.dynamics !== b.types.dynamics) {\n        return b.types.dynamics - a.types.dynamics;\n      }\n    }\n\n    if (a.types.dynamics !== b.types.dynamics) {\n      return a.types.dynamics - b.types.dynamics;\n    }\n\n    if (a.types.statics !== b.types.statics) {\n      return b.types.statics - a.types.statics;\n    }\n\n    return 0;\n  });\n}\n\nfunction recognizeChar(states, ch) {\n  let nextStates = [];\n\n  for (let i = 0, l = states.length; i < l; i++) {\n    let state = states[i];\n    nextStates.push(...state.match(ch));\n  }\n\n  return nextStates;\n}\n\nfunction findHandler(state, path, queryParams) {\n  let handlers = state.handlers;\n  let regex = state.regex;\n  let captures = path.match(regex);\n  let currentCapture = 1;\n  let result = new RecognizeResults(queryParams);\n\n  for (let i = 0, l = handlers.length; i < l; i++) {\n    let handler = handlers[i];\n    let names = handler.names;\n    let params = {};\n\n    for (let j = 0, m = names.length; j < m; j++) {\n      params[names[j]] = captures[currentCapture++];\n    }\n\n    result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n  }\n\n  return result;\n}\n\nfunction addSegment(currentState, segment) {\n  let firstState = currentState.put({ validChars: '/' });\n  let nextState = firstState;\n  segment.eachChar(ch => {\n    nextState = nextState.put(ch);\n  });\n\n  return [firstState, nextState];\n}","import { getLogger } from 'aurelia-logging';\nimport { Container } from 'aurelia-dependency-injection';\nimport { History } from 'aurelia-history';\nimport { RouteRecognizer } from 'aurelia-route-recognizer';\nimport { EventAggregator } from 'aurelia-event-aggregator';\n\n/**\r\n * Class used to represent an instruction during a navigation.\r\n */\r\nclass NavigationInstruction {\r\n    constructor(init) {\r\n        /**\r\n         * Current built viewport plan of this nav instruction\r\n         */\r\n        this.plan = null;\r\n        this.options = {};\r\n        Object.assign(this, init);\r\n        this.params = this.params || {};\r\n        this.viewPortInstructions = {};\r\n        let ancestorParams = [];\r\n        let current = this;\r\n        do {\r\n            let currentParams = Object.assign({}, current.params);\r\n            if (current.config && current.config.hasChildRouter) {\r\n                // remove the param for the injected child route segment\r\n                delete currentParams[current.getWildCardName()];\r\n            }\r\n            ancestorParams.unshift(currentParams);\r\n            current = current.parentInstruction;\r\n        } while (current);\r\n        let allParams = Object.assign({}, this.queryParams, ...ancestorParams);\r\n        this.lifecycleArgs = [allParams, this.config, this];\r\n    }\r\n    /**\r\n     * Gets an array containing this instruction and all child instructions for the current navigation.\r\n     */\r\n    getAllInstructions() {\r\n        let instructions = [this];\r\n        let viewPortInstructions = this.viewPortInstructions;\r\n        for (let key in viewPortInstructions) {\r\n            let childInstruction = viewPortInstructions[key].childNavigationInstruction;\r\n            if (childInstruction) {\r\n                instructions.push(...childInstruction.getAllInstructions());\r\n            }\r\n        }\r\n        return instructions;\r\n    }\r\n    /**\r\n     * Gets an array containing the instruction and all child instructions for the previous navigation.\r\n     * Previous instructions are no longer available after navigation completes.\r\n     */\r\n    getAllPreviousInstructions() {\r\n        return this.getAllInstructions().map(c => c.previousInstruction).filter(c => c);\r\n    }\r\n    addViewPortInstruction(nameOrInitOptions, strategy, moduleId, component) {\r\n        let viewPortInstruction;\r\n        let viewPortName = typeof nameOrInitOptions === 'string' ? nameOrInitOptions : nameOrInitOptions.name;\r\n        const lifecycleArgs = this.lifecycleArgs;\r\n        const config = Object.assign({}, lifecycleArgs[1], { currentViewPort: viewPortName });\r\n        if (typeof nameOrInitOptions === 'string') {\r\n            viewPortInstruction = {\r\n                name: nameOrInitOptions,\r\n                strategy: strategy,\r\n                moduleId: moduleId,\r\n                component: component,\r\n                childRouter: component.childRouter,\r\n                lifecycleArgs: [lifecycleArgs[0], config, lifecycleArgs[2]]\r\n            };\r\n        }\r\n        else {\r\n            viewPortInstruction = {\r\n                name: viewPortName,\r\n                strategy: nameOrInitOptions.strategy,\r\n                component: nameOrInitOptions.component,\r\n                moduleId: nameOrInitOptions.moduleId,\r\n                childRouter: nameOrInitOptions.component.childRouter,\r\n                lifecycleArgs: [lifecycleArgs[0], config, lifecycleArgs[2]]\r\n            };\r\n        }\r\n        return this.viewPortInstructions[viewPortName] = viewPortInstruction;\r\n    }\r\n    /**\r\n     * Gets the name of the route pattern's wildcard parameter, if applicable.\r\n     */\r\n    getWildCardName() {\r\n        // todo: potential issue, or at least unsafe typings\r\n        let configRoute = this.config.route;\r\n        let wildcardIndex = configRoute.lastIndexOf('*');\r\n        return configRoute.substr(wildcardIndex + 1);\r\n    }\r\n    /**\r\n     * Gets the path and query string created by filling the route\r\n     * pattern's wildcard parameter with the matching param.\r\n     */\r\n    getWildcardPath() {\r\n        let wildcardName = this.getWildCardName();\r\n        let path = this.params[wildcardName] || '';\r\n        let queryString = this.queryString;\r\n        if (queryString) {\r\n            path += '?' + queryString;\r\n        }\r\n        return path;\r\n    }\r\n    /**\r\n     * Gets the instruction's base URL, accounting for wildcard route parameters.\r\n     */\r\n    getBaseUrl() {\r\n        let $encodeURI = encodeURI;\r\n        let fragment = decodeURI(this.fragment);\r\n        if (fragment === '') {\r\n            let nonEmptyRoute = this.router.routes.find(route => {\r\n                return route.name === this.config.name &&\r\n                    route.route !== '';\r\n            });\r\n            if (nonEmptyRoute) {\r\n                fragment = nonEmptyRoute.route;\r\n            }\r\n        }\r\n        if (!this.params) {\r\n            return $encodeURI(fragment);\r\n        }\r\n        let wildcardName = this.getWildCardName();\r\n        let path = this.params[wildcardName] || '';\r\n        if (!path) {\r\n            return $encodeURI(fragment);\r\n        }\r\n        return $encodeURI(fragment.substr(0, fragment.lastIndexOf(path)));\r\n    }\r\n    /**\r\n     * Finalize a viewport instruction\r\n     * @internal\r\n     */\r\n    _commitChanges(waitToSwap) {\r\n        let router = this.router;\r\n        router.currentInstruction = this;\r\n        const previousInstruction = this.previousInstruction;\r\n        if (previousInstruction) {\r\n            previousInstruction.config.navModel.isActive = false;\r\n        }\r\n        this.config.navModel.isActive = true;\r\n        router.refreshNavigation();\r\n        let loads = [];\r\n        let delaySwaps = [];\r\n        let viewPortInstructions = this.viewPortInstructions;\r\n        for (let viewPortName in viewPortInstructions) {\r\n            let viewPortInstruction = viewPortInstructions[viewPortName];\r\n            let viewPort = router.viewPorts[viewPortName];\r\n            if (!viewPort) {\r\n                throw new Error(`There was no router-view found in the view for ${viewPortInstruction.moduleId}.`);\r\n            }\r\n            let childNavInstruction = viewPortInstruction.childNavigationInstruction;\r\n            if (viewPortInstruction.strategy === \"replace\" /* Replace */) {\r\n                if (childNavInstruction && childNavInstruction.parentCatchHandler) {\r\n                    loads.push(childNavInstruction._commitChanges(waitToSwap));\r\n                }\r\n                else {\r\n                    if (waitToSwap) {\r\n                        delaySwaps.push({ viewPort, viewPortInstruction });\r\n                    }\r\n                    loads.push(viewPort\r\n                        .process(viewPortInstruction, waitToSwap)\r\n                        .then(() => childNavInstruction\r\n                        ? childNavInstruction._commitChanges(waitToSwap)\r\n                        : Promise.resolve()));\r\n                }\r\n            }\r\n            else {\r\n                if (childNavInstruction) {\r\n                    loads.push(childNavInstruction._commitChanges(waitToSwap));\r\n                }\r\n            }\r\n        }\r\n        return Promise\r\n            .all(loads)\r\n            .then(() => {\r\n            delaySwaps.forEach(x => x.viewPort.swap(x.viewPortInstruction));\r\n            return null;\r\n        })\r\n            .then(() => prune(this));\r\n    }\r\n    /**@internal */\r\n    _updateTitle() {\r\n        let router = this.router;\r\n        let title = this._buildTitle(router.titleSeparator);\r\n        if (title) {\r\n            router.history.setTitle(title);\r\n        }\r\n    }\r\n    /**@internal */\r\n    _buildTitle(separator = ' | ') {\r\n        let title = '';\r\n        let childTitles = [];\r\n        let navModelTitle = this.config.navModel.title;\r\n        let instructionRouter = this.router;\r\n        let viewPortInstructions = this.viewPortInstructions;\r\n        if (navModelTitle) {\r\n            title = instructionRouter.transformTitle(navModelTitle);\r\n        }\r\n        for (let viewPortName in viewPortInstructions) {\r\n            let viewPortInstruction = viewPortInstructions[viewPortName];\r\n            let child_nav_instruction = viewPortInstruction.childNavigationInstruction;\r\n            if (child_nav_instruction) {\r\n                let childTitle = child_nav_instruction._buildTitle(separator);\r\n                if (childTitle) {\r\n                    childTitles.push(childTitle);\r\n                }\r\n            }\r\n        }\r\n        if (childTitles.length) {\r\n            title = childTitles.join(separator) + (title ? separator : '') + title;\r\n        }\r\n        if (instructionRouter.title) {\r\n            title += (title ? separator : '') + instructionRouter.transformTitle(instructionRouter.title);\r\n        }\r\n        return title;\r\n    }\r\n}\r\nconst prune = (instruction) => {\r\n    instruction.previousInstruction = null;\r\n    instruction.plan = null;\r\n};\n\n/**\r\n* Class for storing and interacting with a route's navigation settings.\r\n*/\r\nclass NavModel {\r\n    constructor(router, relativeHref) {\r\n        /**\r\n        * True if this nav item is currently active.\r\n        */\r\n        this.isActive = false;\r\n        /**\r\n        * The title.\r\n        */\r\n        this.title = null;\r\n        /**\r\n        * This nav item's absolute href.\r\n        */\r\n        this.href = null;\r\n        /**\r\n        * This nav item's relative href.\r\n        */\r\n        this.relativeHref = null;\r\n        /**\r\n        * Data attached to the route at configuration time.\r\n        */\r\n        this.settings = {};\r\n        /**\r\n        * The route config.\r\n        */\r\n        this.config = null;\r\n        this.router = router;\r\n        this.relativeHref = relativeHref;\r\n    }\r\n    /**\r\n    * Sets the route's title and updates document.title.\r\n    *  If the a navigation is in progress, the change will be applied\r\n    *  to document.title when the navigation completes.\r\n    *\r\n    * @param title The new title.\r\n    */\r\n    setTitle(title) {\r\n        this.title = title;\r\n        if (this.isActive) {\r\n            this.router.updateTitle();\r\n        }\r\n    }\r\n}\n\nfunction _normalizeAbsolutePath(path, hasPushState, absolute = false) {\r\n    if (!hasPushState && path[0] !== '#') {\r\n        path = '#' + path;\r\n    }\r\n    if (hasPushState && absolute) {\r\n        path = path.substring(1, path.length);\r\n    }\r\n    return path;\r\n}\r\nfunction _createRootedPath(fragment, baseUrl, hasPushState, absolute) {\r\n    if (isAbsoluteUrl.test(fragment)) {\r\n        return fragment;\r\n    }\r\n    let path = '';\r\n    if (baseUrl.length && baseUrl[0] !== '/') {\r\n        path += '/';\r\n    }\r\n    path += baseUrl;\r\n    if ((!path.length || path[path.length - 1] !== '/') && fragment[0] !== '/') {\r\n        path += '/';\r\n    }\r\n    if (path.length && path[path.length - 1] === '/' && fragment[0] === '/') {\r\n        path = path.substring(0, path.length - 1);\r\n    }\r\n    return _normalizeAbsolutePath(path + fragment, hasPushState, absolute);\r\n}\r\nfunction _resolveUrl(fragment, baseUrl, hasPushState) {\r\n    if (isRootedPath.test(fragment)) {\r\n        return _normalizeAbsolutePath(fragment, hasPushState);\r\n    }\r\n    return _createRootedPath(fragment, baseUrl, hasPushState);\r\n}\r\nfunction _ensureArrayWithSingleRoutePerConfig(config) {\r\n    let routeConfigs = [];\r\n    if (Array.isArray(config.route)) {\r\n        for (let i = 0, ii = config.route.length; i < ii; ++i) {\r\n            let current = Object.assign({}, config);\r\n            current.route = config.route[i];\r\n            routeConfigs.push(current);\r\n        }\r\n    }\r\n    else {\r\n        routeConfigs.push(Object.assign({}, config));\r\n    }\r\n    return routeConfigs;\r\n}\r\nconst isRootedPath = /^#?\\//;\r\nconst isAbsoluteUrl = /^([a-z][a-z0-9+\\-.]*:)?\\/\\//i;\n\n/**\r\n * Class used to configure a [[Router]] instance.\r\n *\r\n * @constructor\r\n */\r\nclass RouterConfiguration {\r\n    constructor() {\r\n        this.instructions = [];\r\n        this.options = {};\r\n        this.pipelineSteps = [];\r\n    }\r\n    /**\r\n     * Adds a step to be run during the [[Router]]'s navigation pipeline.\r\n     *\r\n     * @param name The name of the pipeline slot to insert the step into.\r\n     * @param step The pipeline step.\r\n     * @chainable\r\n     */\r\n    addPipelineStep(name, step) {\r\n        if (step === null || step === undefined) {\r\n            throw new Error('Pipeline step cannot be null or undefined.');\r\n        }\r\n        this.pipelineSteps.push({ name, step });\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a step to be run during the [[Router]]'s authorize pipeline slot.\r\n     *\r\n     * @param step The pipeline step.\r\n     * @chainable\r\n     */\r\n    addAuthorizeStep(step) {\r\n        return this.addPipelineStep(\"authorize\" /* Authorize */, step);\r\n    }\r\n    /**\r\n     * Adds a step to be run during the [[Router]]'s preActivate pipeline slot.\r\n     *\r\n     * @param step The pipeline step.\r\n     * @chainable\r\n     */\r\n    addPreActivateStep(step) {\r\n        return this.addPipelineStep(\"preActivate\" /* PreActivate */, step);\r\n    }\r\n    /**\r\n     * Adds a step to be run during the [[Router]]'s preRender pipeline slot.\r\n     *\r\n     * @param step The pipeline step.\r\n     * @chainable\r\n     */\r\n    addPreRenderStep(step) {\r\n        return this.addPipelineStep(\"preRender\" /* PreRender */, step);\r\n    }\r\n    /**\r\n     * Adds a step to be run during the [[Router]]'s postRender pipeline slot.\r\n     *\r\n     * @param step The pipeline step.\r\n     * @chainable\r\n     */\r\n    addPostRenderStep(step) {\r\n        return this.addPipelineStep(\"postRender\" /* PostRender */, step);\r\n    }\r\n    /**\r\n     * Configures a route that will be used if there is no previous location available on navigation cancellation.\r\n     *\r\n     * @param fragment The URL fragment to use as the navigation destination.\r\n     * @chainable\r\n     */\r\n    fallbackRoute(fragment) {\r\n        this._fallbackRoute = fragment;\r\n        return this;\r\n    }\r\n    /**\r\n     * Maps one or more routes to be registered with the router.\r\n     *\r\n     * @param route The [[RouteConfig]] to map, or an array of [[RouteConfig]] to map.\r\n     * @chainable\r\n     */\r\n    map(route) {\r\n        if (Array.isArray(route)) {\r\n            route.forEach(r => this.map(r));\r\n            return this;\r\n        }\r\n        return this.mapRoute(route);\r\n    }\r\n    /**\r\n     * Configures defaults to use for any view ports.\r\n     *\r\n     * @param viewPortConfig a view port configuration object to use as a\r\n     *  default, of the form { viewPortName: { moduleId } }.\r\n     * @chainable\r\n     */\r\n    useViewPortDefaults(viewPortConfig) {\r\n        this.viewPortDefaults = viewPortConfig;\r\n        return this;\r\n    }\r\n    /**\r\n     * Maps a single route to be registered with the router.\r\n     *\r\n     * @param route The [[RouteConfig]] to map.\r\n     * @chainable\r\n     */\r\n    mapRoute(config) {\r\n        this.instructions.push(router => {\r\n            let routeConfigs = _ensureArrayWithSingleRoutePerConfig(config);\r\n            let navModel;\r\n            for (let i = 0, ii = routeConfigs.length; i < ii; ++i) {\r\n                let routeConfig = routeConfigs[i];\r\n                routeConfig.settings = routeConfig.settings || {};\r\n                if (!navModel) {\r\n                    navModel = router.createNavModel(routeConfig);\r\n                }\r\n                router.addRoute(routeConfig, navModel);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    /**\r\n     * Registers an unknown route handler to be run when the URL fragment doesn't match any registered routes.\r\n     *\r\n     * @param config A string containing a moduleId to load, or a [[RouteConfig]], or a function that takes the\r\n     *  [[NavigationInstruction]] and selects a moduleId to load.\r\n     * @chainable\r\n     */\r\n    mapUnknownRoutes(config) {\r\n        this.unknownRouteConfig = config;\r\n        return this;\r\n    }\r\n    /**\r\n     * Applies the current configuration to the specified [[Router]].\r\n     *\r\n     * @param router The [[Router]] to apply the configuration to.\r\n     */\r\n    exportToRouter(router) {\r\n        let instructions = this.instructions;\r\n        for (let i = 0, ii = instructions.length; i < ii; ++i) {\r\n            instructions[i](router);\r\n        }\r\n        let { title, titleSeparator, unknownRouteConfig, _fallbackRoute, viewPortDefaults } = this;\r\n        if (title) {\r\n            router.title = title;\r\n        }\r\n        if (titleSeparator) {\r\n            router.titleSeparator = titleSeparator;\r\n        }\r\n        if (unknownRouteConfig) {\r\n            router.handleUnknownRoutes(unknownRouteConfig);\r\n        }\r\n        if (_fallbackRoute) {\r\n            router.fallbackRoute = _fallbackRoute;\r\n        }\r\n        if (viewPortDefaults) {\r\n            router.useViewPortDefaults(viewPortDefaults);\r\n        }\r\n        Object.assign(router.options, this.options);\r\n        let pipelineSteps = this.pipelineSteps;\r\n        let pipelineStepCount = pipelineSteps.length;\r\n        if (pipelineStepCount) {\r\n            if (!router.isRoot) {\r\n                throw new Error('Pipeline steps can only be added to the root router');\r\n            }\r\n            let pipelineProvider = router.pipelineProvider;\r\n            for (let i = 0, ii = pipelineStepCount; i < ii; ++i) {\r\n                let { name, step } = pipelineSteps[i];\r\n                pipelineProvider.addStep(name, step);\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * The primary class responsible for handling routing and navigation.\r\n */\r\nclass Router {\r\n    /**\r\n     * @param container The [[Container]] to use when child routers.\r\n     * @param history The [[History]] implementation to delegate navigation requests to.\r\n     */\r\n    constructor(container, history) {\r\n        /**\r\n         * The parent router, or null if this instance is not a child router.\r\n         */\r\n        this.parent = null;\r\n        this.options = {};\r\n        /**\r\n         * The defaults used when a viewport lacks specified content\r\n         */\r\n        this.viewPortDefaults = {};\r\n        /**\r\n         * Extension point to transform the document title before it is built and displayed.\r\n         * By default, child routers delegate to the parent router, and the app router\r\n         * returns the title unchanged.\r\n         */\r\n        this.transformTitle = (title) => {\r\n            if (this.parent) {\r\n                return this.parent.transformTitle(title);\r\n            }\r\n            return title;\r\n        };\r\n        this.container = container;\r\n        this.history = history;\r\n        this.reset();\r\n    }\r\n    /**\r\n     * Fully resets the router's internal state. Primarily used internally by the framework when multiple calls to setRoot are made.\r\n     * Use with caution (actually, avoid using this). Do not use this to simply change your navigation model.\r\n     */\r\n    reset() {\r\n        this.viewPorts = {};\r\n        this.routes = [];\r\n        this.baseUrl = '';\r\n        this.isConfigured = false;\r\n        this.isNavigating = false;\r\n        this.isExplicitNavigation = false;\r\n        this.isExplicitNavigationBack = false;\r\n        this.isNavigatingFirst = false;\r\n        this.isNavigatingNew = false;\r\n        this.isNavigatingRefresh = false;\r\n        this.isNavigatingForward = false;\r\n        this.isNavigatingBack = false;\r\n        this.couldDeactivate = false;\r\n        this.navigation = [];\r\n        this.currentInstruction = null;\r\n        this.viewPortDefaults = {};\r\n        this._fallbackOrder = 100;\r\n        this._recognizer = new RouteRecognizer();\r\n        this._childRecognizer = new RouteRecognizer();\r\n        this._configuredPromise = new Promise(resolve => {\r\n            this._resolveConfiguredPromise = resolve;\r\n        });\r\n    }\r\n    /**\r\n     * Gets a value indicating whether or not this [[Router]] is the root in the router tree. I.e., it has no parent.\r\n     */\r\n    get isRoot() {\r\n        return !this.parent;\r\n    }\r\n    /**\r\n     * Registers a viewPort to be used as a rendering target for activated routes.\r\n     *\r\n     * @param viewPort The viewPort.\r\n     * @param name The name of the viewPort. 'default' if unspecified.\r\n     */\r\n    registerViewPort(viewPort, name) {\r\n        name = name || 'default';\r\n        this.viewPorts[name] = viewPort;\r\n    }\r\n    /**\r\n     * Returns a Promise that resolves when the router is configured.\r\n     */\r\n    ensureConfigured() {\r\n        return this._configuredPromise;\r\n    }\r\n    /**\r\n     * Configures the router.\r\n     *\r\n     * @param callbackOrConfig The [[RouterConfiguration]] or a callback that takes a [[RouterConfiguration]].\r\n     */\r\n    configure(callbackOrConfig) {\r\n        this.isConfigured = true;\r\n        let result = callbackOrConfig;\r\n        let config;\r\n        if (typeof callbackOrConfig === 'function') {\r\n            config = new RouterConfiguration();\r\n            result = callbackOrConfig(config);\r\n        }\r\n        return Promise\r\n            .resolve(result)\r\n            .then((c) => {\r\n            if (c && c.exportToRouter) {\r\n                config = c;\r\n            }\r\n            config.exportToRouter(this);\r\n            this.isConfigured = true;\r\n            this._resolveConfiguredPromise();\r\n        });\r\n    }\r\n    /**\r\n     * Navigates to a new location.\r\n     *\r\n     * @param fragment The URL fragment to use as the navigation destination.\r\n     * @param options The navigation options.\r\n     */\r\n    navigate(fragment, options) {\r\n        if (!this.isConfigured && this.parent) {\r\n            return this.parent.navigate(fragment, options);\r\n        }\r\n        this.isExplicitNavigation = true;\r\n        return this.history.navigate(_resolveUrl(fragment, this.baseUrl, this.history._hasPushState), options);\r\n    }\r\n    /**\r\n     * Navigates to a new location corresponding to the route and params specified. Equivallent to [[Router.generate]] followed\r\n     * by [[Router.navigate]].\r\n     *\r\n     * @param route The name of the route to use when generating the navigation location.\r\n     * @param params The route parameters to be used when populating the route pattern.\r\n     * @param options The navigation options.\r\n     */\r\n    navigateToRoute(route, params, options) {\r\n        let path = this.generate(route, params);\r\n        return this.navigate(path, options);\r\n    }\r\n    /**\r\n     * Navigates back to the most recent location in history.\r\n     */\r\n    navigateBack() {\r\n        this.isExplicitNavigationBack = true;\r\n        this.history.navigateBack();\r\n    }\r\n    /**\r\n     * Creates a child router of the current router.\r\n     *\r\n     * @param container The [[Container]] to provide to the child router. Uses the current [[Router]]'s [[Container]] if unspecified.\r\n     * @returns {Router} The new child Router.\r\n     */\r\n    createChild(container) {\r\n        let childRouter = new Router(container || this.container.createChild(), this.history);\r\n        childRouter.parent = this;\r\n        return childRouter;\r\n    }\r\n    /**\r\n     * Generates a URL fragment matching the specified route pattern.\r\n     *\r\n     * @param name The name of the route whose pattern should be used to generate the fragment.\r\n     * @param params The route params to be used to populate the route pattern.\r\n     * @param options If options.absolute = true, then absolute url will be generated; otherwise, it will be relative url.\r\n     * @returns {string} A string containing the generated URL fragment.\r\n     */\r\n    generate(nameOrRoute, params = {}, options = {}) {\r\n        // A child recognizer generates routes for potential child routes. Any potential child route is added\r\n        // to the childRoute property of params for the childRouter to recognize. When generating routes, we\r\n        // use the childRecognizer when childRoute params are available to generate a child router enabled route.\r\n        let recognizer = 'childRoute' in params ? this._childRecognizer : this._recognizer;\r\n        let hasRoute = recognizer.hasRoute(nameOrRoute);\r\n        if (!hasRoute) {\r\n            if (this.parent) {\r\n                return this.parent.generate(nameOrRoute, params, options);\r\n            }\r\n            throw new Error(`A route with name '${nameOrRoute}' could not be found. Check that \\`name: '${nameOrRoute}'\\` was specified in the route's config.`);\r\n        }\r\n        let path = recognizer.generate(nameOrRoute, params);\r\n        let rootedPath = _createRootedPath(path, this.baseUrl, this.history._hasPushState, options.absolute);\r\n        return options.absolute ? `${this.history.getAbsoluteRoot()}${rootedPath}` : rootedPath;\r\n    }\r\n    /**\r\n     * Creates a [[NavModel]] for the specified route config.\r\n     *\r\n     * @param config The route config.\r\n     */\r\n    createNavModel(config) {\r\n        let navModel = new NavModel(this, 'href' in config\r\n            ? config.href\r\n            // potential error when config.route is a string[] ?\r\n            : config.route);\r\n        navModel.title = config.title;\r\n        navModel.order = config.nav;\r\n        navModel.href = config.href;\r\n        navModel.settings = config.settings;\r\n        navModel.config = config;\r\n        return navModel;\r\n    }\r\n    /**\r\n     * Registers a new route with the router.\r\n     *\r\n     * @param config The [[RouteConfig]].\r\n     * @param navModel The [[NavModel]] to use for the route. May be omitted for single-pattern routes.\r\n     */\r\n    addRoute(config, navModel) {\r\n        if (Array.isArray(config.route)) {\r\n            let routeConfigs = _ensureArrayWithSingleRoutePerConfig(config);\r\n            // the following is wrong. todo: fix this after TS refactoring release\r\n            routeConfigs.forEach(this.addRoute.bind(this));\r\n            return;\r\n        }\r\n        validateRouteConfig(config);\r\n        if (!('viewPorts' in config) && !config.navigationStrategy) {\r\n            config.viewPorts = {\r\n                'default': {\r\n                    moduleId: config.moduleId,\r\n                    view: config.view\r\n                }\r\n            };\r\n        }\r\n        if (!navModel) {\r\n            navModel = this.createNavModel(config);\r\n        }\r\n        this.routes.push(config);\r\n        let path = config.route;\r\n        if (path.charAt(0) === '/') {\r\n            path = path.substr(1);\r\n        }\r\n        let caseSensitive = config.caseSensitive === true;\r\n        let state = this._recognizer.add({\r\n            path: path,\r\n            handler: config,\r\n            caseSensitive: caseSensitive\r\n        });\r\n        if (path) {\r\n            let settings = config.settings;\r\n            delete config.settings;\r\n            let withChild = JSON.parse(JSON.stringify(config));\r\n            config.settings = settings;\r\n            withChild.route = `${path}/*childRoute`;\r\n            withChild.hasChildRouter = true;\r\n            this._childRecognizer.add({\r\n                path: withChild.route,\r\n                handler: withChild,\r\n                caseSensitive: caseSensitive\r\n            });\r\n            withChild.navModel = navModel;\r\n            withChild.settings = config.settings;\r\n            withChild.navigationStrategy = config.navigationStrategy;\r\n        }\r\n        config.navModel = navModel;\r\n        let navigation = this.navigation;\r\n        if ((navModel.order || navModel.order === 0) && navigation.indexOf(navModel) === -1) {\r\n            if ((!navModel.href && navModel.href !== '') && (state.types.dynamics || state.types.stars)) {\r\n                throw new Error('Invalid route config for \"' + config.route + '\" : dynamic routes must specify an \"href:\" to be included in the navigation model.');\r\n            }\r\n            if (typeof navModel.order !== 'number') {\r\n                navModel.order = ++this._fallbackOrder;\r\n            }\r\n            navigation.push(navModel);\r\n            // this is a potential error / inconsistency between browsers\r\n            //\r\n            // MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n            // If compareFunction(a, b) returns 0, leave a and b unchanged with respect to each other,\r\n            // but sorted with respect to all different elements.\r\n            // Note: the ECMAscript standard does not guarantee this behaviour,\r\n            // and thus not all browsers (e.g. Mozilla versions dating back to at least 2003) respect this.\r\n            navigation.sort((a, b) => a.order - b.order);\r\n        }\r\n    }\r\n    /**\r\n     * Gets a value indicating whether or not this [[Router]] or one of its ancestors has a route registered with the specified name.\r\n     *\r\n     * @param name The name of the route to check.\r\n     */\r\n    hasRoute(name) {\r\n        return !!(this._recognizer.hasRoute(name) || this.parent && this.parent.hasRoute(name));\r\n    }\r\n    /**\r\n     * Gets a value indicating whether or not this [[Router]] has a route registered with the specified name.\r\n     *\r\n     * @param name The name of the route to check.\r\n     */\r\n    hasOwnRoute(name) {\r\n        return this._recognizer.hasRoute(name);\r\n    }\r\n    /**\r\n     * Register a handler to use when the incoming URL fragment doesn't match any registered routes.\r\n     *\r\n     * @param config The moduleId, or a function that selects the moduleId, or a [[RouteConfig]].\r\n     */\r\n    handleUnknownRoutes(config) {\r\n        if (!config) {\r\n            throw new Error('Invalid unknown route handler');\r\n        }\r\n        this.catchAllHandler = instruction => {\r\n            return this\r\n                ._createRouteConfig(config, instruction)\r\n                .then(c => {\r\n                instruction.config = c;\r\n                return instruction;\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Updates the document title using the current navigation instruction.\r\n     */\r\n    updateTitle() {\r\n        let parentRouter = this.parent;\r\n        if (parentRouter) {\r\n            return parentRouter.updateTitle();\r\n        }\r\n        let currentInstruction = this.currentInstruction;\r\n        if (currentInstruction) {\r\n            currentInstruction._updateTitle();\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Updates the navigation routes with hrefs relative to the current location.\r\n     * Note: This method will likely move to a plugin in a future release.\r\n     */\r\n    refreshNavigation() {\r\n        let nav = this.navigation;\r\n        for (let i = 0, length = nav.length; i < length; i++) {\r\n            let current = nav[i];\r\n            if (!current.config.href) {\r\n                current.href = _createRootedPath(current.relativeHref, this.baseUrl, this.history._hasPushState);\r\n            }\r\n            else {\r\n                current.href = _normalizeAbsolutePath(current.config.href, this.history._hasPushState);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets the default configuration for the view ports. This specifies how to\r\n     *  populate a view port for which no module is specified. The default is\r\n     *  an empty view/view-model pair.\r\n     */\r\n    useViewPortDefaults($viewPortDefaults) {\r\n        // a workaround to have strong typings while not requiring to expose interface ViewPortInstruction\r\n        let viewPortDefaults = $viewPortDefaults;\r\n        for (let viewPortName in viewPortDefaults) {\r\n            let viewPortConfig = viewPortDefaults[viewPortName];\r\n            this.viewPortDefaults[viewPortName] = {\r\n                moduleId: viewPortConfig.moduleId\r\n            };\r\n        }\r\n    }\r\n    /**@internal */\r\n    _refreshBaseUrl() {\r\n        let parentRouter = this.parent;\r\n        if (parentRouter) {\r\n            this.baseUrl = generateBaseUrl(parentRouter, parentRouter.currentInstruction);\r\n        }\r\n    }\r\n    /**@internal */\r\n    _createNavigationInstruction(url = '', parentInstruction = null) {\r\n        let fragment = url;\r\n        let queryString = '';\r\n        let queryIndex = url.indexOf('?');\r\n        if (queryIndex !== -1) {\r\n            fragment = url.substr(0, queryIndex);\r\n            queryString = url.substr(queryIndex + 1);\r\n        }\r\n        let urlRecognizationResults = this._recognizer.recognize(url);\r\n        if (!urlRecognizationResults || !urlRecognizationResults.length) {\r\n            urlRecognizationResults = this._childRecognizer.recognize(url);\r\n        }\r\n        let instructionInit = {\r\n            fragment,\r\n            queryString,\r\n            config: null,\r\n            parentInstruction,\r\n            previousInstruction: this.currentInstruction,\r\n            router: this,\r\n            options: {\r\n                compareQueryParams: this.options.compareQueryParams\r\n            }\r\n        };\r\n        let result;\r\n        if (urlRecognizationResults && urlRecognizationResults.length) {\r\n            let first = urlRecognizationResults[0];\r\n            let instruction = new NavigationInstruction(Object.assign({}, instructionInit, {\r\n                params: first.params,\r\n                queryParams: first.queryParams || urlRecognizationResults.queryParams,\r\n                config: first.config || first.handler\r\n            }));\r\n            if (typeof first.handler === 'function') {\r\n                result = evaluateNavigationStrategy(instruction, first.handler, first);\r\n            }\r\n            else if (first.handler && typeof first.handler.navigationStrategy === 'function') {\r\n                result = evaluateNavigationStrategy(instruction, first.handler.navigationStrategy, first.handler);\r\n            }\r\n            else {\r\n                result = Promise.resolve(instruction);\r\n            }\r\n        }\r\n        else if (this.catchAllHandler) {\r\n            let instruction = new NavigationInstruction(Object.assign({}, instructionInit, {\r\n                params: { path: fragment },\r\n                queryParams: urlRecognizationResults ? urlRecognizationResults.queryParams : {},\r\n                config: null // config will be created by the catchAllHandler\r\n            }));\r\n            result = evaluateNavigationStrategy(instruction, this.catchAllHandler);\r\n        }\r\n        else if (this.parent) {\r\n            let router = this._parentCatchAllHandler(this.parent);\r\n            if (router) {\r\n                let newParentInstruction = this._findParentInstructionFromRouter(router, parentInstruction);\r\n                let instruction = new NavigationInstruction(Object.assign({}, instructionInit, {\r\n                    params: { path: fragment },\r\n                    queryParams: urlRecognizationResults ? urlRecognizationResults.queryParams : {},\r\n                    router: router,\r\n                    parentInstruction: newParentInstruction,\r\n                    parentCatchHandler: true,\r\n                    config: null // config will be created by the chained parent catchAllHandler\r\n                }));\r\n                result = evaluateNavigationStrategy(instruction, router.catchAllHandler);\r\n            }\r\n        }\r\n        if (result && parentInstruction) {\r\n            this.baseUrl = generateBaseUrl(this.parent, parentInstruction);\r\n        }\r\n        return result || Promise.reject(new Error(`Route not found: ${url}`));\r\n    }\r\n    /**@internal */\r\n    _findParentInstructionFromRouter(router, instruction) {\r\n        if (instruction.router === router) {\r\n            instruction.fragment = router.baseUrl; // need to change the fragment in case of a redirect instead of moduleId\r\n            return instruction;\r\n        }\r\n        else if (instruction.parentInstruction) {\r\n            return this._findParentInstructionFromRouter(router, instruction.parentInstruction);\r\n        }\r\n        return undefined;\r\n    }\r\n    /**@internal */\r\n    _parentCatchAllHandler(router) {\r\n        if (router.catchAllHandler) {\r\n            return router;\r\n        }\r\n        else if (router.parent) {\r\n            return this._parentCatchAllHandler(router.parent);\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _createRouteConfig(config, instruction) {\r\n        return Promise\r\n            .resolve(config)\r\n            .then((c) => {\r\n            if (typeof c === 'string') {\r\n                return { moduleId: c };\r\n            }\r\n            else if (typeof c === 'function') {\r\n                return c(instruction);\r\n            }\r\n            return c;\r\n        })\r\n            // typing here could be either RouteConfig or RedirectConfig\r\n            // but temporarily treat both as RouteConfig\r\n            // todo: improve typings precision\r\n            .then((c) => typeof c === 'string' ? { moduleId: c } : c)\r\n            .then((c) => {\r\n            c.route = instruction.params.path;\r\n            validateRouteConfig(c);\r\n            if (!c.navModel) {\r\n                c.navModel = this.createNavModel(c);\r\n            }\r\n            return c;\r\n        });\r\n    }\r\n}\r\n/* @internal exported for unit testing */\r\nconst generateBaseUrl = (router, instruction) => {\r\n    return `${router.baseUrl || ''}${instruction.getBaseUrl() || ''}`;\r\n};\r\n/* @internal exported for unit testing */\r\nconst validateRouteConfig = (config) => {\r\n    if (typeof config !== 'object') {\r\n        throw new Error('Invalid Route Config');\r\n    }\r\n    if (typeof config.route !== 'string') {\r\n        let name = config.name || '(no name)';\r\n        throw new Error('Invalid Route Config for \"' + name + '\": You must specify a \"route:\" pattern.');\r\n    }\r\n    if (!('redirect' in config || config.moduleId || config.navigationStrategy || config.viewPorts)) {\r\n        throw new Error('Invalid Route Config for \"' + config.route + '\": You must specify a \"moduleId:\", \"redirect:\", \"navigationStrategy:\", or \"viewPorts:\".');\r\n    }\r\n};\r\n/* @internal exported for unit testing */\r\nconst evaluateNavigationStrategy = (instruction, evaluator, context) => {\r\n    return Promise\r\n        .resolve(evaluator.call(context, instruction))\r\n        .then(() => {\r\n        if (!('viewPorts' in instruction.config)) {\r\n            instruction.config.viewPorts = {\r\n                'default': {\r\n                    moduleId: instruction.config.moduleId\r\n                }\r\n            };\r\n        }\r\n        return instruction;\r\n    });\r\n};\n\n/**@internal exported for unit testing */\r\nconst createNextFn = (instruction, steps) => {\r\n    let index = -1;\r\n    const next = function () {\r\n        index++;\r\n        if (index < steps.length) {\r\n            let currentStep = steps[index];\r\n            try {\r\n                return currentStep(instruction, next);\r\n            }\r\n            catch (e) {\r\n                return next.reject(e);\r\n            }\r\n        }\r\n        else {\r\n            return next.complete();\r\n        }\r\n    };\r\n    next.complete = createCompletionHandler(next, \"completed\" /* Completed */);\r\n    next.cancel = createCompletionHandler(next, \"canceled\" /* Canceled */);\r\n    next.reject = createCompletionHandler(next, \"rejected\" /* Rejected */);\r\n    return next;\r\n};\r\n/**@internal exported for unit testing */\r\nconst createCompletionHandler = (next, status) => {\r\n    return (output) => Promise\r\n        .resolve({\r\n        status,\r\n        output,\r\n        completed: status === \"completed\" /* Completed */\r\n    });\r\n};\n\n/**\r\n * The class responsible for managing and processing the navigation pipeline.\r\n */\r\nclass Pipeline {\r\n    constructor() {\r\n        /**\r\n         * The pipeline steps. And steps added via addStep will be converted to a function\r\n         * The actualy running functions with correct step contexts of this pipeline\r\n         */\r\n        this.steps = [];\r\n    }\r\n    /**\r\n     * Adds a step to the pipeline.\r\n     *\r\n     * @param step The pipeline step.\r\n     */\r\n    addStep(step) {\r\n        let run;\r\n        if (typeof step === 'function') {\r\n            run = step;\r\n        }\r\n        else if (typeof step.getSteps === 'function') {\r\n            // getSteps is to enable support open slots\r\n            // where devs can add multiple steps into the same slot name\r\n            let steps = step.getSteps();\r\n            for (let i = 0, l = steps.length; i < l; i++) {\r\n                this.addStep(steps[i]);\r\n            }\r\n            return this;\r\n        }\r\n        else {\r\n            run = step.run.bind(step);\r\n        }\r\n        this.steps.push(run);\r\n        return this;\r\n    }\r\n    /**\r\n     * Runs the pipeline.\r\n     *\r\n     * @param instruction The navigation instruction to process.\r\n     */\r\n    run(instruction) {\r\n        const nextFn = createNextFn(instruction, this.steps);\r\n        return nextFn();\r\n    }\r\n}\n\n/**\r\n* Determines if the provided object is a navigation command.\r\n* A navigation command is anything with a navigate method.\r\n*\r\n* @param obj The object to check.\r\n*/\r\nfunction isNavigationCommand(obj) {\r\n    return obj && typeof obj.navigate === 'function';\r\n}\r\n/**\r\n* Used during the activation lifecycle to cause a redirect.\r\n*/\r\nclass Redirect {\r\n    /**\r\n     * @param url The URL fragment to use as the navigation destination.\r\n     * @param options The navigation options.\r\n     */\r\n    constructor(url, options = {}) {\r\n        this.url = url;\r\n        this.options = Object.assign({ trigger: true, replace: true }, options);\r\n        this.shouldContinueProcessing = false;\r\n    }\r\n    /**\r\n     * Called by the activation system to set the child router.\r\n     *\r\n     * @param router The router.\r\n     */\r\n    setRouter(router) {\r\n        this.router = router;\r\n    }\r\n    /**\r\n     * Called by the navigation pipeline to navigate.\r\n     *\r\n     * @param appRouter The router to be redirected.\r\n     */\r\n    navigate(appRouter) {\r\n        let navigatingRouter = this.options.useAppRouter ? appRouter : (this.router || appRouter);\r\n        navigatingRouter.navigate(this.url, this.options);\r\n    }\r\n}\r\n/**\r\n * Used during the activation lifecycle to cause a redirect to a named route.\r\n */\r\nclass RedirectToRoute {\r\n    /**\r\n     * @param route The name of the route.\r\n     * @param params The parameters to be sent to the activation method.\r\n     * @param options The options to use for navigation.\r\n     */\r\n    constructor(route, params = {}, options = {}) {\r\n        this.route = route;\r\n        this.params = params;\r\n        this.options = Object.assign({ trigger: true, replace: true }, options);\r\n        this.shouldContinueProcessing = false;\r\n    }\r\n    /**\r\n     * Called by the activation system to set the child router.\r\n     *\r\n     * @param router The router.\r\n     */\r\n    setRouter(router) {\r\n        this.router = router;\r\n    }\r\n    /**\r\n     * Called by the navigation pipeline to navigate.\r\n     *\r\n     * @param appRouter The router to be redirected.\r\n     */\r\n    navigate(appRouter) {\r\n        let navigatingRouter = this.options.useAppRouter ? appRouter : (this.router || appRouter);\r\n        navigatingRouter.navigateToRoute(this.route, this.params, this.options);\r\n    }\r\n}\n\n/**\r\n * @internal exported for unit testing\r\n */\r\nfunction _buildNavigationPlan(instruction, forceLifecycleMinimum) {\r\n    let config = instruction.config;\r\n    if ('redirect' in config) {\r\n        return buildRedirectPlan(instruction);\r\n    }\r\n    const prevInstruction = instruction.previousInstruction;\r\n    const defaultViewPortConfigs = instruction.router.viewPortDefaults;\r\n    if (prevInstruction) {\r\n        return buildTransitionPlans(instruction, prevInstruction, defaultViewPortConfigs, forceLifecycleMinimum);\r\n    }\r\n    // first navigation, only need to prepare a few information for each viewport plan\r\n    const viewPortPlans = {};\r\n    let viewPortConfigs = config.viewPorts;\r\n    for (let viewPortName in viewPortConfigs) {\r\n        let viewPortConfig = viewPortConfigs[viewPortName];\r\n        if (viewPortConfig.moduleId === null && viewPortName in defaultViewPortConfigs) {\r\n            viewPortConfig = defaultViewPortConfigs[viewPortName];\r\n        }\r\n        viewPortPlans[viewPortName] = {\r\n            name: viewPortName,\r\n            strategy: \"replace\" /* Replace */,\r\n            config: viewPortConfig\r\n        };\r\n    }\r\n    return Promise.resolve(viewPortPlans);\r\n}\r\n/**\r\n * Build redirect plan based on config of a navigation instruction\r\n * @internal exported for unit testing\r\n */\r\nconst buildRedirectPlan = (instruction) => {\r\n    const config = instruction.config;\r\n    const router = instruction.router;\r\n    return router\r\n        ._createNavigationInstruction(config.redirect)\r\n        .then(redirectInstruction => {\r\n        const params = {};\r\n        const originalInstructionParams = instruction.params;\r\n        const redirectInstructionParams = redirectInstruction.params;\r\n        for (let key in redirectInstructionParams) {\r\n            // If the param on the redirect points to another param, e.g. { route: first/:this, redirect: second/:this }\r\n            let val = redirectInstructionParams[key];\r\n            if (typeof val === 'string' && val[0] === ':') {\r\n                val = val.slice(1);\r\n                // And if that param is found on the original instruction then use it\r\n                if (val in originalInstructionParams) {\r\n                    params[key] = originalInstructionParams[val];\r\n                }\r\n            }\r\n            else {\r\n                params[key] = redirectInstructionParams[key];\r\n            }\r\n        }\r\n        let redirectLocation = router.generate(redirectInstruction.config, params, instruction.options);\r\n        // Special handling for child routes\r\n        for (let key in originalInstructionParams) {\r\n            redirectLocation = redirectLocation.replace(`:${key}`, originalInstructionParams[key]);\r\n        }\r\n        let queryString = instruction.queryString;\r\n        if (queryString) {\r\n            redirectLocation += '?' + queryString;\r\n        }\r\n        return Promise.resolve(new Redirect(redirectLocation));\r\n    });\r\n};\r\n/**\r\n * @param viewPortPlans the Plan record that holds information about built plans\r\n * @internal exported for unit testing\r\n */\r\nconst buildTransitionPlans = (currentInstruction, previousInstruction, defaultViewPortConfigs, forceLifecycleMinimum) => {\r\n    let viewPortPlans = {};\r\n    let newInstructionConfig = currentInstruction.config;\r\n    let hasNewParams = hasDifferentParameterValues(previousInstruction, currentInstruction);\r\n    let pending = [];\r\n    let previousViewPortInstructions = previousInstruction.viewPortInstructions;\r\n    for (let viewPortName in previousViewPortInstructions) {\r\n        const prevViewPortInstruction = previousViewPortInstructions[viewPortName];\r\n        const prevViewPortComponent = prevViewPortInstruction.component;\r\n        const newInstructionViewPortConfigs = newInstructionConfig.viewPorts;\r\n        // if this is invoked on a viewport without any changes, based on new url,\r\n        // newViewPortConfig will be the existing viewport instruction\r\n        let nextViewPortConfig = viewPortName in newInstructionViewPortConfigs\r\n            ? newInstructionViewPortConfigs[viewPortName]\r\n            : prevViewPortInstruction;\r\n        if (nextViewPortConfig.moduleId === null && viewPortName in defaultViewPortConfigs) {\r\n            nextViewPortConfig = defaultViewPortConfigs[viewPortName];\r\n        }\r\n        const viewPortActivationStrategy = determineActivationStrategy(currentInstruction, prevViewPortInstruction, nextViewPortConfig, hasNewParams, forceLifecycleMinimum);\r\n        const viewPortPlan = viewPortPlans[viewPortName] = {\r\n            name: viewPortName,\r\n            // ViewPortInstruction can quack like a RouteConfig\r\n            config: nextViewPortConfig,\r\n            prevComponent: prevViewPortComponent,\r\n            prevModuleId: prevViewPortInstruction.moduleId,\r\n            strategy: viewPortActivationStrategy\r\n        };\r\n        // recursively build nav plans for all existing child routers/viewports of this viewport\r\n        // this is possible because existing child viewports and routers already have necessary information\r\n        // to process the wildcard path from parent instruction\r\n        if (viewPortActivationStrategy !== \"replace\" /* Replace */ && prevViewPortInstruction.childRouter) {\r\n            const path = currentInstruction.getWildcardPath();\r\n            const task = prevViewPortInstruction\r\n                .childRouter\r\n                ._createNavigationInstruction(path, currentInstruction)\r\n                .then((childInstruction) => {\r\n                viewPortPlan.childNavigationInstruction = childInstruction;\r\n                return _buildNavigationPlan(childInstruction, \r\n                // is it safe to assume viewPortPlan has not been changed from previous assignment?\r\n                // if so, can just use local variable viewPortPlanStrategy\r\n                // there could be user code modifying viewport plan during _createNavigationInstruction?\r\n                viewPortPlan.strategy === \"invoke-lifecycle\" /* InvokeLifecycle */)\r\n                    .then(childPlan => {\r\n                    if (childPlan instanceof Redirect) {\r\n                        return Promise.reject(childPlan);\r\n                    }\r\n                    childInstruction.plan = childPlan;\r\n                    // for bluebird ?\r\n                    return null;\r\n                });\r\n            });\r\n            pending.push(task);\r\n        }\r\n    }\r\n    return Promise.all(pending).then(() => viewPortPlans);\r\n};\r\n/**\r\n * @param newViewPortConfig if this is invoked on a viewport without any changes, based on new url, newViewPortConfig will be the existing viewport instruction\r\n * @internal exported for unit testing\r\n */\r\nconst determineActivationStrategy = (currentNavInstruction, prevViewPortInstruction, newViewPortConfig, \r\n// indicates whether there is difference between old and new url params\r\nhasNewParams, forceLifecycleMinimum) => {\r\n    let newInstructionConfig = currentNavInstruction.config;\r\n    let prevViewPortViewModel = prevViewPortInstruction.component.viewModel;\r\n    let viewPortPlanStrategy;\r\n    if (prevViewPortInstruction.moduleId !== newViewPortConfig.moduleId) {\r\n        viewPortPlanStrategy = \"replace\" /* Replace */;\r\n    }\r\n    else if ('determineActivationStrategy' in prevViewPortViewModel) {\r\n        viewPortPlanStrategy = prevViewPortViewModel.determineActivationStrategy(...currentNavInstruction.lifecycleArgs);\r\n    }\r\n    else if (newInstructionConfig.activationStrategy) {\r\n        viewPortPlanStrategy = newInstructionConfig.activationStrategy;\r\n    }\r\n    else if (hasNewParams || forceLifecycleMinimum) {\r\n        viewPortPlanStrategy = \"invoke-lifecycle\" /* InvokeLifecycle */;\r\n    }\r\n    else {\r\n        viewPortPlanStrategy = \"no-change\" /* NoChange */;\r\n    }\r\n    return viewPortPlanStrategy;\r\n};\r\n/**@internal exported for unit testing */\r\nconst hasDifferentParameterValues = (prev, next) => {\r\n    let prevParams = prev.params;\r\n    let nextParams = next.params;\r\n    let nextWildCardName = next.config.hasChildRouter ? next.getWildCardName() : null;\r\n    for (let key in nextParams) {\r\n        if (key === nextWildCardName) {\r\n            continue;\r\n        }\r\n        if (prevParams[key] !== nextParams[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    for (let key in prevParams) {\r\n        if (key === nextWildCardName) {\r\n            continue;\r\n        }\r\n        if (prevParams[key] !== nextParams[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    if (!next.options.compareQueryParams) {\r\n        return false;\r\n    }\r\n    let prevQueryParams = prev.queryParams;\r\n    let nextQueryParams = next.queryParams;\r\n    for (let key in nextQueryParams) {\r\n        if (prevQueryParams[key] !== nextQueryParams[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    for (let key in prevQueryParams) {\r\n        if (prevQueryParams[key] !== nextQueryParams[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\n/**\r\n * Transform a navigation instruction into viewport plan record object,\r\n * or a redirect request if user viewmodel demands\r\n */\r\nclass BuildNavigationPlanStep {\r\n    run(navigationInstruction, next) {\r\n        return _buildNavigationPlan(navigationInstruction)\r\n            .then(plan => {\r\n            if (plan instanceof Redirect) {\r\n                return next.cancel(plan);\r\n            }\r\n            navigationInstruction.plan = plan;\r\n            return next();\r\n        })\r\n            .catch(next.cancel);\r\n    }\r\n}\n\n/**\r\n * @internal Exported for unit testing\r\n */\r\nconst loadNewRoute = (routeLoader, navigationInstruction) => {\r\n    let loadingPlans = determineLoadingPlans(navigationInstruction);\r\n    let loadPromises = loadingPlans.map((loadingPlan) => loadRoute(routeLoader, loadingPlan.navigationInstruction, loadingPlan.viewPortPlan));\r\n    return Promise.all(loadPromises);\r\n};\r\n/**\r\n * @internal Exported for unit testing\r\n */\r\nconst determineLoadingPlans = (navigationInstruction, loadingPlans = []) => {\r\n    let viewPortPlans = navigationInstruction.plan;\r\n    for (let viewPortName in viewPortPlans) {\r\n        let viewPortPlan = viewPortPlans[viewPortName];\r\n        let childNavInstruction = viewPortPlan.childNavigationInstruction;\r\n        if (viewPortPlan.strategy === \"replace\" /* Replace */) {\r\n            loadingPlans.push({ viewPortPlan, navigationInstruction });\r\n            if (childNavInstruction) {\r\n                determineLoadingPlans(childNavInstruction, loadingPlans);\r\n            }\r\n        }\r\n        else {\r\n            let viewPortInstruction = navigationInstruction.addViewPortInstruction({\r\n                name: viewPortName,\r\n                strategy: viewPortPlan.strategy,\r\n                moduleId: viewPortPlan.prevModuleId,\r\n                component: viewPortPlan.prevComponent\r\n            });\r\n            if (childNavInstruction) {\r\n                viewPortInstruction.childNavigationInstruction = childNavInstruction;\r\n                determineLoadingPlans(childNavInstruction, loadingPlans);\r\n            }\r\n        }\r\n    }\r\n    return loadingPlans;\r\n};\r\n/**\r\n * @internal Exported for unit testing\r\n */\r\nconst loadRoute = (routeLoader, navigationInstruction, viewPortPlan) => {\r\n    let planConfig = viewPortPlan.config;\r\n    let moduleId = planConfig ? planConfig.moduleId : null;\r\n    return loadComponent(routeLoader, navigationInstruction, planConfig)\r\n        .then((component) => {\r\n        let viewPortInstruction = navigationInstruction.addViewPortInstruction({\r\n            name: viewPortPlan.name,\r\n            strategy: viewPortPlan.strategy,\r\n            moduleId: moduleId,\r\n            component: component\r\n        });\r\n        let childRouter = component.childRouter;\r\n        if (childRouter) {\r\n            let path = navigationInstruction.getWildcardPath();\r\n            return childRouter\r\n                ._createNavigationInstruction(path, navigationInstruction)\r\n                .then((childInstruction) => {\r\n                viewPortPlan.childNavigationInstruction = childInstruction;\r\n                return _buildNavigationPlan(childInstruction)\r\n                    .then((childPlan) => {\r\n                    if (childPlan instanceof Redirect) {\r\n                        return Promise.reject(childPlan);\r\n                    }\r\n                    childInstruction.plan = childPlan;\r\n                    viewPortInstruction.childNavigationInstruction = childInstruction;\r\n                    return loadNewRoute(routeLoader, childInstruction);\r\n                });\r\n            });\r\n        }\r\n        // ts complains without this, though they are same\r\n        return void 0;\r\n    });\r\n};\r\n/**\r\n * Load a routed-component based on navigation instruction and route config\r\n * @internal exported for unit testing only\r\n */\r\nconst loadComponent = (routeLoader, navigationInstruction, config) => {\r\n    let router = navigationInstruction.router;\r\n    let lifecycleArgs = navigationInstruction.lifecycleArgs;\r\n    return Promise.resolve()\r\n        .then(() => routeLoader.loadRoute(router, config, navigationInstruction))\r\n        .then(\r\n    /**\r\n     * @param component an object carrying information about loaded route\r\n     * typically contains information about view model, childContainer, view and router\r\n     */\r\n    (component) => {\r\n        let { viewModel, childContainer } = component;\r\n        component.router = router;\r\n        component.config = config;\r\n        if ('configureRouter' in viewModel) {\r\n            let childRouter = childContainer.getChildRouter();\r\n            component.childRouter = childRouter;\r\n            return childRouter\r\n                .configure(c => viewModel.configureRouter(c, childRouter, lifecycleArgs[0], lifecycleArgs[1], lifecycleArgs[2]))\r\n                .then(() => component);\r\n        }\r\n        return component;\r\n    });\r\n};\n\n/**\r\n * Abstract class that is responsible for loading view / view model from a route config\r\n * The default implementation can be found in `aurelia-templating-router`\r\n */\r\nclass RouteLoader {\r\n    /**\r\n     * Load a route config based on its viewmodel / view configuration\r\n     */\r\n    // return typing: return typings used to be never\r\n    // as it was a throw. Changing it to Promise<any> should not cause any issues\r\n    loadRoute(router, config, navigationInstruction) {\r\n        throw new Error('Route loaders must implement \"loadRoute(router, config, navigationInstruction)\".');\r\n    }\r\n}\n\n/**\r\n * A pipeline step responsible for loading a route config of a navigation instruction\r\n */\r\nclass LoadRouteStep {\r\n    /**@internal */\r\n    static inject() { return [RouteLoader]; }\r\n    constructor(routeLoader) {\r\n        this.routeLoader = routeLoader;\r\n    }\r\n    /**\r\n     * Run the internal to load route config of a navigation instruction to prepare for next steps in the pipeline\r\n     */\r\n    run(navigationInstruction, next) {\r\n        return loadNewRoute(this.routeLoader, navigationInstruction)\r\n            .then(next, next.cancel);\r\n    }\r\n}\n\n/**\r\n * A pipeline step for instructing a piepline to commit changes on a navigation instruction\r\n */\r\nclass CommitChangesStep {\r\n    run(navigationInstruction, next) {\r\n        return navigationInstruction\r\n            ._commitChanges(/*wait to swap?*/ true)\r\n            .then(() => {\r\n            navigationInstruction._updateTitle();\r\n            return next();\r\n        });\r\n    }\r\n}\n\n/**\r\n * An optional interface describing the available activation strategies.\r\n * @internal Used internally.\r\n */\r\nvar InternalActivationStrategy;\r\n(function (InternalActivationStrategy) {\r\n    /**\r\n     * Reuse the existing view model, without invoking Router lifecycle hooks.\r\n     */\r\n    InternalActivationStrategy[\"NoChange\"] = \"no-change\";\r\n    /**\r\n     * Reuse the existing view model, invoking Router lifecycle hooks.\r\n     */\r\n    InternalActivationStrategy[\"InvokeLifecycle\"] = \"invoke-lifecycle\";\r\n    /**\r\n     * Replace the existing view model, invoking Router lifecycle hooks.\r\n     */\r\n    InternalActivationStrategy[\"Replace\"] = \"replace\";\r\n})(InternalActivationStrategy || (InternalActivationStrategy = {}));\r\n/**\r\n * The strategy to use when activating modules during navigation.\r\n */\r\n// kept for compat reason\r\nconst activationStrategy = {\r\n    noChange: \"no-change\" /* NoChange */,\r\n    invokeLifecycle: \"invoke-lifecycle\" /* InvokeLifecycle */,\r\n    replace: \"replace\" /* Replace */\r\n};\n\n/**\r\n * Recursively find list of deactivate-able view models\r\n * and invoke the either 'canDeactivate' or 'deactivate' on each\r\n * @internal exported for unit testing\r\n */\r\nconst processDeactivatable = (navigationInstruction, callbackName, next, ignoreResult) => {\r\n    let plan = navigationInstruction.plan;\r\n    let infos = findDeactivatable(plan, callbackName);\r\n    let i = infos.length; // query from inside out\r\n    function inspect(val) {\r\n        if (ignoreResult || shouldContinue(val)) {\r\n            return iterate();\r\n        }\r\n        return next.cancel(val);\r\n    }\r\n    function iterate() {\r\n        if (i--) {\r\n            try {\r\n                let viewModel = infos[i];\r\n                let result = viewModel[callbackName](navigationInstruction);\r\n                return processPotential(result, inspect, next.cancel);\r\n            }\r\n            catch (error) {\r\n                return next.cancel(error);\r\n            }\r\n        }\r\n        navigationInstruction.router.couldDeactivate = true;\r\n        return next();\r\n    }\r\n    return iterate();\r\n};\r\n/**\r\n * Recursively find and returns a list of deactivate-able view models\r\n * @internal exported for unit testing\r\n */\r\nconst findDeactivatable = (plan, callbackName, list = []) => {\r\n    for (let viewPortName in plan) {\r\n        let viewPortPlan = plan[viewPortName];\r\n        let prevComponent = viewPortPlan.prevComponent;\r\n        if ((viewPortPlan.strategy === activationStrategy.invokeLifecycle || viewPortPlan.strategy === activationStrategy.replace)\r\n            && prevComponent) {\r\n            let viewModel = prevComponent.viewModel;\r\n            if (callbackName in viewModel) {\r\n                list.push(viewModel);\r\n            }\r\n        }\r\n        if (viewPortPlan.strategy === activationStrategy.replace && prevComponent) {\r\n            addPreviousDeactivatable(prevComponent, callbackName, list);\r\n        }\r\n        else if (viewPortPlan.childNavigationInstruction) {\r\n            findDeactivatable(viewPortPlan.childNavigationInstruction.plan, callbackName, list);\r\n        }\r\n    }\r\n    return list;\r\n};\r\n/**\r\n * @internal exported for unit testing\r\n */\r\nconst addPreviousDeactivatable = (component, callbackName, list) => {\r\n    let childRouter = component.childRouter;\r\n    if (childRouter && childRouter.currentInstruction) {\r\n        let viewPortInstructions = childRouter.currentInstruction.viewPortInstructions;\r\n        for (let viewPortName in viewPortInstructions) {\r\n            let viewPortInstruction = viewPortInstructions[viewPortName];\r\n            let prevComponent = viewPortInstruction.component;\r\n            let prevViewModel = prevComponent.viewModel;\r\n            if (callbackName in prevViewModel) {\r\n                list.push(prevViewModel);\r\n            }\r\n            addPreviousDeactivatable(prevComponent, callbackName, list);\r\n        }\r\n    }\r\n};\r\n/**\r\n * @internal exported for unit testing\r\n */\r\nconst processActivatable = (navigationInstruction, callbackName, next, ignoreResult) => {\r\n    let infos = findActivatable(navigationInstruction, callbackName);\r\n    let length = infos.length;\r\n    let i = -1; // query from top down\r\n    function inspect(val, router) {\r\n        if (ignoreResult || shouldContinue(val, router)) {\r\n            return iterate();\r\n        }\r\n        return next.cancel(val);\r\n    }\r\n    function iterate() {\r\n        i++;\r\n        if (i < length) {\r\n            try {\r\n                let current = infos[i];\r\n                let result = current.viewModel[callbackName](...current.lifecycleArgs);\r\n                return processPotential(result, (val) => inspect(val, current.router), next.cancel);\r\n            }\r\n            catch (error) {\r\n                return next.cancel(error);\r\n            }\r\n        }\r\n        return next();\r\n    }\r\n    return iterate();\r\n};\r\n/**\r\n * Find list of activatable view model and add to list (3rd parameter)\r\n * @internal exported for unit testing\r\n */\r\nconst findActivatable = (navigationInstruction, callbackName, list = [], router) => {\r\n    let plan = navigationInstruction.plan;\r\n    Object\r\n        .keys(plan)\r\n        .forEach((viewPortName) => {\r\n        let viewPortPlan = plan[viewPortName];\r\n        let viewPortInstruction = navigationInstruction.viewPortInstructions[viewPortName];\r\n        let viewPortComponent = viewPortInstruction.component;\r\n        let viewModel = viewPortComponent.viewModel;\r\n        if ((viewPortPlan.strategy === activationStrategy.invokeLifecycle\r\n            || viewPortPlan.strategy === activationStrategy.replace)\r\n            && callbackName in viewModel) {\r\n            list.push({\r\n                viewModel,\r\n                lifecycleArgs: viewPortInstruction.lifecycleArgs,\r\n                router\r\n            });\r\n        }\r\n        let childNavInstruction = viewPortPlan.childNavigationInstruction;\r\n        if (childNavInstruction) {\r\n            findActivatable(childNavInstruction, callbackName, list, viewPortComponent.childRouter || router);\r\n        }\r\n    });\r\n    return list;\r\n};\r\nconst shouldContinue = (output, router) => {\r\n    if (output instanceof Error) {\r\n        return false;\r\n    }\r\n    if (isNavigationCommand(output)) {\r\n        if (typeof output.setRouter === 'function') {\r\n            output.setRouter(router);\r\n        }\r\n        return !!output.shouldContinueProcessing;\r\n    }\r\n    if (output === undefined) {\r\n        return true;\r\n    }\r\n    return output;\r\n};\r\n/**\r\n * wraps a subscription, allowing unsubscribe calls even if\r\n * the first value comes synchronously\r\n */\r\nclass SafeSubscription {\r\n    constructor(subscriptionFunc) {\r\n        this._subscribed = true;\r\n        this._subscription = subscriptionFunc(this);\r\n        if (!this._subscribed) {\r\n            this.unsubscribe();\r\n        }\r\n    }\r\n    get subscribed() {\r\n        return this._subscribed;\r\n    }\r\n    unsubscribe() {\r\n        if (this._subscribed && this._subscription) {\r\n            this._subscription.unsubscribe();\r\n        }\r\n        this._subscribed = false;\r\n    }\r\n}\r\n/**\r\n * A function to process return value from `activate`/`canActivate` steps\r\n * Supports observable/promise\r\n *\r\n * For observable, resolve at first next() or on complete()\r\n */\r\nconst processPotential = (obj, resolve, reject) => {\r\n    // if promise like\r\n    if (obj && typeof obj.then === 'function') {\r\n        return Promise.resolve(obj).then(resolve).catch(reject);\r\n    }\r\n    // if observable\r\n    if (obj && typeof obj.subscribe === 'function') {\r\n        let obs = obj;\r\n        return new SafeSubscription(sub => obs.subscribe({\r\n            next() {\r\n                if (sub.subscribed) {\r\n                    sub.unsubscribe();\r\n                    resolve(obj);\r\n                }\r\n            },\r\n            error(error) {\r\n                if (sub.subscribed) {\r\n                    sub.unsubscribe();\r\n                    reject(error);\r\n                }\r\n            },\r\n            complete() {\r\n                if (sub.subscribed) {\r\n                    sub.unsubscribe();\r\n                    resolve(obj);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    // else just resolve\r\n    try {\r\n        return resolve(obj);\r\n    }\r\n    catch (error) {\r\n        return reject(error);\r\n    }\r\n};\n\n/**\r\n * A pipeline step responsible for finding and activating method `canDeactivate` on a view model of a route\r\n */\r\nclass CanDeactivatePreviousStep {\r\n    run(navigationInstruction, next) {\r\n        return processDeactivatable(navigationInstruction, 'canDeactivate', next);\r\n    }\r\n}\r\n/**\r\n * A pipeline step responsible for finding and activating method `canActivate` on a view model of a route\r\n */\r\nclass CanActivateNextStep {\r\n    run(navigationInstruction, next) {\r\n        return processActivatable(navigationInstruction, 'canActivate', next);\r\n    }\r\n}\r\n/**\r\n * A pipeline step responsible for finding and activating method `deactivate` on a view model of a route\r\n */\r\nclass DeactivatePreviousStep {\r\n    run(navigationInstruction, next) {\r\n        return processDeactivatable(navigationInstruction, 'deactivate', next, true);\r\n    }\r\n}\r\n/**\r\n * A pipeline step responsible for finding and activating method `activate` on a view model of a route\r\n */\r\nclass ActivateNextStep {\r\n    run(navigationInstruction, next) {\r\n        return processActivatable(navigationInstruction, 'activate', next, true);\r\n    }\r\n}\n\n/**\r\n * A multi-slots Pipeline Placeholder Step for hooking into a pipeline execution\r\n */\r\nclass PipelineSlot {\r\n    constructor(container, name, alias) {\r\n        this.steps = [];\r\n        this.container = container;\r\n        this.slotName = name;\r\n        this.slotAlias = alias;\r\n    }\r\n    getSteps() {\r\n        return this.steps.map(x => this.container.get(x));\r\n    }\r\n}\r\n/**\r\n * Class responsible for creating the navigation pipeline.\r\n */\r\nclass PipelineProvider {\r\n    /**@internal */\r\n    static inject() { return [Container]; }\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.steps = [\r\n            BuildNavigationPlanStep,\r\n            CanDeactivatePreviousStep,\r\n            LoadRouteStep,\r\n            createPipelineSlot(container, \"authorize\" /* Authorize */),\r\n            CanActivateNextStep,\r\n            createPipelineSlot(container, \"preActivate\" /* PreActivate */, 'modelbind'),\r\n            // NOTE: app state changes start below - point of no return\r\n            DeactivatePreviousStep,\r\n            ActivateNextStep,\r\n            createPipelineSlot(container, \"preRender\" /* PreRender */, 'precommit'),\r\n            CommitChangesStep,\r\n            createPipelineSlot(container, \"postRender\" /* PostRender */, 'postcomplete')\r\n        ];\r\n    }\r\n    /**\r\n     * Create the navigation pipeline.\r\n     */\r\n    createPipeline(useCanDeactivateStep = true) {\r\n        let pipeline = new Pipeline();\r\n        this.steps.forEach(step => {\r\n            if (useCanDeactivateStep || step !== CanDeactivatePreviousStep) {\r\n                pipeline.addStep(this.container.get(step));\r\n            }\r\n        });\r\n        return pipeline;\r\n    }\r\n    /**@internal */\r\n    _findStep(name) {\r\n        // Steps that are not PipelineSlots are constructor functions, and they will automatically fail. Probably.\r\n        return this.steps.find(x => x.slotName === name || x.slotAlias === name);\r\n    }\r\n    /**\r\n     * Adds a step into the pipeline at a known slot location.\r\n     */\r\n    addStep(name, step) {\r\n        let found = this._findStep(name);\r\n        if (found) {\r\n            let slotSteps = found.steps;\r\n            // prevent duplicates\r\n            if (!slotSteps.includes(step)) {\r\n                slotSteps.push(step);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`Invalid pipeline slot name: ${name}.`);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a step from a slot in the pipeline\r\n     */\r\n    removeStep(name, step) {\r\n        let slot = this._findStep(name);\r\n        if (slot) {\r\n            let slotSteps = slot.steps;\r\n            slotSteps.splice(slotSteps.indexOf(step), 1);\r\n        }\r\n    }\r\n    /**\r\n     * Clears all steps from a slot in the pipeline\r\n     * @internal\r\n     */\r\n    _clearSteps(name = '') {\r\n        let slot = this._findStep(name);\r\n        if (slot) {\r\n            slot.steps = [];\r\n        }\r\n    }\r\n    /**\r\n     * Resets all pipeline slots\r\n     */\r\n    reset() {\r\n        this._clearSteps(\"authorize\" /* Authorize */);\r\n        this._clearSteps(\"preActivate\" /* PreActivate */);\r\n        this._clearSteps(\"preRender\" /* PreRender */);\r\n        this._clearSteps(\"postRender\" /* PostRender */);\r\n    }\r\n}\r\n/**@internal */\r\nconst createPipelineSlot = (container, name, alias) => {\r\n    return new PipelineSlot(container, name, alias);\r\n};\n\nconst logger = getLogger('app-router');\r\n/**\r\n * The main application router.\r\n */\r\nclass AppRouter extends Router {\r\n    /**@internal */\r\n    static inject() { return [Container, History, PipelineProvider, EventAggregator]; }\r\n    constructor(container, history, pipelineProvider, events) {\r\n        super(container, history); // Note the super will call reset internally.\r\n        this.pipelineProvider = pipelineProvider;\r\n        this.events = events;\r\n    }\r\n    /**\r\n     * Fully resets the router's internal state. Primarily used internally by the framework when multiple calls to setRoot are made.\r\n     * Use with caution (actually, avoid using this). Do not use this to simply change your navigation model.\r\n     */\r\n    reset() {\r\n        super.reset();\r\n        this.maxInstructionCount = 10;\r\n        if (!this._queue) {\r\n            this._queue = [];\r\n        }\r\n        else {\r\n            this._queue.length = 0;\r\n        }\r\n    }\r\n    /**\r\n     * Loads the specified URL.\r\n     *\r\n     * @param url The URL fragment to load.\r\n     */\r\n    loadUrl(url) {\r\n        return this\r\n            ._createNavigationInstruction(url)\r\n            .then(instruction => this._queueInstruction(instruction))\r\n            .catch(error => {\r\n            logger.error(error);\r\n            restorePreviousLocation(this);\r\n        });\r\n    }\r\n    /**\r\n     * Registers a viewPort to be used as a rendering target for activated routes.\r\n     *\r\n     * @param viewPort The viewPort. This is typically a <router-view/> element in Aurelia default impl\r\n     * @param name The name of the viewPort. 'default' if unspecified.\r\n     */\r\n    registerViewPort(viewPort, name) {\r\n        // having strong typing without changing public API\r\n        const $viewPort = viewPort;\r\n        super.registerViewPort($viewPort, name);\r\n        // beside adding viewport to the registry of this instance\r\n        // AppRouter also configure routing/history to start routing functionality\r\n        // There are situation where there are more than 1 <router-view/> element at root view\r\n        // in that case, still only activate once via the following guard\r\n        if (!this.isActive) {\r\n            const viewModel = this._findViewModel($viewPort);\r\n            if ('configureRouter' in viewModel) {\r\n                // If there are more than one <router-view/> element at root view\r\n                // use this flag to guard against configure method being invoked multiple times\r\n                // this flag is set inside method configure\r\n                if (!this.isConfigured) {\r\n                    // replace the real resolve with a noop to guarantee that any action in base class Router\r\n                    // won't resolve the configurePromise prematurely\r\n                    const resolveConfiguredPromise = this._resolveConfiguredPromise;\r\n                    this._resolveConfiguredPromise = () => { };\r\n                    return this\r\n                        .configure(config => Promise\r\n                        .resolve(viewModel.configureRouter(config, this))\r\n                        // an issue with configure interface. Should be fixed there\r\n                        // todo: fix this via configure interface in router\r\n                        .then(() => config))\r\n                        .then(() => {\r\n                        this.activate();\r\n                        resolveConfiguredPromise();\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                this.activate();\r\n            }\r\n        }\r\n        // when a viewport is added dynamically to a root view that is already activated\r\n        // just process the navigation instruction\r\n        else {\r\n            this._dequeueInstruction();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Activates the router. This instructs the router to begin listening for history changes and processing instructions.\r\n     *\r\n     * @params options The set of options to activate the router with.\r\n     */\r\n    activate(options) {\r\n        if (this.isActive) {\r\n            return;\r\n        }\r\n        this.isActive = true;\r\n        // route handler property is responsible for handling url change\r\n        // the interface of aurelia-history isn't clear on this perspective\r\n        this.options = Object.assign({ routeHandler: this.loadUrl.bind(this) }, this.options, options);\r\n        this.history.activate(this.options);\r\n        this._dequeueInstruction();\r\n    }\r\n    /**\r\n     * Deactivates the router.\r\n     */\r\n    deactivate() {\r\n        this.isActive = false;\r\n        this.history.deactivate();\r\n    }\r\n    /**@internal */\r\n    _queueInstruction(instruction) {\r\n        return new Promise((resolve) => {\r\n            instruction.resolve = resolve;\r\n            this._queue.unshift(instruction);\r\n            this._dequeueInstruction();\r\n        });\r\n    }\r\n    /**@internal */\r\n    _dequeueInstruction(instructionCount = 0) {\r\n        return Promise.resolve().then(() => {\r\n            if (this.isNavigating && !instructionCount) {\r\n                // ts complains about inconsistent returns without void 0\r\n                return void 0;\r\n            }\r\n            let instruction = this._queue.shift();\r\n            this._queue.length = 0;\r\n            if (!instruction) {\r\n                // ts complains about inconsistent returns without void 0\r\n                return void 0;\r\n            }\r\n            this.isNavigating = true;\r\n            let navtracker = this.history.getState('NavigationTracker');\r\n            let currentNavTracker = this.currentNavigationTracker;\r\n            if (!navtracker && !currentNavTracker) {\r\n                this.isNavigatingFirst = true;\r\n                this.isNavigatingNew = true;\r\n            }\r\n            else if (!navtracker) {\r\n                this.isNavigatingNew = true;\r\n            }\r\n            else if (!currentNavTracker) {\r\n                this.isNavigatingRefresh = true;\r\n            }\r\n            else if (currentNavTracker < navtracker) {\r\n                this.isNavigatingForward = true;\r\n            }\r\n            else if (currentNavTracker > navtracker) {\r\n                this.isNavigatingBack = true;\r\n            }\r\n            if (!navtracker) {\r\n                navtracker = Date.now();\r\n                this.history.setState('NavigationTracker', navtracker);\r\n            }\r\n            this.currentNavigationTracker = navtracker;\r\n            instruction.previousInstruction = this.currentInstruction;\r\n            let maxInstructionCount = this.maxInstructionCount;\r\n            if (!instructionCount) {\r\n                this.events.publish(\"router:navigation:processing\" /* Processing */, { instruction });\r\n            }\r\n            else if (instructionCount === maxInstructionCount - 1) {\r\n                logger.error(`${instructionCount + 1} navigation instructions have been attempted without success. Restoring last known good location.`);\r\n                restorePreviousLocation(this);\r\n                return this._dequeueInstruction(instructionCount + 1);\r\n            }\r\n            else if (instructionCount > maxInstructionCount) {\r\n                throw new Error('Maximum navigation attempts exceeded. Giving up.');\r\n            }\r\n            let pipeline = this.pipelineProvider.createPipeline(!this.couldDeactivate);\r\n            return pipeline\r\n                .run(instruction)\r\n                .then(result => processResult(instruction, result, instructionCount, this))\r\n                .catch(error => {\r\n                return { output: error instanceof Error ? error : new Error(error) };\r\n            })\r\n                .then(result => resolveInstruction(instruction, result, !!instructionCount, this));\r\n        });\r\n    }\r\n    /**@internal */\r\n    _findViewModel(viewPort) {\r\n        if (this.container.viewModel) {\r\n            return this.container.viewModel;\r\n        }\r\n        if (viewPort.container) {\r\n            let container = viewPort.container;\r\n            while (container) {\r\n                if (container.viewModel) {\r\n                    this.container.viewModel = container.viewModel;\r\n                    return container.viewModel;\r\n                }\r\n                container = container.parent;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nconst processResult = (instruction, result, instructionCount, router) => {\r\n    if (!(result && 'completed' in result && 'output' in result)) {\r\n        result = result || {};\r\n        result.output = new Error(`Expected router pipeline to return a navigation result, but got [${JSON.stringify(result)}] instead.`);\r\n    }\r\n    let finalResult = null;\r\n    let navigationCommandResult = null;\r\n    if (isNavigationCommand(result.output)) {\r\n        navigationCommandResult = result.output.navigate(router);\r\n    }\r\n    else {\r\n        finalResult = result;\r\n        if (!result.completed) {\r\n            if (result.output instanceof Error) {\r\n                logger.error(result.output.toString());\r\n            }\r\n            restorePreviousLocation(router);\r\n        }\r\n    }\r\n    return Promise.resolve(navigationCommandResult)\r\n        .then(_ => router._dequeueInstruction(instructionCount + 1))\r\n        .then(innerResult => finalResult || innerResult || result);\r\n};\r\nconst resolveInstruction = (instruction, result, isInnerInstruction, router) => {\r\n    instruction.resolve(result);\r\n    let eventAggregator = router.events;\r\n    let eventArgs = { instruction, result };\r\n    if (!isInnerInstruction) {\r\n        router.isNavigating = false;\r\n        router.isExplicitNavigation = false;\r\n        router.isExplicitNavigationBack = false;\r\n        router.isNavigatingFirst = false;\r\n        router.isNavigatingNew = false;\r\n        router.isNavigatingRefresh = false;\r\n        router.isNavigatingForward = false;\r\n        router.isNavigatingBack = false;\r\n        router.couldDeactivate = false;\r\n        let eventName;\r\n        if (result.output instanceof Error) {\r\n            eventName = \"router:navigation:error\" /* Error */;\r\n        }\r\n        else if (!result.completed) {\r\n            eventName = \"router:navigation:canceled\" /* Canceled */;\r\n        }\r\n        else {\r\n            let queryString = instruction.queryString ? ('?' + instruction.queryString) : '';\r\n            router.history.previousLocation = instruction.fragment + queryString;\r\n            eventName = \"router:navigation:success\" /* Success */;\r\n        }\r\n        eventAggregator.publish(eventName, eventArgs);\r\n        eventAggregator.publish(\"router:navigation:complete\" /* Complete */, eventArgs);\r\n    }\r\n    else {\r\n        eventAggregator.publish(\"router:navigation:child:complete\" /* ChildComplete */, eventArgs);\r\n    }\r\n    return result;\r\n};\r\nconst restorePreviousLocation = (router) => {\r\n    let previousLocation = router.history.previousLocation;\r\n    if (previousLocation) {\r\n        router.navigate(previousLocation, { trigger: false, replace: true });\r\n    }\r\n    else if (router.fallbackRoute) {\r\n        router.navigate(router.fallbackRoute, { trigger: true, replace: true });\r\n    }\r\n    else {\r\n        logger.error('Router navigation failed, and no previous location or fallbackRoute could be restored.');\r\n    }\r\n};\n\n/**\r\n* The status of a Pipeline.\r\n*/\r\nvar PipelineStatus;\r\n(function (PipelineStatus) {\r\n    PipelineStatus[\"Completed\"] = \"completed\";\r\n    PipelineStatus[\"Canceled\"] = \"canceled\";\r\n    PipelineStatus[\"Rejected\"] = \"rejected\";\r\n    PipelineStatus[\"Running\"] = \"running\";\r\n})(PipelineStatus || (PipelineStatus = {}));\n\n/**\r\n * A list of known router events used by the Aurelia router\r\n * to signal the pipeline has come to a certain state\r\n */\r\n// const enum is preserved in tsconfig\r\nvar RouterEvent;\r\n(function (RouterEvent) {\r\n    RouterEvent[\"Processing\"] = \"router:navigation:processing\";\r\n    RouterEvent[\"Error\"] = \"router:navigation:error\";\r\n    RouterEvent[\"Canceled\"] = \"router:navigation:canceled\";\r\n    RouterEvent[\"Complete\"] = \"router:navigation:complete\";\r\n    RouterEvent[\"Success\"] = \"router:navigation:success\";\r\n    RouterEvent[\"ChildComplete\"] = \"router:navigation:child:complete\";\r\n})(RouterEvent || (RouterEvent = {}));\n\n/**\r\n * Available pipeline slot names to insert interceptor into router pipeline\r\n */\r\n// const enum is preserved in tsconfig\r\nvar PipelineSlotName;\r\n(function (PipelineSlotName) {\r\n    /**\r\n     * Authorization slot. Invoked early in the pipeline,\r\n     * before `canActivate` hook of incoming route\r\n     */\r\n    PipelineSlotName[\"Authorize\"] = \"authorize\";\r\n    /**\r\n     * Pre-activation slot. Invoked early in the pipeline,\r\n     * Invoked timing:\r\n     *   - after Authorization slot\r\n     *   - after canActivate hook on new view model\r\n     *   - before deactivate hook on old view model\r\n     *   - before activate hook on new view model\r\n     */\r\n    PipelineSlotName[\"PreActivate\"] = \"preActivate\";\r\n    /**\r\n     * Pre-render slot. Invoked later in the pipeline\r\n     * Invokcation timing:\r\n     *   - after activate hook on new view model\r\n     *   - before commit step on new navigation instruction\r\n     */\r\n    PipelineSlotName[\"PreRender\"] = \"preRender\";\r\n    /**\r\n     * Post-render slot. Invoked last in the pipeline\r\n     */\r\n    PipelineSlotName[\"PostRender\"] = \"postRender\";\r\n})(PipelineSlotName || (PipelineSlotName = {}));\n\nexport { ActivateNextStep, AppRouter, BuildNavigationPlanStep, CanActivateNextStep, CanDeactivatePreviousStep, CommitChangesStep, DeactivatePreviousStep, LoadRouteStep, NavModel, NavigationInstruction, Pipeline, PipelineProvider, PipelineSlotName, PipelineStatus, Redirect, RedirectToRoute, RouteLoader, Router, RouterConfiguration, RouterEvent, activationStrategy, isNavigationCommand };\n//# sourceMappingURL=aurelia-router.js.map\n","import { DOM, FEATURE } from 'aurelia-pal';\n\nconst stackSeparator = '\\nEnqueued in TaskQueue by:\\n';\nconst microStackSeparator = '\\nEnqueued in MicroTaskQueue by:\\n';\n\nfunction makeRequestFlushFromMutationObserver(flush) {\n  let observer = DOM.createMutationObserver(flush);\n  let val = 'a';\n  let node = DOM.createTextNode('a');\n  let values = Object.create(null);\n  values.a = 'b';\n  values.b = 'a';\n  observer.observe(node, { characterData: true });\n  return function requestFlush() {\n    node.data = val = values[val];\n  };\n}\n\nfunction makeRequestFlushFromTimer(flush) {\n  return function requestFlush() {\n    let timeoutHandle = setTimeout(handleFlushTimer, 0);\n\n    let intervalHandle = setInterval(handleFlushTimer, 50);\n    function handleFlushTimer() {\n      clearTimeout(timeoutHandle);\n      clearInterval(intervalHandle);\n      flush();\n    }\n  };\n}\n\nfunction onError(error, task, longStacks) {\n  if (longStacks && task.stack && typeof error === 'object' && error !== null) {\n    error.stack = filterFlushStack(error.stack) + task.stack;\n  }\n\n  if ('onError' in task) {\n    task.onError(error);\n  } else {\n    setTimeout(() => {\n      throw error;\n    }, 0);\n  }\n}\n\nexport let TaskQueue = class TaskQueue {\n  constructor() {\n    this.flushing = false;\n    this.longStacks = false;\n\n    this.microTaskQueue = [];\n    this.microTaskQueueCapacity = 1024;\n    this.taskQueue = [];\n\n    if (FEATURE.mutationObserver) {\n      this.requestFlushMicroTaskQueue = makeRequestFlushFromMutationObserver(() => this.flushMicroTaskQueue());\n    } else {\n      this.requestFlushMicroTaskQueue = makeRequestFlushFromTimer(() => this.flushMicroTaskQueue());\n    }\n\n    this.requestFlushTaskQueue = makeRequestFlushFromTimer(() => this.flushTaskQueue());\n  }\n\n  _flushQueue(queue, capacity) {\n    let index = 0;\n    let task;\n\n    try {\n      this.flushing = true;\n      while (index < queue.length) {\n        task = queue[index];\n        if (this.longStacks) {\n          this.stack = typeof task.stack === 'string' ? task.stack : undefined;\n        }\n        task.call();\n        index++;\n\n        if (index > capacity) {\n          for (let scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n            queue[scan] = queue[scan + index];\n          }\n\n          queue.length -= index;\n          index = 0;\n        }\n      }\n    } catch (error) {\n      onError(error, task, this.longStacks);\n    } finally {\n      this.flushing = false;\n    }\n  }\n\n  queueMicroTask(task) {\n    if (this.microTaskQueue.length < 1) {\n      this.requestFlushMicroTaskQueue();\n    }\n\n    if (this.longStacks) {\n      task.stack = this.prepareQueueStack(microStackSeparator);\n    }\n\n    this.microTaskQueue.push(task);\n  }\n\n  queueTask(task) {\n    if (this.taskQueue.length < 1) {\n      this.requestFlushTaskQueue();\n    }\n\n    if (this.longStacks) {\n      task.stack = this.prepareQueueStack(stackSeparator);\n    }\n\n    this.taskQueue.push(task);\n  }\n\n  flushTaskQueue() {\n    let queue = this.taskQueue;\n    this.taskQueue = [];\n    this._flushQueue(queue, Number.MAX_VALUE);\n  }\n\n  flushMicroTaskQueue() {\n    let queue = this.microTaskQueue;\n    this._flushQueue(queue, this.microTaskQueueCapacity);\n    queue.length = 0;\n  }\n\n  prepareQueueStack(separator) {\n    let stack = separator + filterQueueStack(captureStack());\n\n    if (typeof this.stack === 'string') {\n      stack = filterFlushStack(stack) + this.stack;\n    }\n\n    return stack;\n  }\n};\n\nfunction captureStack() {\n  let error = new Error();\n\n  if (error.stack) {\n    return error.stack;\n  }\n\n  try {\n    throw error;\n  } catch (e) {\n    return e.stack;\n  }\n}\n\nfunction filterQueueStack(stack) {\n  return stack.replace(/^[\\s\\S]*?\\bqueue(Micro)?Task\\b[^\\n]*\\n/, '');\n}\n\nfunction filterFlushStack(stack) {\n  let index = stack.lastIndexOf('flushMicroTaskQueue');\n\n  if (index < 0) {\n    index = stack.lastIndexOf('flushTaskQueue');\n    if (index < 0) {\n      return stack;\n    }\n  }\n\n  index = stack.lastIndexOf('\\n', index);\n\n  return index < 0 ? stack : stack.substr(0, index);\n}","var _class, _temp, _class2, _temp2, _dec, _class3, _dec2, _class4, _dec3, _class5, _dec4, _class6, _dec5, _class7, _dec6, _class8, _class9, _temp3, _class10, _temp4, _class12, _class14, _temp5, _dec7, _class15, _dec8, _class16, _dec9, _class17;\n\nimport * as LogManager from 'aurelia-logging';\nimport { metadata, Origin, protocol } from 'aurelia-metadata';\nimport { DOM, PLATFORM, FEATURE } from 'aurelia-pal';\nimport { TemplateRegistryEntry, Loader } from 'aurelia-loader';\nimport { relativeToFile } from 'aurelia-path';\nimport { Scope, Expression, ValueConverterResource, BindingBehaviorResource, camelCase, Binding, createOverrideContext, subscriberCollection, bindingMode, ObserverLocator, EventManager } from 'aurelia-binding';\nimport { Container, resolver, inject } from 'aurelia-dependency-injection';\nimport { TaskQueue } from 'aurelia-task-queue';\n\nexport const animationEvent = {\n  enterBegin: 'animation:enter:begin',\n  enterActive: 'animation:enter:active',\n  enterDone: 'animation:enter:done',\n  enterTimeout: 'animation:enter:timeout',\n\n  leaveBegin: 'animation:leave:begin',\n  leaveActive: 'animation:leave:active',\n  leaveDone: 'animation:leave:done',\n  leaveTimeout: 'animation:leave:timeout',\n\n  staggerNext: 'animation:stagger:next',\n\n  removeClassBegin: 'animation:remove-class:begin',\n  removeClassActive: 'animation:remove-class:active',\n  removeClassDone: 'animation:remove-class:done',\n  removeClassTimeout: 'animation:remove-class:timeout',\n\n  addClassBegin: 'animation:add-class:begin',\n  addClassActive: 'animation:add-class:active',\n  addClassDone: 'animation:add-class:done',\n  addClassTimeout: 'animation:add-class:timeout',\n\n  animateBegin: 'animation:animate:begin',\n  animateActive: 'animation:animate:active',\n  animateDone: 'animation:animate:done',\n  animateTimeout: 'animation:animate:timeout',\n\n  sequenceBegin: 'animation:sequence:begin',\n  sequenceDone: 'animation:sequence:done'\n};\n\nexport let Animator = class Animator {\n  enter(element) {\n    return Promise.resolve(false);\n  }\n\n  leave(element) {\n    return Promise.resolve(false);\n  }\n\n  removeClass(element, className) {\n    element.classList.remove(className);\n    return Promise.resolve(false);\n  }\n\n  addClass(element, className) {\n    element.classList.add(className);\n    return Promise.resolve(false);\n  }\n\n  animate(element, className) {\n    return Promise.resolve(false);\n  }\n\n  runSequence(animations) {}\n\n  registerEffect(effectName, properties) {}\n\n  unregisterEffect(effectName) {}\n};\n\nexport let CompositionTransactionNotifier = class CompositionTransactionNotifier {\n  constructor(owner) {\n    this.owner = owner;\n    this.owner._compositionCount++;\n  }\n\n  done() {\n    this.owner._compositionCount--;\n    this.owner._tryCompleteTransaction();\n  }\n};\n\nexport let CompositionTransactionOwnershipToken = class CompositionTransactionOwnershipToken {\n  constructor(owner) {\n    this.owner = owner;\n    this.owner._ownershipToken = this;\n    this.thenable = this._createThenable();\n  }\n\n  waitForCompositionComplete() {\n    this.owner._tryCompleteTransaction();\n    return this.thenable;\n  }\n\n  resolve() {\n    this._resolveCallback();\n  }\n\n  _createThenable() {\n    return new Promise((resolve, reject) => {\n      this._resolveCallback = resolve;\n    });\n  }\n};\n\nexport let CompositionTransaction = class CompositionTransaction {\n  constructor() {\n    this._ownershipToken = null;\n    this._compositionCount = 0;\n  }\n\n  tryCapture() {\n    return this._ownershipToken === null ? new CompositionTransactionOwnershipToken(this) : null;\n  }\n\n  enlist() {\n    return new CompositionTransactionNotifier(this);\n  }\n\n  _tryCompleteTransaction() {\n    if (this._compositionCount <= 0) {\n      this._compositionCount = 0;\n\n      if (this._ownershipToken !== null) {\n        let token = this._ownershipToken;\n        this._ownershipToken = null;\n        token.resolve();\n      }\n    }\n  }\n};\n\nconst capitalMatcher = /([A-Z])/g;\n\nfunction addHyphenAndLower(char) {\n  return '-' + char.toLowerCase();\n}\n\nexport function _hyphenate(name) {\n  return (name.charAt(0).toLowerCase() + name.slice(1)).replace(capitalMatcher, addHyphenAndLower);\n}\n\nexport function _isAllWhitespace(node) {\n  return !(node.auInterpolationTarget || /[^\\t\\n\\r ]/.test(node.textContent));\n}\n\nexport let ViewEngineHooksResource = class ViewEngineHooksResource {\n  constructor() {}\n\n  initialize(container, target) {\n    this.instance = container.get(target);\n  }\n\n  register(registry, name) {\n    registry.registerViewEngineHooks(this.instance);\n  }\n\n  load(container, target) {}\n\n  static convention(name) {\n    if (name.endsWith('ViewEngineHooks')) {\n      return new ViewEngineHooksResource();\n    }\n  }\n};\n\nexport function viewEngineHooks(target) {\n  let deco = function (t) {\n    metadata.define(metadata.resource, new ViewEngineHooksResource(), t);\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport let ElementEvents = (_temp = _class = class ElementEvents {\n\n  constructor(element) {\n    this.element = element;\n    this.subscriptions = {};\n  }\n\n  _enqueueHandler(handler) {\n    this.subscriptions[handler.eventName] = this.subscriptions[handler.eventName] || [];\n    this.subscriptions[handler.eventName].push(handler);\n  }\n\n  _dequeueHandler(handler) {\n    let index;\n    let subscriptions = this.subscriptions[handler.eventName];\n    if (subscriptions) {\n      index = subscriptions.indexOf(handler);\n      if (index > -1) {\n        subscriptions.splice(index, 1);\n      }\n    }\n    return handler;\n  }\n\n  publish(eventName, detail = {}, bubbles = true, cancelable = true) {\n    let event = DOM.createCustomEvent(eventName, { cancelable, bubbles, detail });\n    this.element.dispatchEvent(event);\n  }\n\n  subscribe(eventName, handler, captureOrOptions) {\n    if (typeof handler === 'function') {\n      if (captureOrOptions === undefined) {\n        captureOrOptions = ElementEvents.defaultListenerOptions;\n      }\n      const eventHandler = new EventHandlerImpl(this, eventName, handler, captureOrOptions, false);\n      return eventHandler;\n    }\n\n    return undefined;\n  }\n\n  subscribeOnce(eventName, handler, captureOrOptions) {\n    if (typeof handler === 'function') {\n      if (captureOrOptions === undefined) {\n        captureOrOptions = ElementEvents.defaultListenerOptions;\n      }\n      const eventHandler = new EventHandlerImpl(this, eventName, handler, captureOrOptions, true);\n      return eventHandler;\n    }\n\n    return undefined;\n  }\n\n  dispose(eventName) {\n    if (eventName && typeof eventName === 'string') {\n      let subscriptions = this.subscriptions[eventName];\n      if (subscriptions) {\n        while (subscriptions.length) {\n          let subscription = subscriptions.pop();\n          if (subscription) {\n            subscription.dispose();\n          }\n        }\n      }\n    } else {\n      this.disposeAll();\n    }\n  }\n\n  disposeAll() {\n    for (let key in this.subscriptions) {\n      this.dispose(key);\n    }\n  }\n}, _class.defaultListenerOptions = true, _temp);\n\nlet EventHandlerImpl = class EventHandlerImpl {\n  constructor(owner, eventName, handler, captureOrOptions, once) {\n    this.owner = owner;\n    this.eventName = eventName;\n    this.handler = handler;\n\n    this.capture = typeof captureOrOptions === 'boolean' ? captureOrOptions : captureOrOptions.capture;\n    this.bubbles = !this.capture;\n    this.captureOrOptions = captureOrOptions;\n    this.once = once;\n    owner.element.addEventListener(eventName, this, captureOrOptions);\n    owner._enqueueHandler(this);\n  }\n\n  handleEvent(e) {\n    const fn = this.handler;\n    fn(e);\n    if (this.once) {\n      this.dispose();\n    }\n  }\n\n  dispose() {\n    this.owner.element.removeEventListener(this.eventName, this, this.captureOrOptions);\n    this.owner._dequeueHandler(this);\n    this.owner = this.handler = null;\n  }\n};\n\nexport let ResourceLoadContext = class ResourceLoadContext {\n  constructor() {\n    this.dependencies = {};\n  }\n\n  addDependency(url) {\n    this.dependencies[url] = true;\n  }\n\n  hasDependency(url) {\n    return url in this.dependencies;\n  }\n};\n\nexport let ViewCompileInstruction = class ViewCompileInstruction {\n  constructor(targetShadowDOM = false, compileSurrogate = false) {\n    this.targetShadowDOM = targetShadowDOM;\n    this.compileSurrogate = compileSurrogate;\n    this.associatedModuleId = null;\n  }\n};\n\nViewCompileInstruction.normal = new ViewCompileInstruction();\n\nexport let BehaviorInstruction = class BehaviorInstruction {\n  static enhance() {\n    let instruction = new BehaviorInstruction();\n    instruction.enhance = true;\n    return instruction;\n  }\n\n  static unitTest(type, attributes) {\n    let instruction = new BehaviorInstruction();\n    instruction.type = type;\n    instruction.attributes = attributes || {};\n    return instruction;\n  }\n\n  static element(node, type) {\n    let instruction = new BehaviorInstruction();\n    instruction.type = type;\n    instruction.attributes = {};\n    instruction.anchorIsContainer = !(node.hasAttribute('containerless') || type.containerless);\n    instruction.initiatedByBehavior = true;\n    return instruction;\n  }\n\n  static attribute(attrName, type) {\n    let instruction = new BehaviorInstruction();\n    instruction.attrName = attrName;\n    instruction.type = type || null;\n    instruction.attributes = {};\n    return instruction;\n  }\n\n  static dynamic(host, viewModel, viewFactory) {\n    let instruction = new BehaviorInstruction();\n    instruction.host = host;\n    instruction.viewModel = viewModel;\n    instruction.viewFactory = viewFactory;\n    instruction.inheritBindingContext = true;\n    return instruction;\n  }\n};\n\nconst biProto = BehaviorInstruction.prototype;\nbiProto.initiatedByBehavior = false;\nbiProto.enhance = false;\nbiProto.partReplacements = null;\nbiProto.viewFactory = null;\nbiProto.originalAttrName = null;\nbiProto.skipContentProcessing = false;\nbiProto.contentFactory = null;\nbiProto.viewModel = null;\nbiProto.anchorIsContainer = false;\nbiProto.host = null;\nbiProto.attributes = null;\nbiProto.type = null;\nbiProto.attrName = null;\nbiProto.inheritBindingContext = false;\n\nBehaviorInstruction.normal = new BehaviorInstruction();\n\nexport let TargetInstruction = (_temp2 = _class2 = class TargetInstruction {\n  static shadowSlot(parentInjectorId) {\n    let instruction = new TargetInstruction();\n    instruction.parentInjectorId = parentInjectorId;\n    instruction.shadowSlot = true;\n    return instruction;\n  }\n\n  static contentExpression(expression) {\n    let instruction = new TargetInstruction();\n    instruction.contentExpression = expression;\n    return instruction;\n  }\n\n  static letElement(expressions) {\n    let instruction = new TargetInstruction();\n    instruction.expressions = expressions;\n    instruction.letElement = true;\n    return instruction;\n  }\n\n  static lifting(parentInjectorId, liftingInstruction) {\n    let instruction = new TargetInstruction();\n    instruction.parentInjectorId = parentInjectorId;\n    instruction.expressions = TargetInstruction.noExpressions;\n    instruction.behaviorInstructions = [liftingInstruction];\n    instruction.viewFactory = liftingInstruction.viewFactory;\n    instruction.providers = [liftingInstruction.type.target];\n    instruction.lifting = true;\n    return instruction;\n  }\n\n  static normal(injectorId, parentInjectorId, providers, behaviorInstructions, expressions, elementInstruction) {\n    let instruction = new TargetInstruction();\n    instruction.injectorId = injectorId;\n    instruction.parentInjectorId = parentInjectorId;\n    instruction.providers = providers;\n    instruction.behaviorInstructions = behaviorInstructions;\n    instruction.expressions = expressions;\n    instruction.anchorIsContainer = elementInstruction ? elementInstruction.anchorIsContainer : true;\n    instruction.elementInstruction = elementInstruction;\n    return instruction;\n  }\n\n  static surrogate(providers, behaviorInstructions, expressions, values) {\n    let instruction = new TargetInstruction();\n    instruction.expressions = expressions;\n    instruction.behaviorInstructions = behaviorInstructions;\n    instruction.providers = providers;\n    instruction.values = values;\n    return instruction;\n  }\n}, _class2.noExpressions = Object.freeze([]), _temp2);\n\nconst tiProto = TargetInstruction.prototype;\n\ntiProto.injectorId = null;\ntiProto.parentInjectorId = null;\n\ntiProto.shadowSlot = false;\ntiProto.slotName = null;\ntiProto.slotFallbackFactory = null;\n\ntiProto.contentExpression = null;\ntiProto.letElement = false;\n\ntiProto.expressions = null;\ntiProto.expressions = null;\ntiProto.providers = null;\n\ntiProto.viewFactory = null;\n\ntiProto.anchorIsContainer = false;\ntiProto.elementInstruction = null;\ntiProto.lifting = false;\n\ntiProto.values = null;\n\nexport const viewStrategy = protocol.create('aurelia:view-strategy', {\n  validate(target) {\n    if (!(typeof target.loadViewFactory === 'function')) {\n      return 'View strategies must implement: loadViewFactory(viewEngine: ViewEngine, compileInstruction: ViewCompileInstruction, loadContext?: ResourceLoadContext): Promise<ViewFactory>';\n    }\n\n    return true;\n  },\n  compose(target) {\n    if (!(typeof target.makeRelativeTo === 'function')) {\n      target.makeRelativeTo = PLATFORM.noop;\n    }\n  }\n});\n\nexport let RelativeViewStrategy = (_dec = viewStrategy(), _dec(_class3 = class RelativeViewStrategy {\n  constructor(path) {\n    this.path = path;\n    this.absolutePath = null;\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    if (this.absolutePath === null && this.moduleId) {\n      this.absolutePath = relativeToFile(this.path, this.moduleId);\n    }\n\n    compileInstruction.associatedModuleId = this.moduleId;\n    return viewEngine.loadViewFactory(this.absolutePath || this.path, compileInstruction, loadContext, target);\n  }\n\n  makeRelativeTo(file) {\n    if (this.absolutePath === null) {\n      this.absolutePath = relativeToFile(this.path, file);\n    }\n  }\n}) || _class3);\n\nexport let ConventionalViewStrategy = (_dec2 = viewStrategy(), _dec2(_class4 = class ConventionalViewStrategy {\n  constructor(viewLocator, origin) {\n    this.moduleId = origin.moduleId;\n    this.viewUrl = viewLocator.convertOriginToViewUrl(origin);\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    compileInstruction.associatedModuleId = this.moduleId;\n    return viewEngine.loadViewFactory(this.viewUrl, compileInstruction, loadContext, target);\n  }\n}) || _class4);\n\nexport let NoViewStrategy = (_dec3 = viewStrategy(), _dec3(_class5 = class NoViewStrategy {\n  constructor(dependencies, dependencyBaseUrl) {\n    this.dependencies = dependencies || null;\n    this.dependencyBaseUrl = dependencyBaseUrl || '';\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    let entry = this.entry;\n    let dependencies = this.dependencies;\n\n    if (entry && entry.factoryIsReady) {\n      return Promise.resolve(null);\n    }\n\n    this.entry = entry = new TemplateRegistryEntry(this.moduleId || this.dependencyBaseUrl);\n\n    entry.dependencies = [];\n    entry.templateIsLoaded = true;\n\n    if (dependencies !== null) {\n      for (let i = 0, ii = dependencies.length; i < ii; ++i) {\n        let current = dependencies[i];\n\n        if (typeof current === 'string' || typeof current === 'function') {\n          entry.addDependency(current);\n        } else {\n          entry.addDependency(current.from, current.as);\n        }\n      }\n    }\n\n    compileInstruction.associatedModuleId = this.moduleId;\n\n    return viewEngine.loadViewFactory(entry, compileInstruction, loadContext, target);\n  }\n}) || _class5);\n\nexport let TemplateRegistryViewStrategy = (_dec4 = viewStrategy(), _dec4(_class6 = class TemplateRegistryViewStrategy {\n  constructor(moduleId, entry) {\n    this.moduleId = moduleId;\n    this.entry = entry;\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    let entry = this.entry;\n\n    if (entry.factoryIsReady) {\n      return Promise.resolve(entry.factory);\n    }\n\n    compileInstruction.associatedModuleId = this.moduleId;\n    return viewEngine.loadViewFactory(entry, compileInstruction, loadContext, target);\n  }\n}) || _class6);\n\nexport let InlineViewStrategy = (_dec5 = viewStrategy(), _dec5(_class7 = class InlineViewStrategy {\n  constructor(markup, dependencies, dependencyBaseUrl) {\n    this.markup = markup;\n    this.dependencies = dependencies || null;\n    this.dependencyBaseUrl = dependencyBaseUrl || '';\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    let entry = this.entry;\n    let dependencies = this.dependencies;\n\n    if (entry && entry.factoryIsReady) {\n      return Promise.resolve(entry.factory);\n    }\n\n    this.entry = entry = new TemplateRegistryEntry(this.moduleId || this.dependencyBaseUrl);\n    entry.template = DOM.createTemplateFromMarkup(this.markup);\n\n    if (dependencies !== null) {\n      for (let i = 0, ii = dependencies.length; i < ii; ++i) {\n        let current = dependencies[i];\n\n        if (typeof current === 'string' || typeof current === 'function') {\n          entry.addDependency(current);\n        } else {\n          entry.addDependency(current.from, current.as);\n        }\n      }\n    }\n\n    compileInstruction.associatedModuleId = this.moduleId;\n    return viewEngine.loadViewFactory(entry, compileInstruction, loadContext, target);\n  }\n}) || _class7);\n\nexport let StaticViewStrategy = (_dec6 = viewStrategy(), _dec6(_class8 = class StaticViewStrategy {\n\n  constructor(config) {\n    if (typeof config === 'string' || config instanceof DOM.Element && config.tagName === 'TEMPLATE') {\n      config = {\n        template: config\n      };\n    }\n    this.template = config.template;\n    this.dependencies = config.dependencies || [];\n    this.factoryIsReady = false;\n    this.onReady = null;\n    this.moduleId = 'undefined';\n  }\n\n  loadViewFactory(viewEngine, compileInstruction, loadContext, target) {\n    if (this.factoryIsReady) {\n      return Promise.resolve(this.factory);\n    }\n    let deps = this.dependencies;\n    deps = typeof deps === 'function' ? deps() : deps;\n    deps = deps ? deps : [];\n    deps = Array.isArray(deps) ? deps : [deps];\n\n    return Promise.all(deps).then(dependencies => {\n      const container = viewEngine.container;\n      const appResources = viewEngine.appResources;\n      const viewCompiler = viewEngine.viewCompiler;\n      const viewResources = new ViewResources(appResources);\n\n      let resource;\n      let elDeps = [];\n\n      if (target) {\n        viewResources.autoRegister(container, target);\n      }\n\n      for (let dep of dependencies) {\n        if (typeof dep === 'function') {\n          resource = viewResources.autoRegister(container, dep);\n          if (resource.elementName !== null) {\n            elDeps.push(resource);\n          }\n        } else if (dep && typeof dep === 'object') {\n          for (let key in dep) {\n            let exported = dep[key];\n            if (typeof exported === 'function') {\n              resource = viewResources.autoRegister(container, exported);\n              if (resource.elementName !== null) {\n                elDeps.push(resource);\n              }\n            }\n          }\n        } else {\n          throw new Error(`dependency neither function nor object. Received: \"${typeof dep}\"`);\n        }\n      }\n\n      return Promise.all(elDeps.map(el => el.load(container, el.target))).then(() => {\n        const factory = this.template !== null ? viewCompiler.compile(this.template, viewResources, compileInstruction) : null;\n        this.factoryIsReady = true;\n        this.factory = factory;\n        return factory;\n      });\n    });\n  }\n}) || _class8);\n\nexport let ViewLocator = (_temp3 = _class9 = class ViewLocator {\n  getViewStrategy(value) {\n    if (!value) {\n      return null;\n    }\n\n    if (typeof value === 'object' && 'getViewStrategy' in value) {\n      let origin = Origin.get(value.constructor);\n\n      value = value.getViewStrategy();\n\n      if (typeof value === 'string') {\n        value = new RelativeViewStrategy(value);\n      }\n\n      viewStrategy.assert(value);\n\n      if (origin.moduleId) {\n        value.makeRelativeTo(origin.moduleId);\n      }\n\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      value = new RelativeViewStrategy(value);\n    }\n\n    if (viewStrategy.validate(value)) {\n      return value;\n    }\n\n    if (typeof value !== 'function') {\n      value = value.constructor;\n    }\n\n    if ('$view' in value) {\n      let c = value.$view;\n      let view;\n      c = typeof c === 'function' ? c.call(value) : c;\n      if (c === null) {\n        view = new NoViewStrategy();\n      } else {\n        view = c instanceof StaticViewStrategy ? c : new StaticViewStrategy(c);\n      }\n      metadata.define(ViewLocator.viewStrategyMetadataKey, view, value);\n      return view;\n    }\n\n    let origin = Origin.get(value);\n    let strategy = metadata.get(ViewLocator.viewStrategyMetadataKey, value);\n\n    if (!strategy) {\n      if (!origin.moduleId) {\n        throw new Error('Cannot determine default view strategy for object.', value);\n      }\n\n      strategy = this.createFallbackViewStrategy(origin);\n    } else if (origin.moduleId) {\n      strategy.moduleId = origin.moduleId;\n    }\n\n    return strategy;\n  }\n\n  createFallbackViewStrategy(origin) {\n    return new ConventionalViewStrategy(this, origin);\n  }\n\n  convertOriginToViewUrl(origin) {\n    let moduleId = origin.moduleId;\n    let id = moduleId.endsWith('.js') || moduleId.endsWith('.ts') ? moduleId.substring(0, moduleId.length - 3) : moduleId;\n    return id + '.html';\n  }\n}, _class9.viewStrategyMetadataKey = 'aurelia:view-strategy', _temp3);\n\nfunction mi(name) {\n  throw new Error(`BindingLanguage must implement ${name}().`);\n}\n\nexport let BindingLanguage = class BindingLanguage {\n  inspectAttribute(resources, elementName, attrName, attrValue) {\n    mi('inspectAttribute');\n  }\n\n  createAttributeInstruction(resources, element, info, existingInstruction) {\n    mi('createAttributeInstruction');\n  }\n\n  createLetExpressions(resources, element) {\n    mi('createLetExpressions');\n  }\n\n  inspectTextContent(resources, value) {\n    mi('inspectTextContent');\n  }\n};\n\nlet noNodes = Object.freeze([]);\n\nexport let SlotCustomAttribute = class SlotCustomAttribute {\n  static inject() {\n    return [DOM.Element];\n  }\n\n  constructor(element) {\n    this.element = element;\n    this.element.auSlotAttribute = this;\n  }\n\n  valueChanged(newValue, oldValue) {}\n};\n\nexport let PassThroughSlot = class PassThroughSlot {\n  constructor(anchor, name, destinationName, fallbackFactory) {\n    this.anchor = anchor;\n    this.anchor.viewSlot = this;\n    this.name = name;\n    this.destinationName = destinationName;\n    this.fallbackFactory = fallbackFactory;\n    this.destinationSlot = null;\n\n    this.projections = 0;\n\n    this.contentView = null;\n\n    let attr = new SlotCustomAttribute(this.anchor);\n    attr.value = this.destinationName;\n  }\n\n  get needsFallbackRendering() {\n    return this.fallbackFactory && this.projections === 0;\n  }\n\n  renderFallbackContent(view, nodes, projectionSource, index) {\n    if (this.contentView === null) {\n      this.contentView = this.fallbackFactory.create(this.ownerView.container);\n      this.contentView.bind(this.ownerView.bindingContext, this.ownerView.overrideContext);\n\n      let slots = Object.create(null);\n      slots[this.destinationSlot.name] = this.destinationSlot;\n\n      ShadowDOM.distributeView(this.contentView, slots, projectionSource, index, this.destinationSlot.name);\n    }\n  }\n\n  passThroughTo(destinationSlot) {\n    this.destinationSlot = destinationSlot;\n  }\n\n  addNode(view, node, projectionSource, index) {\n    if (this.contentView !== null) {\n      this.contentView.removeNodes();\n      this.contentView.detached();\n      this.contentView.unbind();\n      this.contentView = null;\n    }\n\n    if (node.viewSlot instanceof PassThroughSlot) {\n      node.viewSlot.passThroughTo(this);\n      return;\n    }\n\n    this.projections++;\n    this.destinationSlot.addNode(view, node, projectionSource, index);\n  }\n\n  removeView(view, projectionSource) {\n    this.projections--;\n    this.destinationSlot.removeView(view, projectionSource);\n\n    if (this.needsFallbackRendering) {\n      this.renderFallbackContent(null, noNodes, projectionSource);\n    }\n  }\n\n  removeAll(projectionSource) {\n    this.projections = 0;\n    this.destinationSlot.removeAll(projectionSource);\n\n    if (this.needsFallbackRendering) {\n      this.renderFallbackContent(null, noNodes, projectionSource);\n    }\n  }\n\n  projectFrom(view, projectionSource) {\n    this.destinationSlot.projectFrom(view, projectionSource);\n  }\n\n  created(ownerView) {\n    this.ownerView = ownerView;\n  }\n\n  bind(view) {\n    if (this.contentView) {\n      this.contentView.bind(view.bindingContext, view.overrideContext);\n    }\n  }\n\n  attached() {\n    if (this.contentView) {\n      this.contentView.attached();\n    }\n  }\n\n  detached() {\n    if (this.contentView) {\n      this.contentView.detached();\n    }\n  }\n\n  unbind() {\n    if (this.contentView) {\n      this.contentView.unbind();\n    }\n  }\n};\n\nexport let ShadowSlot = class ShadowSlot {\n  constructor(anchor, name, fallbackFactory) {\n    this.anchor = anchor;\n    this.anchor.isContentProjectionSource = true;\n    this.anchor.viewSlot = this;\n    this.name = name;\n    this.fallbackFactory = fallbackFactory;\n    this.contentView = null;\n    this.projections = 0;\n\n    this.children = [];\n    this.projectFromAnchors = null;\n    this.destinationSlots = null;\n  }\n\n  get needsFallbackRendering() {\n    return this.fallbackFactory && this.projections === 0;\n  }\n\n  addNode(view, node, projectionSource, index, destination) {\n    if (this.contentView !== null) {\n      this.contentView.removeNodes();\n      this.contentView.detached();\n      this.contentView.unbind();\n      this.contentView = null;\n    }\n\n    if (node.viewSlot instanceof PassThroughSlot) {\n      node.viewSlot.passThroughTo(this);\n      return;\n    }\n\n    if (this.destinationSlots !== null) {\n      ShadowDOM.distributeNodes(view, [node], this.destinationSlots, this, index);\n    } else {\n      node.auOwnerView = view;\n      node.auProjectionSource = projectionSource;\n      node.auAssignedSlot = this;\n\n      let anchor = this._findAnchor(view, node, projectionSource, index);\n      let parent = anchor.parentNode;\n\n      parent.insertBefore(node, anchor);\n      this.children.push(node);\n      this.projections++;\n    }\n  }\n\n  removeView(view, projectionSource) {\n    if (this.destinationSlots !== null) {\n      ShadowDOM.undistributeView(view, this.destinationSlots, this);\n    } else if (this.contentView && this.contentView.hasSlots) {\n      ShadowDOM.undistributeView(view, this.contentView.slots, projectionSource);\n    } else {\n      let found = this.children.find(x => x.auSlotProjectFrom === projectionSource);\n      if (found) {\n        let children = found.auProjectionChildren;\n        let ownChildren = this.children;\n\n        for (let i = 0, ii = children.length; i < ii; ++i) {\n          let child = children[i];\n\n          if (child.auOwnerView === view) {\n            children.splice(i, 1);\n            view.fragment.appendChild(child);\n            i--;ii--;\n\n            this.projections--;\n            let idx = ownChildren.indexOf(child);\n            if (idx > -1) {\n              ownChildren.splice(idx, 1);\n            }\n          }\n        }\n\n        if (this.needsFallbackRendering) {\n          this.renderFallbackContent(view, noNodes, projectionSource);\n        }\n      }\n    }\n  }\n\n  removeAll(projectionSource) {\n    if (this.destinationSlots !== null) {\n      ShadowDOM.undistributeAll(this.destinationSlots, this);\n    } else if (this.contentView && this.contentView.hasSlots) {\n      ShadowDOM.undistributeAll(this.contentView.slots, projectionSource);\n    } else {\n      let found = this.children.find(x => x.auSlotProjectFrom === projectionSource);\n\n      if (found) {\n        let children = found.auProjectionChildren;\n        let ownChildren = this.children;\n\n        for (let i = 0, ii = children.length; i < ii; ++i) {\n          let child = children[i];\n          child.auOwnerView.fragment.appendChild(child);\n\n          this.projections--;\n          let idx = ownChildren.indexOf(child);\n          if (idx > -1) {\n            ownChildren.splice(idx, 1);\n          }\n        }\n\n        found.auProjectionChildren = [];\n\n        if (this.needsFallbackRendering) {\n          this.renderFallbackContent(null, noNodes, projectionSource);\n        }\n      }\n    }\n  }\n\n  _findAnchor(view, node, projectionSource, index) {\n    if (projectionSource) {\n      let found = this.children.find(x => x.auSlotProjectFrom === projectionSource);\n      if (found) {\n        if (index !== undefined) {\n          let children = found.auProjectionChildren;\n          let viewIndex = -1;\n          let lastView;\n\n          for (let i = 0, ii = children.length; i < ii; ++i) {\n            let current = children[i];\n\n            if (current.auOwnerView !== lastView) {\n              viewIndex++;\n              lastView = current.auOwnerView;\n\n              if (viewIndex >= index && lastView !== view) {\n                children.splice(i, 0, node);\n                return current;\n              }\n            }\n          }\n        }\n\n        found.auProjectionChildren.push(node);\n        return found;\n      }\n    }\n\n    return this.anchor;\n  }\n\n  projectTo(slots) {\n    this.destinationSlots = slots;\n  }\n\n  projectFrom(view, projectionSource) {\n    let anchor = DOM.createComment('anchor');\n    let parent = this.anchor.parentNode;\n    anchor.auSlotProjectFrom = projectionSource;\n    anchor.auOwnerView = view;\n    anchor.auProjectionChildren = [];\n    parent.insertBefore(anchor, this.anchor);\n    this.children.push(anchor);\n\n    if (this.projectFromAnchors === null) {\n      this.projectFromAnchors = [];\n    }\n\n    this.projectFromAnchors.push(anchor);\n  }\n\n  renderFallbackContent(view, nodes, projectionSource, index) {\n    if (this.contentView === null) {\n      this.contentView = this.fallbackFactory.create(this.ownerView.container);\n      this.contentView.bind(this.ownerView.bindingContext, this.ownerView.overrideContext);\n      this.contentView.insertNodesBefore(this.anchor);\n    }\n\n    if (this.contentView.hasSlots) {\n      let slots = this.contentView.slots;\n      let projectFromAnchors = this.projectFromAnchors;\n\n      if (projectFromAnchors !== null) {\n        for (let slotName in slots) {\n          let slot = slots[slotName];\n\n          for (let i = 0, ii = projectFromAnchors.length; i < ii; ++i) {\n            let anchor = projectFromAnchors[i];\n            slot.projectFrom(anchor.auOwnerView, anchor.auSlotProjectFrom);\n          }\n        }\n      }\n\n      this.fallbackSlots = slots;\n      ShadowDOM.distributeNodes(view, nodes, slots, projectionSource, index);\n    }\n  }\n\n  created(ownerView) {\n    this.ownerView = ownerView;\n  }\n\n  bind(view) {\n    if (this.contentView) {\n      this.contentView.bind(view.bindingContext, view.overrideContext);\n    }\n  }\n\n  attached() {\n    if (this.contentView) {\n      this.contentView.attached();\n    }\n  }\n\n  detached() {\n    if (this.contentView) {\n      this.contentView.detached();\n    }\n  }\n\n  unbind() {\n    if (this.contentView) {\n      this.contentView.unbind();\n    }\n  }\n};\n\nexport let ShadowDOM = (_temp4 = _class10 = class ShadowDOM {\n\n  static getSlotName(node) {\n    if (node.auSlotAttribute === undefined) {\n      return ShadowDOM.defaultSlotKey;\n    }\n\n    return node.auSlotAttribute.value;\n  }\n\n  static distributeView(view, slots, projectionSource, index, destinationOverride) {\n    let nodes;\n\n    if (view === null) {\n      nodes = noNodes;\n    } else {\n      let childNodes = view.fragment.childNodes;\n      let ii = childNodes.length;\n      nodes = new Array(ii);\n\n      for (let i = 0; i < ii; ++i) {\n        nodes[i] = childNodes[i];\n      }\n    }\n\n    ShadowDOM.distributeNodes(view, nodes, slots, projectionSource, index, destinationOverride);\n  }\n\n  static undistributeView(view, slots, projectionSource) {\n    for (let slotName in slots) {\n      slots[slotName].removeView(view, projectionSource);\n    }\n  }\n\n  static undistributeAll(slots, projectionSource) {\n    for (let slotName in slots) {\n      slots[slotName].removeAll(projectionSource);\n    }\n  }\n\n  static distributeNodes(view, nodes, slots, projectionSource, index, destinationOverride) {\n    for (let i = 0, ii = nodes.length; i < ii; ++i) {\n      let currentNode = nodes[i];\n      let nodeType = currentNode.nodeType;\n\n      if (currentNode.isContentProjectionSource) {\n        currentNode.viewSlot.projectTo(slots);\n\n        for (let slotName in slots) {\n          slots[slotName].projectFrom(view, currentNode.viewSlot);\n        }\n\n        nodes.splice(i, 1);\n        ii--;i--;\n      } else if (nodeType === 1 || nodeType === 3 || currentNode.viewSlot instanceof PassThroughSlot) {\n        if (nodeType === 3 && _isAllWhitespace(currentNode)) {\n          nodes.splice(i, 1);\n          ii--;i--;\n        } else {\n          let found = slots[destinationOverride || ShadowDOM.getSlotName(currentNode)];\n\n          if (found) {\n            found.addNode(view, currentNode, projectionSource, index);\n            nodes.splice(i, 1);\n            ii--;i--;\n          }\n        }\n      } else {\n        nodes.splice(i, 1);\n        ii--;i--;\n      }\n    }\n\n    for (let slotName in slots) {\n      let slot = slots[slotName];\n\n      if (slot.needsFallbackRendering) {\n        slot.renderFallbackContent(view, nodes, projectionSource, index);\n      }\n    }\n  }\n}, _class10.defaultSlotKey = '__au-default-slot-key__', _temp4);\n\nfunction register(lookup, name, resource, type) {\n  if (!name) {\n    return;\n  }\n\n  let existing = lookup[name];\n  if (existing) {\n    if (existing !== resource) {\n      throw new Error(`Attempted to register ${type} when one with the same name already exists. Name: ${name}.`);\n    }\n\n    return;\n  }\n\n  lookup[name] = resource;\n}\n\nexport function validateBehaviorName(name, type) {\n  if (/[A-Z]/.test(name)) {\n    let newName = _hyphenate(name);\n    LogManager.getLogger('templating').warn(`'${name}' is not a valid ${type} name and has been converted to '${newName}'. Upper-case letters are not allowed because the DOM is not case-sensitive.`);\n    return newName;\n  }\n  return name;\n}\n\nconst conventionMark = '__au_resource__';\n\nexport let ViewResources = class ViewResources {\n  static convention(target, existing) {\n    let resource;\n\n    if (existing && conventionMark in existing) {\n      return existing;\n    }\n    if ('$resource' in target) {\n      let config = target.$resource;\n\n      if (typeof config === 'string') {\n        resource = existing || new HtmlBehaviorResource();\n        resource[conventionMark] = true;\n        if (!resource.elementName) {\n          resource.elementName = validateBehaviorName(config, 'custom element');\n        }\n      } else {\n        if (typeof config === 'function') {\n          config = config.call(target);\n        }\n        if (typeof config === 'string') {\n          config = { name: config };\n        }\n\n        config = Object.assign({}, config);\n\n        let resourceType = config.type || 'element';\n\n        let name = config.name;\n        switch (resourceType) {\n          case 'element':case 'attribute':\n            resource = existing || new HtmlBehaviorResource();\n            resource[conventionMark] = true;\n            if (resourceType === 'element') {\n              if (!resource.elementName) {\n                resource.elementName = name ? validateBehaviorName(name, 'custom element') : _hyphenate(target.name);\n              }\n            } else {\n              if (!resource.attributeName) {\n                resource.attributeName = name ? validateBehaviorName(name, 'custom attribute') : _hyphenate(target.name);\n              }\n            }\n            if ('templateController' in config) {\n              config.liftsContent = config.templateController;\n              delete config.templateController;\n            }\n            if ('defaultBindingMode' in config && resource.attributeDefaultBindingMode !== undefined) {\n              config.attributeDefaultBindingMode = config.defaultBindingMode;\n              delete config.defaultBindingMode;\n            }\n\n            delete config.name;\n\n            Object.assign(resource, config);\n            break;\n          case 'valueConverter':\n            resource = new ValueConverterResource(camelCase(name || target.name));\n            break;\n          case 'bindingBehavior':\n            resource = new BindingBehaviorResource(camelCase(name || target.name));\n            break;\n          case 'viewEngineHooks':\n            resource = new ViewEngineHooksResource();\n            break;\n        }\n      }\n\n      if (resource instanceof HtmlBehaviorResource) {\n        let bindables = typeof config === 'string' ? undefined : config.bindables;\n        let currentProps = resource.properties;\n        if (Array.isArray(bindables)) {\n          for (let i = 0, ii = bindables.length; ii > i; ++i) {\n            let prop = bindables[i];\n            if (!prop || typeof prop !== 'string' && !prop.name) {\n              throw new Error(`Invalid bindable property at \"${i}\" for class \"${target.name}\". Expected either a string or an object with \"name\" property.`);\n            }\n            let newProp = new BindableProperty(prop);\n\n            let existed = false;\n            for (let j = 0, jj = currentProps.length; jj > j; ++j) {\n              if (currentProps[j].name === newProp.name) {\n                existed = true;\n                break;\n              }\n            }\n            if (existed) {\n              continue;\n            }\n            newProp.registerWith(target, resource);\n          }\n        }\n      }\n    }\n    return resource;\n  }\n\n  constructor(parent, viewUrl) {\n    this.bindingLanguage = null;\n\n    this.parent = parent || null;\n    this.hasParent = this.parent !== null;\n    this.viewUrl = viewUrl || '';\n    this.lookupFunctions = {\n      valueConverters: this.getValueConverter.bind(this),\n      bindingBehaviors: this.getBindingBehavior.bind(this)\n    };\n    this.attributes = Object.create(null);\n    this.elements = Object.create(null);\n    this.valueConverters = Object.create(null);\n    this.bindingBehaviors = Object.create(null);\n    this.attributeMap = Object.create(null);\n    this.values = Object.create(null);\n    this.beforeCompile = this.afterCompile = this.beforeCreate = this.afterCreate = this.beforeBind = this.beforeUnbind = false;\n  }\n\n  _tryAddHook(obj, name) {\n    if (typeof obj[name] === 'function') {\n      let func = obj[name].bind(obj);\n      let counter = 1;\n      let callbackName;\n\n      while (this[callbackName = name + counter.toString()] !== undefined) {\n        counter++;\n      }\n\n      this[name] = true;\n      this[callbackName] = func;\n    }\n  }\n\n  _invokeHook(name, one, two, three, four) {\n    if (this.hasParent) {\n      this.parent._invokeHook(name, one, two, three, four);\n    }\n\n    if (this[name]) {\n      this[name + '1'](one, two, three, four);\n\n      let callbackName = name + '2';\n      if (this[callbackName]) {\n        this[callbackName](one, two, three, four);\n\n        callbackName = name + '3';\n        if (this[callbackName]) {\n          this[callbackName](one, two, three, four);\n\n          let counter = 4;\n\n          while (this[callbackName = name + counter.toString()] !== undefined) {\n            this[callbackName](one, two, three, four);\n            counter++;\n          }\n        }\n      }\n    }\n  }\n\n  registerViewEngineHooks(hooks) {\n    this._tryAddHook(hooks, 'beforeCompile');\n    this._tryAddHook(hooks, 'afterCompile');\n    this._tryAddHook(hooks, 'beforeCreate');\n    this._tryAddHook(hooks, 'afterCreate');\n    this._tryAddHook(hooks, 'beforeBind');\n    this._tryAddHook(hooks, 'beforeUnbind');\n  }\n\n  getBindingLanguage(bindingLanguageFallback) {\n    return this.bindingLanguage || (this.bindingLanguage = bindingLanguageFallback);\n  }\n\n  patchInParent(newParent) {\n    let originalParent = this.parent;\n\n    this.parent = newParent || null;\n    this.hasParent = this.parent !== null;\n\n    if (newParent.parent === null) {\n      newParent.parent = originalParent;\n      newParent.hasParent = originalParent !== null;\n    }\n  }\n\n  relativeToView(path) {\n    return relativeToFile(path, this.viewUrl);\n  }\n\n  registerElement(tagName, behavior) {\n    register(this.elements, tagName, behavior, 'an Element');\n  }\n\n  getElement(tagName) {\n    return this.elements[tagName] || (this.hasParent ? this.parent.getElement(tagName) : null);\n  }\n\n  mapAttribute(attribute) {\n    return this.attributeMap[attribute] || (this.hasParent ? this.parent.mapAttribute(attribute) : null);\n  }\n\n  registerAttribute(attribute, behavior, knownAttribute) {\n    this.attributeMap[attribute] = knownAttribute;\n    register(this.attributes, attribute, behavior, 'an Attribute');\n  }\n\n  getAttribute(attribute) {\n    return this.attributes[attribute] || (this.hasParent ? this.parent.getAttribute(attribute) : null);\n  }\n\n  registerValueConverter(name, valueConverter) {\n    register(this.valueConverters, name, valueConverter, 'a ValueConverter');\n  }\n\n  getValueConverter(name) {\n    return this.valueConverters[name] || (this.hasParent ? this.parent.getValueConverter(name) : null);\n  }\n\n  registerBindingBehavior(name, bindingBehavior) {\n    register(this.bindingBehaviors, name, bindingBehavior, 'a BindingBehavior');\n  }\n\n  getBindingBehavior(name) {\n    return this.bindingBehaviors[name] || (this.hasParent ? this.parent.getBindingBehavior(name) : null);\n  }\n\n  registerValue(name, value) {\n    register(this.values, name, value, 'a value');\n  }\n\n  getValue(name) {\n    return this.values[name] || (this.hasParent ? this.parent.getValue(name) : null);\n  }\n\n  autoRegister(container, impl) {\n    let resourceTypeMeta = metadata.getOwn(metadata.resource, impl);\n    if (resourceTypeMeta) {\n      if (resourceTypeMeta instanceof HtmlBehaviorResource) {\n        ViewResources.convention(impl, resourceTypeMeta);\n\n        if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n          HtmlBehaviorResource.convention(impl.name, resourceTypeMeta);\n        }\n        if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n          resourceTypeMeta.elementName = _hyphenate(impl.name);\n        }\n      }\n    } else {\n      resourceTypeMeta = ViewResources.convention(impl) || HtmlBehaviorResource.convention(impl.name) || ValueConverterResource.convention(impl.name) || BindingBehaviorResource.convention(impl.name) || ViewEngineHooksResource.convention(impl.name);\n      if (!resourceTypeMeta) {\n        resourceTypeMeta = new HtmlBehaviorResource();\n        resourceTypeMeta.elementName = _hyphenate(impl.name);\n      }\n      metadata.define(metadata.resource, resourceTypeMeta, impl);\n    }\n    resourceTypeMeta.initialize(container, impl);\n    resourceTypeMeta.register(this);\n    return resourceTypeMeta;\n  }\n};\n\nexport let View = class View {\n  constructor(container, viewFactory, fragment, controllers, bindings, children, slots) {\n    this.container = container;\n    this.viewFactory = viewFactory;\n    this.resources = viewFactory.resources;\n    this.fragment = fragment;\n    this.firstChild = fragment.firstChild;\n    this.lastChild = fragment.lastChild;\n    this.controllers = controllers;\n    this.bindings = bindings;\n    this.children = children;\n    this.slots = slots;\n    this.hasSlots = false;\n    this.fromCache = false;\n    this.isBound = false;\n    this.isAttached = false;\n    this.bindingContext = null;\n    this.overrideContext = null;\n    this.controller = null;\n    this.viewModelScope = null;\n    this.animatableElement = undefined;\n    this._isUserControlled = false;\n    this.contentView = null;\n\n    for (let key in slots) {\n      this.hasSlots = true;\n      break;\n    }\n  }\n\n  returnToCache() {\n    this.viewFactory.returnViewToCache(this);\n  }\n\n  created() {\n    let i;\n    let ii;\n    let controllers = this.controllers;\n\n    for (i = 0, ii = controllers.length; i < ii; ++i) {\n      controllers[i].created(this);\n    }\n  }\n\n  bind(bindingContext, overrideContext, _systemUpdate) {\n    let controllers;\n    let bindings;\n    let children;\n    let i;\n    let ii;\n\n    if (_systemUpdate && this._isUserControlled) {\n      return;\n    }\n\n    if (this.isBound) {\n      if (this.bindingContext === bindingContext) {\n        return;\n      }\n\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.bindingContext = bindingContext;\n    this.overrideContext = overrideContext || createOverrideContext(bindingContext);\n\n    this.resources._invokeHook('beforeBind', this);\n\n    bindings = this.bindings;\n    for (i = 0, ii = bindings.length; i < ii; ++i) {\n      bindings[i].bind(this);\n    }\n\n    if (this.viewModelScope !== null) {\n      bindingContext.bind(this.viewModelScope.bindingContext, this.viewModelScope.overrideContext);\n      this.viewModelScope = null;\n    }\n\n    controllers = this.controllers;\n    for (i = 0, ii = controllers.length; i < ii; ++i) {\n      controllers[i].bind(this);\n    }\n\n    children = this.children;\n    for (i = 0, ii = children.length; i < ii; ++i) {\n      children[i].bind(bindingContext, overrideContext, true);\n    }\n\n    if (this.hasSlots) {\n      ShadowDOM.distributeView(this.contentView, this.slots);\n    }\n  }\n\n  addBinding(binding) {\n    this.bindings.push(binding);\n\n    if (this.isBound) {\n      binding.bind(this);\n    }\n  }\n\n  unbind() {\n    let controllers;\n    let bindings;\n    let children;\n    let i;\n    let ii;\n\n    if (this.isBound) {\n      this.isBound = false;\n      this.resources._invokeHook('beforeUnbind', this);\n\n      if (this.controller !== null) {\n        this.controller.unbind();\n      }\n\n      bindings = this.bindings;\n      for (i = 0, ii = bindings.length; i < ii; ++i) {\n        bindings[i].unbind();\n      }\n\n      controllers = this.controllers;\n      for (i = 0, ii = controllers.length; i < ii; ++i) {\n        controllers[i].unbind();\n      }\n\n      children = this.children;\n      for (i = 0, ii = children.length; i < ii; ++i) {\n        children[i].unbind();\n      }\n\n      this.bindingContext = null;\n      this.overrideContext = null;\n    }\n  }\n\n  insertNodesBefore(refNode) {\n    refNode.parentNode.insertBefore(this.fragment, refNode);\n  }\n\n  appendNodesTo(parent) {\n    parent.appendChild(this.fragment);\n  }\n\n  removeNodes() {\n    let fragment = this.fragment;\n    let current = this.firstChild;\n    let end = this.lastChild;\n    let next;\n\n    while (current) {\n      next = current.nextSibling;\n      fragment.appendChild(current);\n\n      if (current === end) {\n        break;\n      }\n\n      current = next;\n    }\n  }\n\n  attached() {\n    let controllers;\n    let children;\n    let i;\n    let ii;\n\n    if (this.isAttached) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.controller !== null) {\n      this.controller.attached();\n    }\n\n    controllers = this.controllers;\n    for (i = 0, ii = controllers.length; i < ii; ++i) {\n      controllers[i].attached();\n    }\n\n    children = this.children;\n    for (i = 0, ii = children.length; i < ii; ++i) {\n      children[i].attached();\n    }\n  }\n\n  detached() {\n    let controllers;\n    let children;\n    let i;\n    let ii;\n\n    if (this.isAttached) {\n      this.isAttached = false;\n\n      if (this.controller !== null) {\n        this.controller.detached();\n      }\n\n      controllers = this.controllers;\n      for (i = 0, ii = controllers.length; i < ii; ++i) {\n        controllers[i].detached();\n      }\n\n      children = this.children;\n      for (i = 0, ii = children.length; i < ii; ++i) {\n        children[i].detached();\n      }\n    }\n  }\n};\n\nfunction getAnimatableElement(view) {\n  if (view.animatableElement !== undefined) {\n    return view.animatableElement;\n  }\n\n  let current = view.firstChild;\n\n  while (current && current.nodeType !== 1) {\n    current = current.nextSibling;\n  }\n\n  if (current && current.nodeType === 1) {\n    return view.animatableElement = current.classList.contains('au-animate') ? current : null;\n  }\n\n  return view.animatableElement = null;\n}\n\nexport let ViewSlot = class ViewSlot {\n  constructor(anchor, anchorIsContainer, animator = Animator.instance) {\n    this.anchor = anchor;\n    this.anchorIsContainer = anchorIsContainer;\n    this.bindingContext = null;\n    this.overrideContext = null;\n    this.animator = animator;\n    this.children = [];\n    this.isBound = false;\n    this.isAttached = false;\n    this.contentSelectors = null;\n    anchor.viewSlot = this;\n    anchor.isContentProjectionSource = false;\n  }\n\n  animateView(view, direction = 'enter') {\n    let animatableElement = getAnimatableElement(view);\n\n    if (animatableElement !== null) {\n      switch (direction) {\n        case 'enter':\n          return this.animator.enter(animatableElement);\n        case 'leave':\n          return this.animator.leave(animatableElement);\n        default:\n          throw new Error('Invalid animation direction: ' + direction);\n      }\n    }\n  }\n\n  transformChildNodesIntoView() {\n    let parent = this.anchor;\n\n    this.children.push({\n      fragment: parent,\n      firstChild: parent.firstChild,\n      lastChild: parent.lastChild,\n      returnToCache() {},\n      removeNodes() {\n        let last;\n\n        while (last = parent.lastChild) {\n          parent.removeChild(last);\n        }\n      },\n      created() {},\n      bind() {},\n      unbind() {},\n      attached() {},\n      detached() {}\n    });\n  }\n\n  bind(bindingContext, overrideContext) {\n    let i;\n    let ii;\n    let children;\n\n    if (this.isBound) {\n      if (this.bindingContext === bindingContext) {\n        return;\n      }\n\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.bindingContext = bindingContext = bindingContext || this.bindingContext;\n    this.overrideContext = overrideContext = overrideContext || this.overrideContext;\n\n    children = this.children;\n    for (i = 0, ii = children.length; i < ii; ++i) {\n      children[i].bind(bindingContext, overrideContext, true);\n    }\n  }\n\n  unbind() {\n    if (this.isBound) {\n      let i;\n      let ii;\n      let children = this.children;\n\n      this.isBound = false;\n      this.bindingContext = null;\n      this.overrideContext = null;\n\n      for (i = 0, ii = children.length; i < ii; ++i) {\n        children[i].unbind();\n      }\n    }\n  }\n\n  add(view) {\n    if (this.anchorIsContainer) {\n      view.appendNodesTo(this.anchor);\n    } else {\n      view.insertNodesBefore(this.anchor);\n    }\n\n    this.children.push(view);\n\n    if (this.isAttached) {\n      view.attached();\n      return this.animateView(view, 'enter');\n    }\n  }\n\n  insert(index, view) {\n    let children = this.children;\n    let length = children.length;\n\n    if (index === 0 && length === 0 || index >= length) {\n      return this.add(view);\n    }\n\n    view.insertNodesBefore(children[index].firstChild);\n    children.splice(index, 0, view);\n\n    if (this.isAttached) {\n      view.attached();\n      return this.animateView(view, 'enter');\n    }\n  }\n\n  move(sourceIndex, targetIndex) {\n    if (sourceIndex === targetIndex) {\n      return;\n    }\n\n    const children = this.children;\n    const view = children[sourceIndex];\n\n    view.removeNodes();\n    view.insertNodesBefore(children[targetIndex].firstChild);\n    children.splice(sourceIndex, 1);\n    children.splice(targetIndex, 0, view);\n  }\n\n  remove(view, returnToCache, skipAnimation) {\n    return this.removeAt(this.children.indexOf(view), returnToCache, skipAnimation);\n  }\n\n  removeMany(viewsToRemove, returnToCache, skipAnimation) {\n    const children = this.children;\n    let ii = viewsToRemove.length;\n    let i;\n    let rmPromises = [];\n\n    viewsToRemove.forEach(child => {\n      if (skipAnimation) {\n        child.removeNodes();\n        return;\n      }\n\n      let animation = this.animateView(child, 'leave');\n      if (animation) {\n        rmPromises.push(animation.then(() => child.removeNodes()));\n      } else {\n        child.removeNodes();\n      }\n    });\n\n    let removeAction = () => {\n      if (this.isAttached) {\n        for (i = 0; i < ii; ++i) {\n          viewsToRemove[i].detached();\n        }\n      }\n\n      if (returnToCache) {\n        for (i = 0; i < ii; ++i) {\n          viewsToRemove[i].returnToCache();\n        }\n      }\n\n      for (i = 0; i < ii; ++i) {\n        const index = children.indexOf(viewsToRemove[i]);\n        if (index >= 0) {\n          children.splice(index, 1);\n        }\n      }\n    };\n\n    if (rmPromises.length > 0) {\n      return Promise.all(rmPromises).then(() => removeAction());\n    }\n\n    return removeAction();\n  }\n\n  removeAt(index, returnToCache, skipAnimation) {\n    let view = this.children[index];\n\n    let removeAction = () => {\n      index = this.children.indexOf(view);\n      view.removeNodes();\n      this.children.splice(index, 1);\n\n      if (this.isAttached) {\n        view.detached();\n      }\n\n      if (returnToCache) {\n        view.returnToCache();\n      }\n\n      return view;\n    };\n\n    if (!skipAnimation) {\n      let animation = this.animateView(view, 'leave');\n      if (animation) {\n        return animation.then(() => removeAction());\n      }\n    }\n\n    return removeAction();\n  }\n\n  removeAll(returnToCache, skipAnimation) {\n    let children = this.children;\n    let ii = children.length;\n    let i;\n    let rmPromises = [];\n\n    children.forEach(child => {\n      if (skipAnimation) {\n        child.removeNodes();\n        return;\n      }\n\n      let animation = this.animateView(child, 'leave');\n      if (animation) {\n        rmPromises.push(animation.then(() => child.removeNodes()));\n      } else {\n        child.removeNodes();\n      }\n    });\n\n    let removeAction = () => {\n      if (this.isAttached) {\n        for (i = 0; i < ii; ++i) {\n          children[i].detached();\n        }\n      }\n\n      if (returnToCache) {\n        for (i = 0; i < ii; ++i) {\n          const child = children[i];\n\n          if (child) {\n            child.returnToCache();\n          }\n        }\n      }\n\n      this.children = [];\n    };\n\n    if (rmPromises.length > 0) {\n      return Promise.all(rmPromises).then(() => removeAction());\n    }\n\n    return removeAction();\n  }\n\n  attached() {\n    let i;\n    let ii;\n    let children;\n    let child;\n\n    if (this.isAttached) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    children = this.children;\n    for (i = 0, ii = children.length; i < ii; ++i) {\n      child = children[i];\n      child.attached();\n      this.animateView(child, 'enter');\n    }\n  }\n\n  detached() {\n    let i;\n    let ii;\n    let children;\n\n    if (this.isAttached) {\n      this.isAttached = false;\n      children = this.children;\n      for (i = 0, ii = children.length; i < ii; ++i) {\n        children[i].detached();\n      }\n    }\n  }\n\n  projectTo(slots) {\n    this.projectToSlots = slots;\n    this.add = this._projectionAdd;\n    this.insert = this._projectionInsert;\n    this.move = this._projectionMove;\n    this.remove = this._projectionRemove;\n    this.removeAt = this._projectionRemoveAt;\n    this.removeMany = this._projectionRemoveMany;\n    this.removeAll = this._projectionRemoveAll;\n    this.children.forEach(view => ShadowDOM.distributeView(view, slots, this));\n  }\n\n  _projectionAdd(view) {\n    ShadowDOM.distributeView(view, this.projectToSlots, this);\n\n    this.children.push(view);\n\n    if (this.isAttached) {\n      view.attached();\n    }\n  }\n\n  _projectionInsert(index, view) {\n    if (index === 0 && !this.children.length || index >= this.children.length) {\n      this.add(view);\n    } else {\n      ShadowDOM.distributeView(view, this.projectToSlots, this, index);\n\n      this.children.splice(index, 0, view);\n\n      if (this.isAttached) {\n        view.attached();\n      }\n    }\n  }\n\n  _projectionMove(sourceIndex, targetIndex) {\n    if (sourceIndex === targetIndex) {\n      return;\n    }\n\n    const children = this.children;\n    const view = children[sourceIndex];\n\n    ShadowDOM.undistributeView(view, this.projectToSlots, this);\n    ShadowDOM.distributeView(view, this.projectToSlots, this, targetIndex);\n\n    children.splice(sourceIndex, 1);\n    children.splice(targetIndex, 0, view);\n  }\n\n  _projectionRemove(view, returnToCache) {\n    ShadowDOM.undistributeView(view, this.projectToSlots, this);\n    this.children.splice(this.children.indexOf(view), 1);\n\n    if (this.isAttached) {\n      view.detached();\n    }\n    if (returnToCache) {\n      view.returnToCache();\n    }\n  }\n\n  _projectionRemoveAt(index, returnToCache) {\n    let view = this.children[index];\n\n    ShadowDOM.undistributeView(view, this.projectToSlots, this);\n    this.children.splice(index, 1);\n\n    if (this.isAttached) {\n      view.detached();\n    }\n    if (returnToCache) {\n      view.returnToCache();\n    }\n  }\n\n  _projectionRemoveMany(viewsToRemove, returnToCache) {\n    viewsToRemove.forEach(view => this.remove(view, returnToCache));\n  }\n\n  _projectionRemoveAll(returnToCache) {\n    ShadowDOM.undistributeAll(this.projectToSlots, this);\n\n    let children = this.children;\n    let ii = children.length;\n\n    for (let i = 0; i < ii; ++i) {\n      if (returnToCache) {\n        children[i].returnToCache();\n      } else if (this.isAttached) {\n        children[i].detached();\n      }\n    }\n\n    this.children = [];\n  }\n};\n\nlet ProviderResolver = resolver(_class12 = class ProviderResolver {\n  get(container, key) {\n    let id = key.__providerId__;\n    return id in container ? container[id] : container[id] = container.invoke(key);\n  }\n}) || _class12;\n\nlet providerResolverInstance = new ProviderResolver();\n\nfunction elementContainerGet(key) {\n  if (key === DOM.Element) {\n    return this.element;\n  }\n\n  if (key === BoundViewFactory) {\n    if (this.boundViewFactory) {\n      return this.boundViewFactory;\n    }\n\n    let factory = this.instruction.viewFactory;\n    let partReplacements = this.partReplacements;\n\n    if (partReplacements) {\n      factory = partReplacements[factory.part] || factory;\n    }\n\n    this.boundViewFactory = new BoundViewFactory(this, factory, partReplacements);\n    return this.boundViewFactory;\n  }\n\n  if (key === ViewSlot) {\n    if (this.viewSlot === undefined) {\n      this.viewSlot = new ViewSlot(this.element, this.instruction.anchorIsContainer);\n      this.element.isContentProjectionSource = this.instruction.lifting;\n      this.children.push(this.viewSlot);\n    }\n\n    return this.viewSlot;\n  }\n\n  if (key === ElementEvents) {\n    return this.elementEvents || (this.elementEvents = new ElementEvents(this.element));\n  }\n\n  if (key === CompositionTransaction) {\n    return this.compositionTransaction || (this.compositionTransaction = this.parent.get(key));\n  }\n\n  if (key === ViewResources) {\n    return this.viewResources;\n  }\n\n  if (key === TargetInstruction) {\n    return this.instruction;\n  }\n\n  return this.superGet(key);\n}\n\nfunction createElementContainer(parent, element, instruction, children, partReplacements, resources) {\n  let container = parent.createChild();\n  let providers;\n  let i;\n\n  container.element = element;\n  container.instruction = instruction;\n  container.children = children;\n  container.viewResources = resources;\n  container.partReplacements = partReplacements;\n\n  providers = instruction.providers;\n  i = providers.length;\n\n  while (i--) {\n    container._resolvers.set(providers[i], providerResolverInstance);\n  }\n\n  container.superGet = container.get;\n  container.get = elementContainerGet;\n\n  return container;\n}\n\nfunction hasAttribute(name) {\n  return this._element.hasAttribute(name);\n}\n\nfunction getAttribute(name) {\n  return this._element.getAttribute(name);\n}\n\nfunction setAttribute(name, value) {\n  this._element.setAttribute(name, value);\n}\n\nfunction makeElementIntoAnchor(element, elementInstruction) {\n  let anchor = DOM.createComment('anchor');\n\n  if (elementInstruction) {\n    let firstChild = element.firstChild;\n\n    if (firstChild && firstChild.tagName === 'AU-CONTENT') {\n      anchor.contentElement = firstChild;\n    }\n\n    anchor._element = element;\n\n    anchor.hasAttribute = hasAttribute;\n    anchor.getAttribute = getAttribute;\n    anchor.setAttribute = setAttribute;\n  }\n\n  DOM.replaceNode(anchor, element);\n\n  return anchor;\n}\n\nfunction applyInstructions(containers, element, instruction, controllers, bindings, children, shadowSlots, partReplacements, resources) {\n  let behaviorInstructions = instruction.behaviorInstructions;\n  let expressions = instruction.expressions;\n  let elementContainer;\n  let i;\n  let ii;\n  let current;\n  let instance;\n\n  if (instruction.contentExpression) {\n    bindings.push(instruction.contentExpression.createBinding(element.nextSibling));\n    element.nextSibling.auInterpolationTarget = true;\n    element.parentNode.removeChild(element);\n    return;\n  }\n\n  if (instruction.shadowSlot) {\n    let commentAnchor = DOM.createComment('slot');\n    let slot;\n\n    if (instruction.slotDestination) {\n      slot = new PassThroughSlot(commentAnchor, instruction.slotName, instruction.slotDestination, instruction.slotFallbackFactory);\n    } else {\n      slot = new ShadowSlot(commentAnchor, instruction.slotName, instruction.slotFallbackFactory);\n    }\n\n    DOM.replaceNode(commentAnchor, element);\n    shadowSlots[instruction.slotName] = slot;\n    controllers.push(slot);\n    return;\n  }\n\n  if (instruction.letElement) {\n    for (i = 0, ii = expressions.length; i < ii; ++i) {\n      bindings.push(expressions[i].createBinding());\n    }\n    element.parentNode.removeChild(element);\n    return;\n  }\n\n  if (behaviorInstructions.length) {\n    if (!instruction.anchorIsContainer) {\n      element = makeElementIntoAnchor(element, instruction.elementInstruction);\n    }\n\n    containers[instruction.injectorId] = elementContainer = createElementContainer(containers[instruction.parentInjectorId], element, instruction, children, partReplacements, resources);\n\n    for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {\n      current = behaviorInstructions[i];\n      instance = current.type.create(elementContainer, current, element, bindings);\n      controllers.push(instance);\n    }\n  }\n\n  for (i = 0, ii = expressions.length; i < ii; ++i) {\n    bindings.push(expressions[i].createBinding(element));\n  }\n}\n\nfunction styleStringToObject(style, target) {\n  let attributes = style.split(';');\n  let firstIndexOfColon;\n  let i;\n  let current;\n  let key;\n  let value;\n\n  target = target || {};\n\n  for (i = 0; i < attributes.length; i++) {\n    current = attributes[i];\n    firstIndexOfColon = current.indexOf(':');\n    key = current.substring(0, firstIndexOfColon).trim();\n    value = current.substring(firstIndexOfColon + 1).trim();\n    target[key] = value;\n  }\n\n  return target;\n}\n\nfunction styleObjectToString(obj) {\n  let result = '';\n\n  for (let key in obj) {\n    result += key + ':' + obj[key] + ';';\n  }\n\n  return result;\n}\n\nfunction applySurrogateInstruction(container, element, instruction, controllers, bindings, children) {\n  let behaviorInstructions = instruction.behaviorInstructions;\n  let expressions = instruction.expressions;\n  let providers = instruction.providers;\n  let values = instruction.values;\n  let i;\n  let ii;\n  let current;\n  let instance;\n  let currentAttributeValue;\n\n  i = providers.length;\n  while (i--) {\n    container._resolvers.set(providers[i], providerResolverInstance);\n  }\n\n  for (let key in values) {\n    currentAttributeValue = element.getAttribute(key);\n\n    if (currentAttributeValue) {\n      if (key === 'class') {\n        element.setAttribute('class', currentAttributeValue + ' ' + values[key]);\n      } else if (key === 'style') {\n        let styleObject = styleStringToObject(values[key]);\n        styleStringToObject(currentAttributeValue, styleObject);\n        element.setAttribute('style', styleObjectToString(styleObject));\n      }\n    } else {\n      element.setAttribute(key, values[key]);\n    }\n  }\n\n  if (behaviorInstructions.length) {\n    for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {\n      current = behaviorInstructions[i];\n      instance = current.type.create(container, current, element, bindings);\n\n      if (instance.contentView) {\n        children.push(instance.contentView);\n      }\n\n      controllers.push(instance);\n    }\n  }\n\n  for (i = 0, ii = expressions.length; i < ii; ++i) {\n    bindings.push(expressions[i].createBinding(element));\n  }\n}\n\nexport let BoundViewFactory = class BoundViewFactory {\n  constructor(parentContainer, viewFactory, partReplacements) {\n    this.parentContainer = parentContainer;\n    this.viewFactory = viewFactory;\n    this.factoryCreateInstruction = { partReplacements: partReplacements };\n  }\n\n  create() {\n    let view = this.viewFactory.create(this.parentContainer.createChild(), this.factoryCreateInstruction);\n    view._isUserControlled = true;\n    return view;\n  }\n\n  get isCaching() {\n    return this.viewFactory.isCaching;\n  }\n\n  setCacheSize(size, doNotOverrideIfAlreadySet) {\n    this.viewFactory.setCacheSize(size, doNotOverrideIfAlreadySet);\n  }\n\n  getCachedView() {\n    return this.viewFactory.getCachedView();\n  }\n\n  returnViewToCache(view) {\n    this.viewFactory.returnViewToCache(view);\n  }\n};\n\nexport let ViewFactory = class ViewFactory {\n  constructor(template, instructions, resources) {\n    this.isCaching = false;\n\n    this.template = template;\n    this.instructions = instructions;\n    this.resources = resources;\n    this.cacheSize = -1;\n    this.cache = null;\n  }\n\n  setCacheSize(size, doNotOverrideIfAlreadySet) {\n    if (size) {\n      if (size === '*') {\n        size = Number.MAX_VALUE;\n      } else if (typeof size === 'string') {\n        size = parseInt(size, 10);\n      }\n    }\n\n    if (this.cacheSize === -1 || !doNotOverrideIfAlreadySet) {\n      this.cacheSize = size;\n    }\n\n    if (this.cacheSize > 0) {\n      this.cache = [];\n    } else {\n      this.cache = null;\n    }\n\n    this.isCaching = this.cacheSize > 0;\n  }\n\n  getCachedView() {\n    return this.cache !== null ? this.cache.pop() || null : null;\n  }\n\n  returnViewToCache(view) {\n    if (view.isAttached) {\n      view.detached();\n    }\n\n    if (view.isBound) {\n      view.unbind();\n    }\n\n    if (this.cache !== null && this.cache.length < this.cacheSize) {\n      view.fromCache = true;\n      this.cache.push(view);\n    }\n  }\n\n  create(container, createInstruction, element) {\n    createInstruction = createInstruction || BehaviorInstruction.normal;\n\n    let cachedView = this.getCachedView();\n    if (cachedView !== null) {\n      return cachedView;\n    }\n\n    let fragment = createInstruction.enhance ? this.template : this.template.cloneNode(true);\n    let instructables = fragment.querySelectorAll('.au-target');\n    let instructions = this.instructions;\n    let resources = this.resources;\n    let controllers = [];\n    let bindings = [];\n    let children = [];\n    let shadowSlots = Object.create(null);\n    let containers = { root: container };\n    let partReplacements = createInstruction.partReplacements;\n    let i;\n    let ii;\n    let view;\n    let instructable;\n    let instruction;\n\n    this.resources._invokeHook('beforeCreate', this, container, fragment, createInstruction);\n\n    if (element && this.surrogateInstruction !== null) {\n      applySurrogateInstruction(container, element, this.surrogateInstruction, controllers, bindings, children);\n    }\n\n    if (createInstruction.enhance && fragment.hasAttribute('au-target-id')) {\n      instructable = fragment;\n      instruction = instructions[instructable.getAttribute('au-target-id')];\n      applyInstructions(containers, instructable, instruction, controllers, bindings, children, shadowSlots, partReplacements, resources);\n    }\n\n    for (i = 0, ii = instructables.length; i < ii; ++i) {\n      instructable = instructables[i];\n      instruction = instructions[instructable.getAttribute('au-target-id')];\n      applyInstructions(containers, instructable, instruction, controllers, bindings, children, shadowSlots, partReplacements, resources);\n    }\n\n    view = new View(container, this, fragment, controllers, bindings, children, shadowSlots);\n\n    if (!createInstruction.initiatedByBehavior) {\n      view.created();\n    }\n\n    this.resources._invokeHook('afterCreate', view);\n\n    return view;\n  }\n};\n\nlet nextInjectorId = 0;\nfunction getNextInjectorId() {\n  return ++nextInjectorId;\n}\n\nlet lastAUTargetID = 0;\nfunction getNextAUTargetID() {\n  return (++lastAUTargetID).toString();\n}\n\nfunction makeIntoInstructionTarget(element) {\n  let value = element.getAttribute('class');\n  let auTargetID = getNextAUTargetID();\n\n  element.setAttribute('class', value ? value + ' au-target' : 'au-target');\n  element.setAttribute('au-target-id', auTargetID);\n\n  return auTargetID;\n}\n\nfunction makeShadowSlot(compiler, resources, node, instructions, parentInjectorId) {\n  let auShadowSlot = DOM.createElement('au-shadow-slot');\n  DOM.replaceNode(auShadowSlot, node);\n\n  let auTargetID = makeIntoInstructionTarget(auShadowSlot);\n  let instruction = TargetInstruction.shadowSlot(parentInjectorId);\n\n  instruction.slotName = node.getAttribute('name') || ShadowDOM.defaultSlotKey;\n  instruction.slotDestination = node.getAttribute('slot');\n\n  if (node.innerHTML.trim()) {\n    let fragment = DOM.createDocumentFragment();\n    let child;\n\n    while (child = node.firstChild) {\n      fragment.appendChild(child);\n    }\n\n    instruction.slotFallbackFactory = compiler.compile(fragment, resources);\n  }\n\n  instructions[auTargetID] = instruction;\n\n  return auShadowSlot;\n}\n\nconst defaultLetHandler = BindingLanguage.prototype.createLetExpressions;\n\nexport let ViewCompiler = class ViewCompiler {\n\n  static inject() {\n    return [BindingLanguage, ViewResources];\n  }\n\n  constructor(bindingLanguage, resources) {\n    this.bindingLanguage = bindingLanguage;\n    this.resources = resources;\n  }\n\n  compile(source, resources, compileInstruction) {\n    resources = resources || this.resources;\n    compileInstruction = compileInstruction || ViewCompileInstruction.normal;\n    source = typeof source === 'string' ? DOM.createTemplateFromMarkup(source) : source;\n\n    let content;\n    let part;\n    let cacheSize;\n\n    if (source.content) {\n      part = source.getAttribute('part');\n      cacheSize = source.getAttribute('view-cache');\n      content = DOM.adoptNode(source.content);\n    } else {\n      content = source;\n    }\n\n    compileInstruction.targetShadowDOM = compileInstruction.targetShadowDOM && FEATURE.shadowDOM;\n    resources._invokeHook('beforeCompile', content, resources, compileInstruction);\n\n    let instructions = {};\n    this._compileNode(content, resources, instructions, source, 'root', !compileInstruction.targetShadowDOM);\n\n    let firstChild = content.firstChild;\n    if (firstChild && firstChild.nodeType === 1) {\n      let targetId = firstChild.getAttribute('au-target-id');\n      if (targetId) {\n        let ins = instructions[targetId];\n\n        if (ins.shadowSlot || ins.lifting || ins.elementInstruction && !ins.elementInstruction.anchorIsContainer) {\n          content.insertBefore(DOM.createComment('view'), firstChild);\n        }\n      }\n    }\n\n    let factory = new ViewFactory(content, instructions, resources);\n\n    factory.surrogateInstruction = compileInstruction.compileSurrogate ? this._compileSurrogate(source, resources) : null;\n    factory.part = part;\n\n    if (cacheSize) {\n      factory.setCacheSize(cacheSize);\n    }\n\n    resources._invokeHook('afterCompile', factory);\n\n    return factory;\n  }\n\n  _compileNode(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM) {\n    switch (node.nodeType) {\n      case 1:\n        return this._compileElement(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM);\n      case 3:\n        let expression = resources.getBindingLanguage(this.bindingLanguage).inspectTextContent(resources, node.wholeText);\n        if (expression) {\n          let marker = DOM.createElement('au-marker');\n          let auTargetID = makeIntoInstructionTarget(marker);\n          (node.parentNode || parentNode).insertBefore(marker, node);\n          node.textContent = ' ';\n          instructions[auTargetID] = TargetInstruction.contentExpression(expression);\n\n          while (node.nextSibling && node.nextSibling.nodeType === 3) {\n            (node.parentNode || parentNode).removeChild(node.nextSibling);\n          }\n        } else {\n          while (node.nextSibling && node.nextSibling.nodeType === 3) {\n            node = node.nextSibling;\n          }\n        }\n        return node.nextSibling;\n      case 11:\n        let currentChild = node.firstChild;\n        while (currentChild) {\n          currentChild = this._compileNode(currentChild, resources, instructions, node, parentInjectorId, targetLightDOM);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return node.nextSibling;\n  }\n\n  _compileSurrogate(node, resources) {\n    let tagName = node.tagName.toLowerCase();\n    let attributes = node.attributes;\n    let bindingLanguage = resources.getBindingLanguage(this.bindingLanguage);\n    let knownAttribute;\n    let property;\n    let instruction;\n    let i;\n    let ii;\n    let attr;\n    let attrName;\n    let attrValue;\n    let info;\n    let type;\n    let expressions = [];\n    let expression;\n    let behaviorInstructions = [];\n    let values = {};\n    let hasValues = false;\n    let providers = [];\n\n    for (i = 0, ii = attributes.length; i < ii; ++i) {\n      attr = attributes[i];\n      attrName = attr.name;\n      attrValue = attr.value;\n\n      info = bindingLanguage.inspectAttribute(resources, tagName, attrName, attrValue);\n      type = resources.getAttribute(info.attrName);\n\n      if (type) {\n        knownAttribute = resources.mapAttribute(info.attrName);\n        if (knownAttribute) {\n          property = type.attributes[knownAttribute];\n\n          if (property) {\n            info.defaultBindingMode = property.defaultBindingMode;\n\n            if (!info.command && !info.expression) {\n              info.command = property.hasOptions ? 'options' : null;\n            }\n\n            if (info.command && info.command !== 'options' && type.primaryProperty) {\n              const primaryProperty = type.primaryProperty;\n              attrName = info.attrName = primaryProperty.attribute;\n\n              info.defaultBindingMode = primaryProperty.defaultBindingMode;\n            }\n          }\n        }\n      }\n\n      instruction = bindingLanguage.createAttributeInstruction(resources, node, info, undefined, type);\n\n      if (instruction) {\n        if (instruction.alteredAttr) {\n          type = resources.getAttribute(instruction.attrName);\n        }\n\n        if (instruction.discrete) {\n          expressions.push(instruction);\n        } else {\n          if (type) {\n            instruction.type = type;\n            this._configureProperties(instruction, resources);\n\n            if (type.liftsContent) {\n              throw new Error('You cannot place a template controller on a surrogate element.');\n            } else {\n              behaviorInstructions.push(instruction);\n            }\n          } else {\n            expressions.push(instruction.attributes[instruction.attrName]);\n          }\n        }\n      } else {\n        if (type) {\n          instruction = BehaviorInstruction.attribute(attrName, type);\n          instruction.attributes[resources.mapAttribute(attrName)] = attrValue;\n\n          if (type.liftsContent) {\n            throw new Error('You cannot place a template controller on a surrogate element.');\n          } else {\n            behaviorInstructions.push(instruction);\n          }\n        } else if (attrName !== 'id' && attrName !== 'part' && attrName !== 'replace-part') {\n          hasValues = true;\n          values[attrName] = attrValue;\n        }\n      }\n    }\n\n    if (expressions.length || behaviorInstructions.length || hasValues) {\n      for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {\n        instruction = behaviorInstructions[i];\n        instruction.type.compile(this, resources, node, instruction);\n        providers.push(instruction.type.target);\n      }\n\n      for (i = 0, ii = expressions.length; i < ii; ++i) {\n        expression = expressions[i];\n        if (expression.attrToRemove !== undefined) {\n          node.removeAttribute(expression.attrToRemove);\n        }\n      }\n\n      return TargetInstruction.surrogate(providers, behaviorInstructions, expressions, values);\n    }\n\n    return null;\n  }\n\n  _compileElement(node, resources, instructions, parentNode, parentInjectorId, targetLightDOM) {\n    let tagName = node.tagName.toLowerCase();\n    let attributes = node.attributes;\n    let expressions = [];\n    let expression;\n    let behaviorInstructions = [];\n    let providers = [];\n    let bindingLanguage = resources.getBindingLanguage(this.bindingLanguage);\n    let liftingInstruction;\n    let viewFactory;\n    let type;\n    let elementInstruction;\n    let elementProperty;\n    let i;\n    let ii;\n    let attr;\n    let attrName;\n    let attrValue;\n    let originalAttrName;\n    let instruction;\n    let info;\n    let property;\n    let knownAttribute;\n    let auTargetID;\n    let injectorId;\n\n    if (tagName === 'slot') {\n      if (targetLightDOM) {\n        node = makeShadowSlot(this, resources, node, instructions, parentInjectorId);\n      }\n      return node.nextSibling;\n    } else if (tagName === 'template') {\n      if (!('content' in node)) {\n        throw new Error('You cannot place a template element within ' + node.namespaceURI + ' namespace');\n      }\n      viewFactory = this.compile(node, resources);\n      viewFactory.part = node.getAttribute('part');\n    } else {\n      type = resources.getElement(node.getAttribute('as-element') || tagName);\n\n      if (tagName === 'let' && !type && bindingLanguage.createLetExpressions !== defaultLetHandler) {\n        expressions = bindingLanguage.createLetExpressions(resources, node);\n        auTargetID = makeIntoInstructionTarget(node);\n        instructions[auTargetID] = TargetInstruction.letElement(expressions);\n        return node.nextSibling;\n      }\n      if (type) {\n        elementInstruction = BehaviorInstruction.element(node, type);\n        type.processAttributes(this, resources, node, attributes, elementInstruction);\n        behaviorInstructions.push(elementInstruction);\n      }\n    }\n\n    for (i = 0, ii = attributes.length; i < ii; ++i) {\n      attr = attributes[i];\n      originalAttrName = attrName = attr.name;\n      attrValue = attr.value;\n      info = bindingLanguage.inspectAttribute(resources, tagName, attrName, attrValue);\n\n      if (targetLightDOM && info.attrName === 'slot') {\n        info.attrName = attrName = 'au-slot';\n      }\n\n      type = resources.getAttribute(info.attrName);\n      elementProperty = null;\n\n      if (type) {\n        knownAttribute = resources.mapAttribute(info.attrName);\n        if (knownAttribute) {\n          property = type.attributes[knownAttribute];\n\n          if (property) {\n            info.defaultBindingMode = property.defaultBindingMode;\n\n            if (!info.command && !info.expression) {\n              info.command = property.hasOptions ? 'options' : null;\n            }\n\n            if (info.command && info.command !== 'options' && type.primaryProperty) {\n              const primaryProperty = type.primaryProperty;\n              attrName = info.attrName = primaryProperty.attribute;\n\n              info.defaultBindingMode = primaryProperty.defaultBindingMode;\n            }\n          }\n        }\n      } else if (elementInstruction) {\n        elementProperty = elementInstruction.type.attributes[info.attrName];\n        if (elementProperty) {\n          info.defaultBindingMode = elementProperty.defaultBindingMode;\n        }\n      }\n\n      if (elementProperty) {\n        instruction = bindingLanguage.createAttributeInstruction(resources, node, info, elementInstruction);\n      } else {\n        instruction = bindingLanguage.createAttributeInstruction(resources, node, info, undefined, type);\n      }\n\n      if (instruction) {\n        if (instruction.alteredAttr) {\n          type = resources.getAttribute(instruction.attrName);\n        }\n\n        if (instruction.discrete) {\n          expressions.push(instruction);\n        } else {\n          if (type) {\n            instruction.type = type;\n            this._configureProperties(instruction, resources);\n\n            if (type.liftsContent) {\n              instruction.originalAttrName = originalAttrName;\n              liftingInstruction = instruction;\n              break;\n            } else {\n              behaviorInstructions.push(instruction);\n            }\n          } else if (elementProperty) {\n            elementInstruction.attributes[info.attrName].targetProperty = elementProperty.name;\n          } else {\n            expressions.push(instruction.attributes[instruction.attrName]);\n          }\n        }\n      } else {\n        if (type) {\n          instruction = BehaviorInstruction.attribute(attrName, type);\n          instruction.attributes[resources.mapAttribute(attrName)] = attrValue;\n\n          if (type.liftsContent) {\n            instruction.originalAttrName = originalAttrName;\n            liftingInstruction = instruction;\n            break;\n          } else {\n            behaviorInstructions.push(instruction);\n          }\n        } else if (elementProperty) {\n          elementInstruction.attributes[attrName] = attrValue;\n        }\n      }\n    }\n\n    if (liftingInstruction) {\n      liftingInstruction.viewFactory = viewFactory;\n      node = liftingInstruction.type.compile(this, resources, node, liftingInstruction, parentNode);\n      auTargetID = makeIntoInstructionTarget(node);\n      instructions[auTargetID] = TargetInstruction.lifting(parentInjectorId, liftingInstruction);\n    } else {\n      let skipContentProcessing = false;\n\n      if (expressions.length || behaviorInstructions.length) {\n        injectorId = behaviorInstructions.length ? getNextInjectorId() : false;\n\n        for (i = 0, ii = behaviorInstructions.length; i < ii; ++i) {\n          instruction = behaviorInstructions[i];\n          instruction.type.compile(this, resources, node, instruction, parentNode);\n          providers.push(instruction.type.target);\n          skipContentProcessing = skipContentProcessing || instruction.skipContentProcessing;\n        }\n\n        for (i = 0, ii = expressions.length; i < ii; ++i) {\n          expression = expressions[i];\n          if (expression.attrToRemove !== undefined) {\n            node.removeAttribute(expression.attrToRemove);\n          }\n        }\n\n        auTargetID = makeIntoInstructionTarget(node);\n        instructions[auTargetID] = TargetInstruction.normal(injectorId, parentInjectorId, providers, behaviorInstructions, expressions, elementInstruction);\n      }\n\n      if (skipContentProcessing) {\n        return node.nextSibling;\n      }\n\n      let currentChild = node.firstChild;\n      while (currentChild) {\n        currentChild = this._compileNode(currentChild, resources, instructions, node, injectorId || parentInjectorId, targetLightDOM);\n      }\n    }\n\n    return node.nextSibling;\n  }\n\n  _configureProperties(instruction, resources) {\n    let type = instruction.type;\n    let attrName = instruction.attrName;\n    let attributes = instruction.attributes;\n    let property;\n    let key;\n    let value;\n\n    let knownAttribute = resources.mapAttribute(attrName);\n    if (knownAttribute && attrName in attributes && knownAttribute !== attrName) {\n      attributes[knownAttribute] = attributes[attrName];\n      delete attributes[attrName];\n    }\n\n    for (key in attributes) {\n      value = attributes[key];\n\n      if (value !== null && typeof value === 'object') {\n        property = type.attributes[key];\n\n        if (property !== undefined) {\n          value.targetProperty = property.name;\n        } else {\n          value.targetProperty = key;\n        }\n      }\n    }\n  }\n};\n\nexport let ResourceModule = class ResourceModule {\n  constructor(moduleId) {\n    this.id = moduleId;\n    this.moduleInstance = null;\n    this.mainResource = null;\n    this.resources = null;\n    this.viewStrategy = null;\n    this.isInitialized = false;\n    this.onLoaded = null;\n    this.loadContext = null;\n  }\n\n  initialize(container) {\n    let current = this.mainResource;\n    let resources = this.resources;\n    let vs = this.viewStrategy;\n\n    if (this.isInitialized) {\n      return;\n    }\n\n    this.isInitialized = true;\n\n    if (current !== undefined) {\n      current.metadata.viewStrategy = vs;\n      current.initialize(container);\n    }\n\n    for (let i = 0, ii = resources.length; i < ii; ++i) {\n      current = resources[i];\n      current.metadata.viewStrategy = vs;\n      current.initialize(container);\n    }\n  }\n\n  register(registry, name) {\n    let main = this.mainResource;\n    let resources = this.resources;\n\n    if (main !== undefined) {\n      main.register(registry, name);\n      name = null;\n    }\n\n    for (let i = 0, ii = resources.length; i < ii; ++i) {\n      resources[i].register(registry, name);\n      name = null;\n    }\n  }\n\n  load(container, loadContext) {\n    if (this.onLoaded !== null) {\n      return this.loadContext === loadContext ? Promise.resolve() : this.onLoaded;\n    }\n\n    let main = this.mainResource;\n    let resources = this.resources;\n    let loads;\n\n    if (main !== undefined) {\n      loads = new Array(resources.length + 1);\n      loads[0] = main.load(container, loadContext);\n      for (let i = 0, ii = resources.length; i < ii; ++i) {\n        loads[i + 1] = resources[i].load(container, loadContext);\n      }\n    } else {\n      loads = new Array(resources.length);\n      for (let i = 0, ii = resources.length; i < ii; ++i) {\n        loads[i] = resources[i].load(container, loadContext);\n      }\n    }\n\n    this.loadContext = loadContext;\n    this.onLoaded = Promise.all(loads);\n    return this.onLoaded;\n  }\n};\n\nexport let ResourceDescription = class ResourceDescription {\n  constructor(key, exportedValue, resourceTypeMeta) {\n    if (!resourceTypeMeta) {\n      resourceTypeMeta = metadata.get(metadata.resource, exportedValue);\n\n      if (!resourceTypeMeta) {\n        resourceTypeMeta = new HtmlBehaviorResource();\n        resourceTypeMeta.elementName = _hyphenate(key);\n        metadata.define(metadata.resource, resourceTypeMeta, exportedValue);\n      }\n    }\n\n    if (resourceTypeMeta instanceof HtmlBehaviorResource) {\n      if (resourceTypeMeta.elementName === undefined) {\n        resourceTypeMeta.elementName = _hyphenate(key);\n      } else if (resourceTypeMeta.attributeName === undefined) {\n        resourceTypeMeta.attributeName = _hyphenate(key);\n      } else if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n        HtmlBehaviorResource.convention(key, resourceTypeMeta);\n      }\n    } else if (!resourceTypeMeta.name) {\n      resourceTypeMeta.name = _hyphenate(key);\n    }\n\n    this.metadata = resourceTypeMeta;\n    this.value = exportedValue;\n  }\n\n  initialize(container) {\n    this.metadata.initialize(container, this.value);\n  }\n\n  register(registry, name) {\n    this.metadata.register(registry, name);\n  }\n\n  load(container, loadContext) {\n    return this.metadata.load(container, this.value, loadContext);\n  }\n};\n\nexport let ModuleAnalyzer = class ModuleAnalyzer {\n  constructor() {\n    this.cache = Object.create(null);\n  }\n\n  getAnalysis(moduleId) {\n    return this.cache[moduleId];\n  }\n\n  analyze(moduleId, moduleInstance, mainResourceKey) {\n    let mainResource;\n    let fallbackValue;\n    let fallbackKey;\n    let resourceTypeMeta;\n    let key;\n    let exportedValue;\n    let resources = [];\n    let conventional;\n    let vs;\n    let resourceModule;\n\n    resourceModule = this.cache[moduleId];\n    if (resourceModule) {\n      return resourceModule;\n    }\n\n    resourceModule = new ResourceModule(moduleId);\n    this.cache[moduleId] = resourceModule;\n\n    if (typeof moduleInstance === 'function') {\n      moduleInstance = { 'default': moduleInstance };\n    }\n\n    if (mainResourceKey) {\n      mainResource = new ResourceDescription(mainResourceKey, moduleInstance[mainResourceKey]);\n    }\n\n    for (key in moduleInstance) {\n      exportedValue = moduleInstance[key];\n\n      if (key === mainResourceKey || typeof exportedValue !== 'function') {\n        continue;\n      }\n\n      resourceTypeMeta = metadata.get(metadata.resource, exportedValue);\n\n      if (resourceTypeMeta) {\n        if (resourceTypeMeta instanceof HtmlBehaviorResource) {\n          ViewResources.convention(exportedValue, resourceTypeMeta);\n\n          if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n            HtmlBehaviorResource.convention(key, resourceTypeMeta);\n          }\n\n          if (resourceTypeMeta.attributeName === null && resourceTypeMeta.elementName === null) {\n            resourceTypeMeta.elementName = _hyphenate(key);\n          }\n        }\n\n        if (!mainResource && resourceTypeMeta instanceof HtmlBehaviorResource && resourceTypeMeta.elementName !== null) {\n          mainResource = new ResourceDescription(key, exportedValue, resourceTypeMeta);\n        } else {\n          resources.push(new ResourceDescription(key, exportedValue, resourceTypeMeta));\n        }\n      } else if (viewStrategy.decorates(exportedValue)) {\n        vs = exportedValue;\n      } else if (exportedValue instanceof TemplateRegistryEntry) {\n        vs = new TemplateRegistryViewStrategy(moduleId, exportedValue);\n      } else {\n        if (conventional = ViewResources.convention(exportedValue)) {\n          if (conventional.elementName !== null && !mainResource) {\n            mainResource = new ResourceDescription(key, exportedValue, conventional);\n          } else {\n            resources.push(new ResourceDescription(key, exportedValue, conventional));\n          }\n          metadata.define(metadata.resource, conventional, exportedValue);\n        } else if (conventional = HtmlBehaviorResource.convention(key)) {\n          if (conventional.elementName !== null && !mainResource) {\n            mainResource = new ResourceDescription(key, exportedValue, conventional);\n          } else {\n            resources.push(new ResourceDescription(key, exportedValue, conventional));\n          }\n\n          metadata.define(metadata.resource, conventional, exportedValue);\n        } else if (conventional = ValueConverterResource.convention(key) || BindingBehaviorResource.convention(key) || ViewEngineHooksResource.convention(key)) {\n          resources.push(new ResourceDescription(key, exportedValue, conventional));\n          metadata.define(metadata.resource, conventional, exportedValue);\n        } else if (!fallbackValue) {\n          fallbackValue = exportedValue;\n          fallbackKey = key;\n        }\n      }\n    }\n\n    if (!mainResource && fallbackValue) {\n      mainResource = new ResourceDescription(fallbackKey, fallbackValue);\n    }\n\n    resourceModule.moduleInstance = moduleInstance;\n    resourceModule.mainResource = mainResource;\n    resourceModule.resources = resources;\n    resourceModule.viewStrategy = vs;\n\n    return resourceModule;\n  }\n};\n\nlet logger = LogManager.getLogger('templating');\n\nfunction ensureRegistryEntry(loader, urlOrRegistryEntry) {\n  if (urlOrRegistryEntry instanceof TemplateRegistryEntry) {\n    return Promise.resolve(urlOrRegistryEntry);\n  }\n\n  return loader.loadTemplate(urlOrRegistryEntry);\n}\n\nlet ProxyViewFactory = class ProxyViewFactory {\n  constructor(promise) {\n    promise.then(x => this.viewFactory = x);\n  }\n\n  create(container, bindingContext, createInstruction, element) {\n    return this.viewFactory.create(container, bindingContext, createInstruction, element);\n  }\n\n  get isCaching() {\n    return this.viewFactory.isCaching;\n  }\n\n  setCacheSize(size, doNotOverrideIfAlreadySet) {\n    this.viewFactory.setCacheSize(size, doNotOverrideIfAlreadySet);\n  }\n\n  getCachedView() {\n    return this.viewFactory.getCachedView();\n  }\n\n  returnViewToCache(view) {\n    this.viewFactory.returnViewToCache(view);\n  }\n};\n\n\nlet auSlotBehavior = null;\n\nexport let ViewEngine = (_temp5 = _class14 = class ViewEngine {\n\n  static inject() {\n    return [Loader, Container, ViewCompiler, ModuleAnalyzer, ViewResources];\n  }\n\n  constructor(loader, container, viewCompiler, moduleAnalyzer, appResources) {\n    this.loader = loader;\n    this.container = container;\n    this.viewCompiler = viewCompiler;\n    this.moduleAnalyzer = moduleAnalyzer;\n    this.appResources = appResources;\n    this._pluginMap = {};\n\n    if (auSlotBehavior === null) {\n      auSlotBehavior = new HtmlBehaviorResource();\n      auSlotBehavior.attributeName = 'au-slot';\n      metadata.define(metadata.resource, auSlotBehavior, SlotCustomAttribute);\n    }\n\n    auSlotBehavior.initialize(container, SlotCustomAttribute);\n    auSlotBehavior.register(appResources);\n  }\n\n  addResourcePlugin(extension, implementation) {\n    let name = extension.replace('.', '') + '-resource-plugin';\n    this._pluginMap[extension] = name;\n    this.loader.addPlugin(name, implementation);\n  }\n\n  loadViewFactory(urlOrRegistryEntry, compileInstruction, loadContext, target) {\n    loadContext = loadContext || new ResourceLoadContext();\n\n    return ensureRegistryEntry(this.loader, urlOrRegistryEntry).then(registryEntry => {\n      const url = registryEntry.address;\n\n      if (registryEntry.onReady) {\n        if (!loadContext.hasDependency(url)) {\n          loadContext.addDependency(url);\n          return registryEntry.onReady;\n        }\n\n        if (registryEntry.template === null) {\n          return registryEntry.onReady;\n        }\n\n        return Promise.resolve(new ProxyViewFactory(registryEntry.onReady));\n      }\n\n      loadContext.addDependency(url);\n\n      registryEntry.onReady = this.loadTemplateResources(registryEntry, compileInstruction, loadContext, target).then(resources => {\n        registryEntry.resources = resources;\n\n        if (registryEntry.template === null) {\n          return registryEntry.factory = null;\n        }\n\n        let viewFactory = this.viewCompiler.compile(registryEntry.template, resources, compileInstruction);\n        return registryEntry.factory = viewFactory;\n      });\n\n      return registryEntry.onReady;\n    });\n  }\n\n  loadTemplateResources(registryEntry, compileInstruction, loadContext, target) {\n    let resources = new ViewResources(this.appResources, registryEntry.address);\n    let dependencies = registryEntry.dependencies;\n    let importIds;\n    let names;\n\n    compileInstruction = compileInstruction || ViewCompileInstruction.normal;\n\n    if (dependencies.length === 0 && !compileInstruction.associatedModuleId) {\n      return Promise.resolve(resources);\n    }\n\n    importIds = dependencies.map(x => x.src);\n    names = dependencies.map(x => x.name);\n    logger.debug(`importing resources for ${registryEntry.address}`, importIds);\n\n    if (target) {\n      let viewModelRequires = metadata.get(ViewEngine.viewModelRequireMetadataKey, target);\n      if (viewModelRequires) {\n        let templateImportCount = importIds.length;\n        for (let i = 0, ii = viewModelRequires.length; i < ii; ++i) {\n          let req = viewModelRequires[i];\n          let importId = typeof req === 'function' ? Origin.get(req).moduleId : relativeToFile(req.src || req, registryEntry.address);\n\n          if (importIds.indexOf(importId) === -1) {\n            importIds.push(importId);\n            names.push(req.as);\n          }\n        }\n        logger.debug(`importing ViewModel resources for ${compileInstruction.associatedModuleId}`, importIds.slice(templateImportCount));\n      }\n    }\n\n    return this.importViewResources(importIds, names, resources, compileInstruction, loadContext);\n  }\n\n  importViewModelResource(moduleImport, moduleMember) {\n    return this.loader.loadModule(moduleImport).then(viewModelModule => {\n      let normalizedId = Origin.get(viewModelModule).moduleId;\n      let resourceModule = this.moduleAnalyzer.analyze(normalizedId, viewModelModule, moduleMember);\n\n      if (!resourceModule.mainResource) {\n        throw new Error(`No view model found in module \"${moduleImport}\".`);\n      }\n\n      resourceModule.initialize(this.container);\n\n      return resourceModule.mainResource;\n    });\n  }\n\n  importViewResources(moduleIds, names, resources, compileInstruction, loadContext) {\n    loadContext = loadContext || new ResourceLoadContext();\n    compileInstruction = compileInstruction || ViewCompileInstruction.normal;\n\n    moduleIds = moduleIds.map(x => this._applyLoaderPlugin(x));\n\n    return this.loader.loadAllModules(moduleIds).then(imports => {\n      let i;\n      let ii;\n      let analysis;\n      let normalizedId;\n      let current;\n      let associatedModule;\n      let container = this.container;\n      let moduleAnalyzer = this.moduleAnalyzer;\n      let allAnalysis = new Array(imports.length);\n\n      for (i = 0, ii = imports.length; i < ii; ++i) {\n        current = imports[i];\n        normalizedId = Origin.get(current).moduleId;\n\n        analysis = moduleAnalyzer.analyze(normalizedId, current);\n        analysis.initialize(container);\n        analysis.register(resources, names[i]);\n\n        allAnalysis[i] = analysis;\n      }\n\n      if (compileInstruction.associatedModuleId) {\n        associatedModule = moduleAnalyzer.getAnalysis(compileInstruction.associatedModuleId);\n\n        if (associatedModule) {\n          associatedModule.register(resources);\n        }\n      }\n\n      for (i = 0, ii = allAnalysis.length; i < ii; ++i) {\n        allAnalysis[i] = allAnalysis[i].load(container, loadContext);\n      }\n\n      return Promise.all(allAnalysis).then(() => resources);\n    });\n  }\n\n  _applyLoaderPlugin(id) {\n    let index = id.lastIndexOf('.');\n    if (index !== -1) {\n      let ext = id.substring(index);\n      let pluginName = this._pluginMap[ext];\n\n      if (pluginName === undefined) {\n        return id;\n      }\n\n      return this.loader.applyPluginToUrl(id, pluginName);\n    }\n\n    return id;\n  }\n}, _class14.viewModelRequireMetadataKey = 'aurelia:view-model-require', _temp5);\n\nexport let Controller = class Controller {\n  constructor(behavior, instruction, viewModel, container) {\n    this.behavior = behavior;\n    this.instruction = instruction;\n    this.viewModel = viewModel;\n    this.isAttached = false;\n    this.view = null;\n    this.isBound = false;\n    this.scope = null;\n    this.container = container;\n    this.elementEvents = container.elementEvents || null;\n\n    let observerLookup = behavior.observerLocator.getOrCreateObserversLookup(viewModel);\n    let handlesBind = behavior.handlesBind;\n    let attributes = instruction.attributes;\n    let boundProperties = this.boundProperties = [];\n    let properties = behavior.properties;\n    let i;\n    let ii;\n\n    behavior._ensurePropertiesDefined(viewModel, observerLookup);\n\n    for (i = 0, ii = properties.length; i < ii; ++i) {\n      properties[i]._initialize(viewModel, observerLookup, attributes, handlesBind, boundProperties);\n    }\n  }\n\n  created(owningView) {\n    if (this.behavior.handlesCreated) {\n      this.viewModel.created(owningView, this.view);\n    }\n  }\n\n  automate(overrideContext, owningView) {\n    this.view.bindingContext = this.viewModel;\n    this.view.overrideContext = overrideContext || createOverrideContext(this.viewModel);\n    this.view._isUserControlled = true;\n\n    if (this.behavior.handlesCreated) {\n      this.viewModel.created(owningView || null, this.view);\n    }\n\n    this.bind(this.view);\n  }\n\n  bind(scope) {\n    let skipSelfSubscriber = this.behavior.handlesBind;\n    let boundProperties = this.boundProperties;\n    let i;\n    let ii;\n    let x;\n    let observer;\n    let selfSubscriber;\n\n    if (this.isBound) {\n      if (this.scope === scope) {\n        return;\n      }\n\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.scope = scope;\n\n    for (i = 0, ii = boundProperties.length; i < ii; ++i) {\n      x = boundProperties[i];\n      observer = x.observer;\n      selfSubscriber = observer.selfSubscriber;\n      observer.publishing = false;\n\n      if (skipSelfSubscriber) {\n        observer.selfSubscriber = null;\n      }\n\n      x.binding.bind(scope);\n      observer.call();\n\n      observer.publishing = true;\n      observer.selfSubscriber = selfSubscriber;\n    }\n\n    let overrideContext;\n    if (this.view !== null) {\n      if (skipSelfSubscriber) {\n        this.view.viewModelScope = scope;\n      }\n\n      if (this.viewModel === scope.overrideContext.bindingContext) {\n        overrideContext = scope.overrideContext;\n      } else if (this.instruction.inheritBindingContext) {\n        overrideContext = createOverrideContext(this.viewModel, scope.overrideContext);\n      } else {\n        overrideContext = createOverrideContext(this.viewModel);\n        overrideContext.__parentOverrideContext = scope.overrideContext;\n      }\n\n      this.view.bind(this.viewModel, overrideContext);\n    } else if (skipSelfSubscriber) {\n      overrideContext = scope.overrideContext;\n\n      if (scope.overrideContext.__parentOverrideContext !== undefined && this.viewModel.viewFactory && this.viewModel.viewFactory.factoryCreateInstruction.partReplacements) {\n        overrideContext = Object.assign({}, scope.overrideContext);\n        overrideContext.parentOverrideContext = scope.overrideContext.__parentOverrideContext;\n      }\n      this.viewModel.bind(scope.bindingContext, overrideContext);\n    }\n  }\n\n  unbind() {\n    if (this.isBound) {\n      let boundProperties = this.boundProperties;\n      let i;\n      let ii;\n\n      this.isBound = false;\n      this.scope = null;\n\n      if (this.view !== null) {\n        this.view.unbind();\n      }\n\n      if (this.behavior.handlesUnbind) {\n        this.viewModel.unbind();\n      }\n\n      if (this.elementEvents !== null) {\n        this.elementEvents.disposeAll();\n      }\n\n      for (i = 0, ii = boundProperties.length; i < ii; ++i) {\n        boundProperties[i].binding.unbind();\n      }\n    }\n  }\n\n  attached() {\n    if (this.isAttached) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.behavior.handlesAttached) {\n      this.viewModel.attached();\n    }\n\n    if (this.view !== null) {\n      this.view.attached();\n    }\n  }\n\n  detached() {\n    if (this.isAttached) {\n      this.isAttached = false;\n\n      if (this.view !== null) {\n        this.view.detached();\n      }\n\n      if (this.behavior.handlesDetached) {\n        this.viewModel.detached();\n      }\n    }\n  }\n};\n\nexport let BehaviorPropertyObserver = (_dec7 = subscriberCollection(), _dec7(_class15 = class BehaviorPropertyObserver {\n  constructor(taskQueue, obj, propertyName, selfSubscriber, initialValue) {\n    this.taskQueue = taskQueue;\n    this.obj = obj;\n    this.propertyName = propertyName;\n    this.notqueued = true;\n    this.publishing = false;\n    this.selfSubscriber = selfSubscriber;\n    this.currentValue = this.oldValue = initialValue;\n  }\n\n  getValue() {\n    return this.currentValue;\n  }\n\n  setValue(newValue) {\n    let oldValue = this.currentValue;\n\n    if (!Object.is(newValue, oldValue)) {\n      this.oldValue = oldValue;\n      this.currentValue = newValue;\n\n      if (this.publishing && this.notqueued) {\n        if (this.taskQueue.flushing) {\n          this.call();\n        } else {\n          this.notqueued = false;\n          this.taskQueue.queueMicroTask(this);\n        }\n      }\n    }\n  }\n\n  call() {\n    let oldValue = this.oldValue;\n    let newValue = this.currentValue;\n\n    this.notqueued = true;\n\n    if (Object.is(newValue, oldValue)) {\n      return;\n    }\n\n    if (this.selfSubscriber) {\n      this.selfSubscriber(newValue, oldValue);\n    }\n\n    this.callSubscribers(newValue, oldValue);\n    this.oldValue = newValue;\n  }\n\n  subscribe(context, callable) {\n    this.addSubscriber(context, callable);\n  }\n\n  unsubscribe(context, callable) {\n    this.removeSubscriber(context, callable);\n  }\n}) || _class15);\n\nfunction getObserver(instance, name) {\n  let lookup = instance.__observers__;\n\n  if (lookup === undefined) {\n    let ctor = Object.getPrototypeOf(instance).constructor;\n    let behavior = metadata.get(metadata.resource, ctor);\n    if (!behavior.isInitialized) {\n      behavior.initialize(Container.instance || new Container(), instance.constructor);\n    }\n\n    lookup = behavior.observerLocator.getOrCreateObserversLookup(instance);\n    behavior._ensurePropertiesDefined(instance, lookup);\n  }\n\n  return lookup[name];\n}\n\nexport let BindableProperty = class BindableProperty {\n  constructor(nameOrConfig) {\n    if (typeof nameOrConfig === 'string') {\n      this.name = nameOrConfig;\n    } else {\n      Object.assign(this, nameOrConfig);\n    }\n\n    this.attribute = this.attribute || _hyphenate(this.name);\n    let defaultBindingMode = this.defaultBindingMode;\n    if (defaultBindingMode === null || defaultBindingMode === undefined) {\n      this.defaultBindingMode = bindingMode.oneWay;\n    } else if (typeof defaultBindingMode === 'string') {\n      this.defaultBindingMode = bindingMode[defaultBindingMode] || bindingMode.oneWay;\n    }\n    this.changeHandler = this.changeHandler || null;\n    this.owner = null;\n    this.descriptor = null;\n  }\n\n  registerWith(target, behavior, descriptor) {\n    behavior.properties.push(this);\n    behavior.attributes[this.attribute] = this;\n    this.owner = behavior;\n\n    if (descriptor) {\n      this.descriptor = descriptor;\n      return this._configureDescriptor(descriptor);\n    }\n\n    return undefined;\n  }\n\n  _configureDescriptor(descriptor) {\n    let name = this.name;\n\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n\n    if ('initializer' in descriptor) {\n      this.defaultValue = descriptor.initializer;\n      delete descriptor.initializer;\n      delete descriptor.writable;\n    }\n\n    if ('value' in descriptor) {\n      this.defaultValue = descriptor.value;\n      delete descriptor.value;\n      delete descriptor.writable;\n    }\n\n    descriptor.get = function () {\n      return getObserver(this, name).getValue();\n    };\n\n    descriptor.set = function (value) {\n      getObserver(this, name).setValue(value);\n    };\n\n    descriptor.get.getObserver = function (obj) {\n      return getObserver(obj, name);\n    };\n\n    return descriptor;\n  }\n\n  defineOn(target, behavior) {\n    let name = this.name;\n    let handlerName;\n\n    if (this.changeHandler === null) {\n      handlerName = name + 'Changed';\n      if (handlerName in target.prototype) {\n        this.changeHandler = handlerName;\n      }\n    }\n\n    if (this.descriptor === null) {\n      Object.defineProperty(target.prototype, name, this._configureDescriptor(behavior, {}));\n    }\n  }\n\n  createObserver(viewModel) {\n    let selfSubscriber = null;\n    let defaultValue = this.defaultValue;\n    let changeHandlerName = this.changeHandler;\n    let name = this.name;\n    let initialValue;\n\n    if (this.hasOptions) {\n      return undefined;\n    }\n\n    if (changeHandlerName in viewModel) {\n      if ('propertyChanged' in viewModel) {\n        selfSubscriber = (newValue, oldValue) => {\n          viewModel[changeHandlerName](newValue, oldValue);\n          viewModel.propertyChanged(name, newValue, oldValue);\n        };\n      } else {\n        selfSubscriber = (newValue, oldValue) => viewModel[changeHandlerName](newValue, oldValue);\n      }\n    } else if ('propertyChanged' in viewModel) {\n      selfSubscriber = (newValue, oldValue) => viewModel.propertyChanged(name, newValue, oldValue);\n    } else if (changeHandlerName !== null) {\n      throw new Error(`Change handler ${changeHandlerName} was specified but not declared on the class.`);\n    }\n\n    if (defaultValue !== undefined) {\n      initialValue = typeof defaultValue === 'function' ? defaultValue.call(viewModel) : defaultValue;\n    }\n\n    return new BehaviorPropertyObserver(this.owner.taskQueue, viewModel, this.name, selfSubscriber, initialValue);\n  }\n\n  _initialize(viewModel, observerLookup, attributes, behaviorHandlesBind, boundProperties) {\n    let selfSubscriber;\n    let observer;\n    let attribute;\n    let defaultValue = this.defaultValue;\n\n    if (this.isDynamic) {\n      for (let key in attributes) {\n        this._createDynamicProperty(viewModel, observerLookup, behaviorHandlesBind, key, attributes[key], boundProperties);\n      }\n    } else if (!this.hasOptions) {\n      observer = observerLookup[this.name];\n\n      if (attributes !== null) {\n        selfSubscriber = observer.selfSubscriber;\n        attribute = attributes[this.attribute];\n\n        if (behaviorHandlesBind) {\n          observer.selfSubscriber = null;\n        }\n\n        if (typeof attribute === 'string') {\n          viewModel[this.name] = attribute;\n          observer.call();\n        } else if (attribute) {\n          boundProperties.push({ observer: observer, binding: attribute.createBinding(viewModel) });\n        } else if (defaultValue !== undefined) {\n          observer.call();\n        }\n\n        observer.selfSubscriber = selfSubscriber;\n      }\n\n      observer.publishing = true;\n    }\n  }\n\n  _createDynamicProperty(viewModel, observerLookup, behaviorHandlesBind, name, attribute, boundProperties) {\n    let changeHandlerName = name + 'Changed';\n    let selfSubscriber = null;\n    let observer;\n    let info;\n\n    if (changeHandlerName in viewModel) {\n      if ('propertyChanged' in viewModel) {\n        selfSubscriber = (newValue, oldValue) => {\n          viewModel[changeHandlerName](newValue, oldValue);\n          viewModel.propertyChanged(name, newValue, oldValue);\n        };\n      } else {\n        selfSubscriber = (newValue, oldValue) => viewModel[changeHandlerName](newValue, oldValue);\n      }\n    } else if ('propertyChanged' in viewModel) {\n      selfSubscriber = (newValue, oldValue) => viewModel.propertyChanged(name, newValue, oldValue);\n    }\n\n    observer = observerLookup[name] = new BehaviorPropertyObserver(this.owner.taskQueue, viewModel, name, selfSubscriber);\n\n    Object.defineProperty(viewModel, name, {\n      configurable: true,\n      enumerable: true,\n      get: observer.getValue.bind(observer),\n      set: observer.setValue.bind(observer)\n    });\n\n    if (behaviorHandlesBind) {\n      observer.selfSubscriber = null;\n    }\n\n    if (typeof attribute === 'string') {\n      viewModel[name] = attribute;\n      observer.call();\n    } else if (attribute) {\n      info = { observer: observer, binding: attribute.createBinding(viewModel) };\n      boundProperties.push(info);\n    }\n\n    observer.publishing = true;\n    observer.selfSubscriber = selfSubscriber;\n  }\n};\n\nlet lastProviderId = 0;\n\nfunction nextProviderId() {\n  return ++lastProviderId;\n}\n\nfunction doProcessContent() {\n  return true;\n}\nfunction doProcessAttributes() {}\n\nexport let HtmlBehaviorResource = class HtmlBehaviorResource {\n  constructor() {\n    this.elementName = null;\n    this.attributeName = null;\n    this.attributeDefaultBindingMode = undefined;\n    this.liftsContent = false;\n    this.targetShadowDOM = false;\n    this.shadowDOMOptions = null;\n    this.processAttributes = doProcessAttributes;\n    this.processContent = doProcessContent;\n    this.usesShadowDOM = false;\n    this.childBindings = null;\n    this.hasDynamicOptions = false;\n    this.containerless = false;\n    this.properties = [];\n    this.attributes = {};\n    this.isInitialized = false;\n    this.primaryProperty = null;\n  }\n\n  static convention(name, existing) {\n    let behavior;\n\n    if (name.endsWith('CustomAttribute')) {\n      behavior = existing || new HtmlBehaviorResource();\n      behavior.attributeName = _hyphenate(name.substring(0, name.length - 15));\n    }\n\n    if (name.endsWith('CustomElement')) {\n      behavior = existing || new HtmlBehaviorResource();\n      behavior.elementName = _hyphenate(name.substring(0, name.length - 13));\n    }\n\n    return behavior;\n  }\n\n  addChildBinding(behavior) {\n    if (this.childBindings === null) {\n      this.childBindings = [];\n    }\n\n    this.childBindings.push(behavior);\n  }\n\n  initialize(container, target) {\n    let proto = target.prototype;\n    let properties = this.properties;\n    let attributeName = this.attributeName;\n    let attributeDefaultBindingMode = this.attributeDefaultBindingMode;\n    let i;\n    let ii;\n    let current;\n\n    if (this.isInitialized) {\n      return;\n    }\n\n    this.isInitialized = true;\n    target.__providerId__ = nextProviderId();\n\n    this.observerLocator = container.get(ObserverLocator);\n    this.taskQueue = container.get(TaskQueue);\n\n    this.target = target;\n    this.usesShadowDOM = this.targetShadowDOM && FEATURE.shadowDOM;\n    this.handlesCreated = 'created' in proto;\n    this.handlesBind = 'bind' in proto;\n    this.handlesUnbind = 'unbind' in proto;\n    this.handlesAttached = 'attached' in proto;\n    this.handlesDetached = 'detached' in proto;\n    this.htmlName = this.elementName || this.attributeName;\n\n    if (attributeName !== null) {\n      if (properties.length === 0) {\n        new BindableProperty({\n          name: 'value',\n          changeHandler: 'valueChanged' in proto ? 'valueChanged' : null,\n          attribute: attributeName,\n          defaultBindingMode: attributeDefaultBindingMode\n        }).registerWith(target, this);\n      }\n\n      current = properties[0];\n\n      if (properties.length === 1 && current.name === 'value') {\n        current.isDynamic = current.hasOptions = this.hasDynamicOptions;\n        current.defineOn(target, this);\n      } else {\n        for (i = 0, ii = properties.length; i < ii; ++i) {\n          properties[i].defineOn(target, this);\n          if (properties[i].primaryProperty) {\n            if (this.primaryProperty) {\n              throw new Error('Only one bindable property on a custom element can be defined as the default');\n            }\n            this.primaryProperty = properties[i];\n          }\n        }\n\n        current = new BindableProperty({\n          name: 'value',\n          changeHandler: 'valueChanged' in proto ? 'valueChanged' : null,\n          attribute: attributeName,\n          defaultBindingMode: attributeDefaultBindingMode\n        });\n\n        current.hasOptions = true;\n        current.registerWith(target, this);\n      }\n    } else {\n      for (i = 0, ii = properties.length; i < ii; ++i) {\n        properties[i].defineOn(target, this);\n      }\n\n      this._copyInheritedProperties(container, target);\n    }\n  }\n\n  register(registry, name) {\n    if (this.attributeName !== null) {\n      registry.registerAttribute(name || this.attributeName, this, this.attributeName);\n\n      if (Array.isArray(this.aliases)) {\n        this.aliases.forEach(alias => {\n          registry.registerAttribute(alias, this, this.attributeName);\n        });\n      }\n    }\n\n    if (this.elementName !== null) {\n      registry.registerElement(name || this.elementName, this);\n    }\n  }\n\n  load(container, target, loadContext, viewStrategy, transientView) {\n    let options;\n\n    if (this.elementName !== null) {\n      viewStrategy = container.get(ViewLocator).getViewStrategy(viewStrategy || this.viewStrategy || target);\n      options = new ViewCompileInstruction(this.targetShadowDOM, true);\n\n      if (!viewStrategy.moduleId) {\n        viewStrategy.moduleId = Origin.get(target).moduleId;\n      }\n\n      return viewStrategy.loadViewFactory(container.get(ViewEngine), options, loadContext, target).then(viewFactory => {\n        if (!transientView || !this.viewFactory) {\n          this.viewFactory = viewFactory;\n        }\n\n        return viewFactory;\n      });\n    }\n\n    return Promise.resolve(this);\n  }\n\n  compile(compiler, resources, node, instruction, parentNode) {\n    if (this.liftsContent) {\n      if (!instruction.viewFactory) {\n        let template = DOM.createElement('template');\n        let fragment = DOM.createDocumentFragment();\n        let cacheSize = node.getAttribute('view-cache');\n        let part = node.getAttribute('part');\n\n        node.removeAttribute(instruction.originalAttrName);\n        DOM.replaceNode(template, node, parentNode);\n        fragment.appendChild(node);\n        instruction.viewFactory = compiler.compile(fragment, resources);\n\n        if (part) {\n          instruction.viewFactory.part = part;\n          node.removeAttribute('part');\n        }\n\n        if (cacheSize) {\n          instruction.viewFactory.setCacheSize(cacheSize);\n          node.removeAttribute('view-cache');\n        }\n\n        node = template;\n      }\n    } else if (this.elementName !== null) {\n      let partReplacements = {};\n\n      if (this.processContent(compiler, resources, node, instruction) && node.hasChildNodes()) {\n        let currentChild = node.firstChild;\n        let contentElement = this.usesShadowDOM ? null : DOM.createElement('au-content');\n        let nextSibling;\n        let toReplace;\n\n        while (currentChild) {\n          nextSibling = currentChild.nextSibling;\n\n          if (currentChild.tagName === 'TEMPLATE' && (toReplace = currentChild.getAttribute('replace-part'))) {\n            partReplacements[toReplace] = compiler.compile(currentChild, resources);\n            DOM.removeNode(currentChild, parentNode);\n            instruction.partReplacements = partReplacements;\n          } else if (contentElement !== null) {\n            if (currentChild.nodeType === 3 && _isAllWhitespace(currentChild)) {\n              DOM.removeNode(currentChild, parentNode);\n            } else {\n              contentElement.appendChild(currentChild);\n            }\n          }\n\n          currentChild = nextSibling;\n        }\n\n        if (contentElement !== null && contentElement.hasChildNodes()) {\n          node.appendChild(contentElement);\n        }\n\n        instruction.skipContentProcessing = false;\n      } else {\n        instruction.skipContentProcessing = true;\n      }\n    } else if (!this.processContent(compiler, resources, node, instruction)) {\n      instruction.skipContentProcessing = true;\n    }\n\n    return node;\n  }\n\n  create(container, instruction, element, bindings) {\n    let viewHost;\n    let au = null;\n\n    instruction = instruction || BehaviorInstruction.normal;\n    element = element || null;\n    bindings = bindings || null;\n\n    if (this.elementName !== null && element) {\n      if (this.usesShadowDOM) {\n        viewHost = element.attachShadow(this.shadowDOMOptions);\n        container.registerInstance(DOM.boundary, viewHost);\n      } else {\n        viewHost = element;\n        if (this.targetShadowDOM) {\n          container.registerInstance(DOM.boundary, viewHost);\n        }\n      }\n    }\n\n    if (element !== null) {\n      element.au = au = element.au || {};\n    }\n\n    let viewModel = instruction.viewModel || container.get(this.target);\n    let controller = new Controller(this, instruction, viewModel, container);\n    let childBindings = this.childBindings;\n    let viewFactory;\n\n    if (this.liftsContent) {\n      au.controller = controller;\n    } else if (this.elementName !== null) {\n      viewFactory = instruction.viewFactory || this.viewFactory;\n      container.viewModel = viewModel;\n\n      if (viewFactory) {\n        controller.view = viewFactory.create(container, instruction, element);\n      }\n\n      if (element !== null) {\n        au.controller = controller;\n\n        if (controller.view) {\n          if (!this.usesShadowDOM && (element.childNodes.length === 1 || element.contentElement)) {\n            let contentElement = element.childNodes[0] || element.contentElement;\n            controller.view.contentView = { fragment: contentElement };\n            contentElement.parentNode && DOM.removeNode(contentElement);\n          }\n\n          if (instruction.anchorIsContainer) {\n            if (childBindings !== null) {\n              for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n                controller.view.addBinding(childBindings[i].create(element, viewModel, controller));\n              }\n            }\n\n            controller.view.appendNodesTo(viewHost);\n          } else {\n            controller.view.insertNodesBefore(viewHost);\n          }\n        } else if (childBindings !== null) {\n          for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n            bindings.push(childBindings[i].create(element, viewModel, controller));\n          }\n        }\n      } else if (controller.view) {\n        controller.view.controller = controller;\n\n        if (childBindings !== null) {\n          for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n            controller.view.addBinding(childBindings[i].create(instruction.host, viewModel, controller));\n          }\n        }\n      } else if (childBindings !== null) {\n        for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n          bindings.push(childBindings[i].create(instruction.host, viewModel, controller));\n        }\n      }\n    } else if (childBindings !== null) {\n      for (let i = 0, ii = childBindings.length; i < ii; ++i) {\n        bindings.push(childBindings[i].create(element, viewModel, controller));\n      }\n    }\n\n    if (au !== null) {\n      au[this.htmlName] = controller;\n    }\n\n    if (instruction.initiatedByBehavior && viewFactory) {\n      controller.view.created();\n    }\n\n    return controller;\n  }\n\n  _ensurePropertiesDefined(instance, lookup) {\n    let properties;\n    let i;\n    let ii;\n    let observer;\n\n    if ('__propertiesDefined__' in lookup) {\n      return;\n    }\n\n    lookup.__propertiesDefined__ = true;\n    properties = this.properties;\n\n    for (i = 0, ii = properties.length; i < ii; ++i) {\n      observer = properties[i].createObserver(instance);\n\n      if (observer !== undefined) {\n        lookup[observer.propertyName] = observer;\n      }\n    }\n  }\n\n  _copyInheritedProperties(container, target) {\n    let behavior;\n    let derived = target;\n\n    while (true) {\n      let proto = Object.getPrototypeOf(target.prototype);\n      target = proto && proto.constructor;\n      if (!target) {\n        return;\n      }\n      behavior = metadata.getOwn(metadata.resource, target);\n      if (behavior) {\n        break;\n      }\n    }\n    behavior.initialize(container, target);\n    for (let i = 0, ii = behavior.properties.length; i < ii; ++i) {\n      let prop = behavior.properties[i];\n\n      if (this.properties.some(p => p.name === prop.name)) {\n        continue;\n      }\n\n      new BindableProperty(prop).registerWith(derived, this);\n    }\n  }\n};\n\nfunction createChildObserverDecorator(selectorOrConfig, all) {\n  return function (target, key, descriptor) {\n    let actualTarget = typeof key === 'string' ? target.constructor : target;\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, actualTarget);\n\n    if (typeof selectorOrConfig === 'string') {\n      selectorOrConfig = {\n        selector: selectorOrConfig,\n        name: key\n      };\n    }\n\n    if (descriptor) {\n      descriptor.writable = true;\n      descriptor.configurable = true;\n    }\n\n    selectorOrConfig.all = all;\n    r.addChildBinding(new ChildObserver(selectorOrConfig));\n  };\n}\n\nexport function children(selectorOrConfig) {\n  return createChildObserverDecorator(selectorOrConfig, true);\n}\n\nexport function child(selectorOrConfig) {\n  return createChildObserverDecorator(selectorOrConfig, false);\n}\n\nlet ChildObserver = class ChildObserver {\n  constructor(config) {\n    this.name = config.name;\n    this.changeHandler = config.changeHandler || this.name + 'Changed';\n    this.selector = config.selector;\n    this.all = config.all;\n  }\n\n  create(viewHost, viewModel, controller) {\n    return new ChildObserverBinder(this.selector, viewHost, this.name, viewModel, controller, this.changeHandler, this.all);\n  }\n};\n\n\nconst noMutations = [];\n\nfunction trackMutation(groupedMutations, binder, record) {\n  let mutations = groupedMutations.get(binder);\n\n  if (!mutations) {\n    mutations = [];\n    groupedMutations.set(binder, mutations);\n  }\n\n  mutations.push(record);\n}\n\nfunction onChildChange(mutations, observer) {\n  let binders = observer.binders;\n  let bindersLength = binders.length;\n\n  let groupedMutations = new Map();\n\n  for (let i = 0, ii = mutations.length; i < ii; ++i) {\n    let record = mutations[i];\n    let added = record.addedNodes;\n    let removed = record.removedNodes;\n\n    for (let j = 0, jj = removed.length; j < jj; ++j) {\n      let node = removed[j];\n      if (node.nodeType === 1) {\n        for (let k = 0; k < bindersLength; ++k) {\n          let binder = binders[k];\n\n          if (binder.onRemove(node)) {\n            trackMutation(groupedMutations, binder, record);\n          }\n        }\n      }\n    }\n\n    for (let j = 0, jj = added.length; j < jj; ++j) {\n      let node = added[j];\n      if (node.nodeType === 1) {\n        for (let k = 0; k < bindersLength; ++k) {\n          let binder = binders[k];\n\n          if (binder.onAdd(node)) {\n            trackMutation(groupedMutations, binder, record);\n          }\n        }\n      }\n    }\n  }\n\n  groupedMutations.forEach((mutationRecords, binder) => {\n    if (binder.isBound && binder.changeHandler !== null) {\n      binder.viewModel[binder.changeHandler](mutationRecords);\n    }\n  });\n}\n\nlet ChildObserverBinder = class ChildObserverBinder {\n  constructor(selector, viewHost, property, viewModel, controller, changeHandler, all) {\n    this.selector = selector;\n\n    this.viewHost = viewHost;\n    this.property = property;\n    this.viewModel = viewModel;\n    this.controller = controller;\n    this.changeHandler = changeHandler in viewModel ? changeHandler : null;\n    this.usesShadowDOM = controller.behavior.usesShadowDOM;\n    this.all = all;\n\n    if (!this.usesShadowDOM && controller.view && controller.view.contentView) {\n      this.contentView = controller.view.contentView;\n    } else {\n      this.contentView = null;\n    }\n    this.source = null;\n    this.isBound = false;\n  }\n\n  matches(element) {\n    if (element.matches(this.selector)) {\n      if (this.contentView === null) {\n        return true;\n      }\n\n      let contentView = this.contentView;\n      let assignedSlot = element.auAssignedSlot;\n\n      if (assignedSlot && assignedSlot.projectFromAnchors) {\n        let anchors = assignedSlot.projectFromAnchors;\n\n        for (let i = 0, ii = anchors.length; i < ii; ++i) {\n          if (anchors[i].auOwnerView === contentView) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return element.auOwnerView === contentView;\n    }\n\n    return false;\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.source = source;\n    }\n    this.isBound = true;\n\n    let viewHost = this.viewHost;\n    let viewModel = this.viewModel;\n    let observer = viewHost.__childObserver__;\n\n    if (!observer) {\n      observer = viewHost.__childObserver__ = DOM.createMutationObserver(onChildChange);\n\n      let options = {\n        childList: true,\n        subtree: !this.usesShadowDOM\n      };\n\n      observer.observe(viewHost, options);\n      observer.binders = [];\n    }\n\n    observer.binders.push(this);\n\n    if (this.usesShadowDOM) {\n      let current = viewHost.firstElementChild;\n\n      if (this.all) {\n        let items = viewModel[this.property];\n        if (!items) {\n          items = viewModel[this.property] = [];\n        } else {\n          items.splice(0);\n        }\n\n        while (current) {\n          if (this.matches(current)) {\n            items.push(current.au && current.au.controller ? current.au.controller.viewModel : current);\n          }\n\n          current = current.nextElementSibling;\n        }\n\n        if (this.changeHandler !== null) {\n          this.viewModel[this.changeHandler](noMutations);\n        }\n      } else {\n        while (current) {\n          if (this.matches(current)) {\n            let value = current.au && current.au.controller ? current.au.controller.viewModel : current;\n            this.viewModel[this.property] = value;\n\n            if (this.changeHandler !== null) {\n              this.viewModel[this.changeHandler](value);\n            }\n\n            break;\n          }\n\n          current = current.nextElementSibling;\n        }\n      }\n    }\n  }\n\n  onRemove(element) {\n    if (this.matches(element)) {\n      let value = element.au && element.au.controller ? element.au.controller.viewModel : element;\n\n      if (this.all) {\n        let items = this.viewModel[this.property] || (this.viewModel[this.property] = []);\n        let index = items.indexOf(value);\n\n        if (index !== -1) {\n          items.splice(index, 1);\n        }\n\n        return true;\n      }\n\n      const currentValue = this.viewModel[this.property];\n      if (currentValue === value) {\n        this.viewModel[this.property] = null;\n\n        if (this.isBound && this.changeHandler !== null) {\n          this.viewModel[this.changeHandler](value);\n        }\n      }\n    }\n\n    return false;\n  }\n\n  onAdd(element) {\n    if (this.matches(element)) {\n      let value = element.au && element.au.controller ? element.au.controller.viewModel : element;\n\n      if (this.all) {\n        let items = this.viewModel[this.property] || (this.viewModel[this.property] = []);\n\n        if (this.selector === '*') {\n          items.push(value);\n          return true;\n        }\n\n        let index = 0;\n        let prev = element.previousElementSibling;\n\n        while (prev) {\n          if (this.matches(prev)) {\n            index++;\n          }\n\n          prev = prev.previousElementSibling;\n        }\n\n        items.splice(index, 0, value);\n        return true;\n      }\n\n      this.viewModel[this.property] = value;\n\n      if (this.isBound && this.changeHandler !== null) {\n        this.viewModel[this.changeHandler](value);\n      }\n    }\n\n    return false;\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    this.source = null;\n    let childObserver = this.viewHost.__childObserver__;\n    if (childObserver) {\n      let binders = childObserver.binders;\n      if (binders && binders.length) {\n        let idx = binders.indexOf(this);\n        if (idx !== -1) {\n          binders.splice(idx, 1);\n        }\n        if (binders.length === 0) {\n          childObserver.disconnect();\n          this.viewHost.__childObserver__ = null;\n        }\n      }\n\n      if (this.usesShadowDOM) {\n        this.viewModel[this.property] = null;\n      }\n    }\n  }\n};\n\n\nfunction remove(viewSlot, previous) {\n  return Array.isArray(previous) ? viewSlot.removeMany(previous, true) : viewSlot.remove(previous, true);\n}\n\nexport const SwapStrategies = {\n  before(viewSlot, previous, callback) {\n    return previous === undefined ? callback() : callback().then(() => remove(viewSlot, previous));\n  },\n\n  with(viewSlot, previous, callback) {\n    return previous === undefined ? callback() : Promise.all([remove(viewSlot, previous), callback()]);\n  },\n\n  after(viewSlot, previous, callback) {\n    return Promise.resolve(viewSlot.removeAll(true)).then(callback);\n  }\n};\n\nfunction tryActivateViewModel(context) {\n  if (context.skipActivation || typeof context.viewModel.activate !== 'function') {\n    return Promise.resolve();\n  }\n\n  return context.viewModel.activate(context.model) || Promise.resolve();\n}\n\nexport let CompositionEngine = (_dec8 = inject(ViewEngine, ViewLocator), _dec8(_class16 = class CompositionEngine {\n  constructor(viewEngine, viewLocator) {\n    this.viewEngine = viewEngine;\n    this.viewLocator = viewLocator;\n  }\n\n  _swap(context, view) {\n    let swapStrategy = SwapStrategies[context.swapOrder] || SwapStrategies.after;\n    let previousViews = context.viewSlot.children.slice();\n\n    return swapStrategy(context.viewSlot, previousViews, () => {\n      return Promise.resolve(context.viewSlot.add(view)).then(() => {\n        if (context.currentController) {\n          context.currentController.unbind();\n        }\n      });\n    }).then(() => {\n      if (context.compositionTransactionNotifier) {\n        context.compositionTransactionNotifier.done();\n      }\n    });\n  }\n\n  _createControllerAndSwap(context) {\n    return this.createController(context).then(controller => {\n      if (context.compositionTransactionOwnershipToken) {\n        return context.compositionTransactionOwnershipToken.waitForCompositionComplete().then(() => {\n          controller.automate(context.overrideContext, context.owningView);\n\n          return this._swap(context, controller.view);\n        }).then(() => controller);\n      }\n\n      controller.automate(context.overrideContext, context.owningView);\n\n      return this._swap(context, controller.view).then(() => controller);\n    });\n  }\n\n  createController(context) {\n    let childContainer;\n    let viewModel;\n    let viewModelResource;\n\n    let m;\n\n    return this.ensureViewModel(context).then(tryActivateViewModel).then(() => {\n      childContainer = context.childContainer;\n      viewModel = context.viewModel;\n      viewModelResource = context.viewModelResource;\n      m = viewModelResource.metadata;\n\n      let viewStrategy = this.viewLocator.getViewStrategy(context.view || viewModel);\n\n      if (context.viewResources) {\n        viewStrategy.makeRelativeTo(context.viewResources.viewUrl);\n      }\n\n      return m.load(childContainer, viewModelResource.value, null, viewStrategy, true);\n    }).then(viewFactory => m.create(childContainer, BehaviorInstruction.dynamic(context.host, viewModel, viewFactory)));\n  }\n\n  ensureViewModel(context) {\n    let childContainer = context.childContainer = context.childContainer || context.container.createChild();\n\n    if (typeof context.viewModel === 'string') {\n      context.viewModel = context.viewResources ? context.viewResources.relativeToView(context.viewModel) : context.viewModel;\n\n      return this.viewEngine.importViewModelResource(context.viewModel).then(viewModelResource => {\n        childContainer.autoRegister(viewModelResource.value);\n\n        if (context.host) {\n          childContainer.registerInstance(DOM.Element, context.host);\n        }\n\n        context.viewModel = childContainer.viewModel = childContainer.get(viewModelResource.value);\n        context.viewModelResource = viewModelResource;\n        return context;\n      });\n    }\n\n    let ctor = context.viewModel.constructor;\n    let isClass = typeof context.viewModel === 'function';\n    if (isClass) {\n      ctor = context.viewModel;\n      childContainer.autoRegister(ctor);\n    }\n    let m = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, ctor);\n\n    m.elementName = m.elementName || 'dynamic-element';\n\n    m.initialize(isClass ? childContainer : context.container || childContainer, ctor);\n\n    context.viewModelResource = { metadata: m, value: ctor };\n\n    if (context.host) {\n      childContainer.registerInstance(DOM.Element, context.host);\n    }\n    childContainer.viewModel = context.viewModel = isClass ? childContainer.get(ctor) : context.viewModel;\n    return Promise.resolve(context);\n  }\n\n  compose(context) {\n    context.childContainer = context.childContainer || context.container.createChild();\n    context.view = this.viewLocator.getViewStrategy(context.view);\n\n    let transaction = context.childContainer.get(CompositionTransaction);\n    let compositionTransactionOwnershipToken = transaction.tryCapture();\n\n    if (compositionTransactionOwnershipToken) {\n      context.compositionTransactionOwnershipToken = compositionTransactionOwnershipToken;\n    } else {\n      context.compositionTransactionNotifier = transaction.enlist();\n    }\n\n    if (context.viewModel) {\n      return this._createControllerAndSwap(context);\n    } else if (context.view) {\n      if (context.viewResources) {\n        context.view.makeRelativeTo(context.viewResources.viewUrl);\n      }\n\n      return context.view.loadViewFactory(this.viewEngine, new ViewCompileInstruction()).then(viewFactory => {\n        let result = viewFactory.create(context.childContainer);\n        result.bind(context.bindingContext, context.overrideContext);\n\n        if (context.compositionTransactionOwnershipToken) {\n          return context.compositionTransactionOwnershipToken.waitForCompositionComplete().then(() => this._swap(context, result)).then(() => result);\n        }\n\n        return this._swap(context, result).then(() => result);\n      });\n    } else if (context.viewSlot) {\n      context.viewSlot.removeAll();\n\n      if (context.compositionTransactionNotifier) {\n        context.compositionTransactionNotifier.done();\n      }\n\n      return Promise.resolve(null);\n    }\n\n    return Promise.resolve(null);\n  }\n}) || _class16);\n\nexport let ElementConfigResource = class ElementConfigResource {\n  initialize(container, target) {}\n\n  register(registry, name) {}\n\n  load(container, target) {\n    let config = new target();\n    let eventManager = container.get(EventManager);\n    eventManager.registerElementConfig(config);\n  }\n};\n\nexport function resource(instanceOrConfig) {\n  return function (target) {\n    let isConfig = typeof instanceOrConfig === 'string' || Object.getPrototypeOf(instanceOrConfig) === Object.prototype;\n    if (isConfig) {\n      target.$resource = instanceOrConfig;\n    } else {\n      metadata.define(metadata.resource, instanceOrConfig, target);\n    }\n  };\n}\n\nexport function behavior(override) {\n  return function (target) {\n    if (override instanceof HtmlBehaviorResource) {\n      metadata.define(metadata.resource, override, target);\n    } else {\n      let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, target);\n      Object.assign(r, override);\n    }\n  };\n}\n\nexport function customElement(name) {\n  return function (target) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, target);\n    r.elementName = validateBehaviorName(name, 'custom element');\n  };\n}\n\nexport function customAttribute(name, defaultBindingMode, aliases) {\n  return function (target) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, target);\n    r.attributeName = validateBehaviorName(name, 'custom attribute');\n    r.attributeDefaultBindingMode = defaultBindingMode;\n    r.aliases = aliases;\n  };\n}\n\nexport function templateController(target) {\n  let deco = function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.liftsContent = true;\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport function bindable(nameOrConfigOrTarget, key, descriptor) {\n  let deco = function (target, key2, descriptor2) {\n    let actualTarget = key2 ? target.constructor : target;\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, actualTarget);\n    let prop;\n\n    if (key2) {\n      nameOrConfigOrTarget = nameOrConfigOrTarget || {};\n      nameOrConfigOrTarget.name = key2;\n    }\n\n    prop = new BindableProperty(nameOrConfigOrTarget);\n    return prop.registerWith(actualTarget, r, descriptor2);\n  };\n\n  if (!nameOrConfigOrTarget) {\n    return deco;\n  }\n\n  if (key) {\n    let target = nameOrConfigOrTarget;\n    nameOrConfigOrTarget = null;\n    return deco(target, key, descriptor);\n  }\n\n  return deco;\n}\n\nexport function dynamicOptions(target) {\n  let deco = function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.hasDynamicOptions = true;\n  };\n\n  return target ? deco(target) : deco;\n}\n\nconst defaultShadowDOMOptions = { mode: 'open' };\n\nexport function useShadowDOM(targetOrOptions) {\n  let options = typeof targetOrOptions === 'function' || !targetOrOptions ? defaultShadowDOMOptions : targetOrOptions;\n\n  let deco = function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.targetShadowDOM = true;\n    r.shadowDOMOptions = options;\n  };\n\n  return typeof targetOrOptions === 'function' ? deco(targetOrOptions) : deco;\n}\n\nexport function processAttributes(processor) {\n  return function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.processAttributes = function (compiler, resources, node, attributes, elementInstruction) {\n      try {\n        processor(compiler, resources, node, attributes, elementInstruction);\n      } catch (error) {\n        LogManager.getLogger('templating').error(error);\n      }\n    };\n  };\n}\n\nfunction doNotProcessContent() {\n  return false;\n}\n\nexport function processContent(processor) {\n  return function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.processContent = processor ? function (compiler, resources, node, instruction) {\n      try {\n        return processor(compiler, resources, node, instruction);\n      } catch (error) {\n        LogManager.getLogger('templating').error(error);\n        return false;\n      }\n    } : doNotProcessContent;\n  };\n}\n\nexport function containerless(target) {\n  let deco = function (t) {\n    let r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, t);\n    r.containerless = true;\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport function useViewStrategy(strategy) {\n  return function (target) {\n    metadata.define(ViewLocator.viewStrategyMetadataKey, strategy, target);\n  };\n}\n\nexport function useView(path) {\n  return useViewStrategy(new RelativeViewStrategy(path));\n}\n\nexport function inlineView(markup, dependencies, dependencyBaseUrl) {\n  return useViewStrategy(new InlineViewStrategy(markup, dependencies, dependencyBaseUrl));\n}\n\nexport function noView(targetOrDependencies, dependencyBaseUrl) {\n  let target;\n  let dependencies;\n  if (typeof targetOrDependencies === 'function') {\n    target = targetOrDependencies;\n  } else {\n    dependencies = targetOrDependencies;\n    target = undefined;\n  }\n\n  let deco = function (t) {\n    metadata.define(ViewLocator.viewStrategyMetadataKey, new NoViewStrategy(dependencies, dependencyBaseUrl), t);\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport function view(templateOrConfig) {\n  return function (target) {\n    target.$view = templateOrConfig;\n  };\n}\n\nexport function elementConfig(target) {\n  let deco = function (t) {\n    metadata.define(metadata.resource, new ElementConfigResource(), t);\n  };\n\n  return target ? deco(target) : deco;\n}\n\nexport function viewResources(...resources) {\n  return function (target) {\n    metadata.define(ViewEngine.viewModelRequireMetadataKey, resources, target);\n  };\n}\n\nexport let TemplatingEngine = (_dec9 = inject(Container, ModuleAnalyzer, ViewCompiler, CompositionEngine), _dec9(_class17 = class TemplatingEngine {\n  constructor(container, moduleAnalyzer, viewCompiler, compositionEngine) {\n    this._container = container;\n    this._moduleAnalyzer = moduleAnalyzer;\n    this._viewCompiler = viewCompiler;\n    this._compositionEngine = compositionEngine;\n    container.registerInstance(Animator, Animator.instance = new Animator());\n  }\n\n  configureAnimator(animator) {\n    this._container.unregister(Animator);\n    this._container.registerInstance(Animator, Animator.instance = animator);\n  }\n\n  compose(context) {\n    return this._compositionEngine.compose(context);\n  }\n\n  enhance(instruction) {\n    if (instruction instanceof DOM.Element) {\n      instruction = { element: instruction };\n    }\n\n    let compilerInstructions = { letExpressions: [] };\n    let resources = instruction.resources || this._container.get(ViewResources);\n\n    this._viewCompiler._compileNode(instruction.element, resources, compilerInstructions, instruction.element.parentNode, 'root', true);\n\n    let factory = new ViewFactory(instruction.element, compilerInstructions, resources);\n    let container = instruction.container || this._container.createChild();\n    let view = factory.create(container, BehaviorInstruction.enhance());\n\n    view.bind(instruction.bindingContext || {}, instruction.overrideContext);\n\n    view.firstChild = view.lastChild = view.fragment;\n    view.fragment = DOM.createDocumentFragment();\n    view.attached();\n\n    return view;\n  }\n}) || _class17);","import { getLogger } from 'aurelia-logging';\nimport { BehaviorPropertyObserver, BindableProperty, HtmlBehaviorResource } from 'aurelia-templating';\nimport { metadata } from 'aurelia-metadata';\n\nconst coerceFunctions = {\n    none(a) {\n        return a;\n    },\n    number(a) {\n        return Number(a);\n    },\n    string(a) {\n        return '' + a;\n    },\n    boolean(a) {\n        return !!a;\n    },\n    booleanAttr(val) {\n        return val || val === '' ? true : false;\n    },\n    date(val) {\n        // Invalid date instances are quite problematic\n        // so we need to deal with it properly by default\n        if (val === null || val === undefined) {\n            return null;\n        }\n        const d = new Date(val);\n        return isNaN(d.getTime()) ? null : d;\n    }\n};\nconst coerceFunctionMap = new Map([\n    [Boolean, 'boolean'],\n    [String, 'string'],\n    [Date, 'date'],\n    [Number, 'number'],\n]);\n/**\n * Map a class to a string for typescript property coerce\n * @param type the property class to register\n * @param strType the string that represents class in the lookup\n * @param coerceFunction coerce function to register with param strType\n */\nfunction mapCoerceFunction(type, strType, coerceFunction) {\n    coerceFunction = coerceFunction || type.coerce;\n    if (typeof strType !== 'string' || typeof coerceFunction !== 'function') {\n        getLogger('map-coerce-function')\n            .warn(`Bad attempt at mapping coerce function for type: ${type.name} to: ${strType}`);\n        return;\n    }\n    coerceFunctions[strType] = coerceFunction;\n    coerceFunctionMap.set(type, strType);\n}\n\n// tslint:disable: interface-name no-invalid-this no-non-null-assertion\nBehaviorPropertyObserver.prototype.setCoerce = function (coerce) {\n    this.coerce = typeof coerce === 'function' ? coerce : coerceFunctions[coerce];\n    if (this.coerce === undefined) {\n        getLogger('behavior-property-observer')\n            .warn(`Invalid coerce instruction. Should be either one of ${Object.keys(coerceFunctions)} or a function.`);\n    }\n};\n/**\n * Slightly override the builtin implementation that will handle coercion\n */\nBehaviorPropertyObserver.prototype.setValue = function (newValue) {\n    const oldValue = this.currentValue;\n    const coercedValue = this.coerce === undefined ? newValue : this.coerce(newValue);\n    if (oldValue !== coercedValue) {\n        this.oldValue = oldValue;\n        this.currentValue = coercedValue;\n        if (this.publishing && this.notqueued) {\n            if (this.taskQueue.flushing) {\n                this.call();\n            }\n            else {\n                this.notqueued = false;\n                this.taskQueue.queueMicroTask(this);\n            }\n        }\n    }\n};\nBindableProperty.prototype.createObserver = function (viewModel) {\n    let selfSubscriber = null;\n    const defaultValue = this.defaultValue;\n    const changeHandlerName = this.changeHandler;\n    const name = this.name;\n    let initialValue;\n    if (this.hasOptions) {\n        return undefined;\n    }\n    if (changeHandlerName in viewModel) {\n        if ('propertyChanged' in viewModel) {\n            selfSubscriber = (newValue, oldValue) => {\n                viewModel[changeHandlerName](newValue, oldValue);\n                viewModel.propertyChanged(name, newValue, oldValue);\n            };\n        }\n        else {\n            selfSubscriber = (newValue, oldValue) => viewModel[changeHandlerName](newValue, oldValue);\n        }\n    }\n    else if ('propertyChanged' in viewModel) {\n        selfSubscriber = (newValue, oldValue) => viewModel.propertyChanged(name, newValue, oldValue);\n    }\n    else if (changeHandlerName !== null) {\n        throw new Error(`Change handler ${changeHandlerName} was specified but not declared on the class.`);\n    }\n    if (defaultValue !== undefined) {\n        initialValue = typeof defaultValue === 'function' ? defaultValue.call(viewModel) : defaultValue;\n    }\n    const observer = new BehaviorPropertyObserver(this.owner.taskQueue, viewModel, this.name, selfSubscriber, initialValue);\n    if (this.coerce !== undefined) {\n        observer.setCoerce(this.coerce);\n        observer.currentValue = observer.oldValue = observer.coerce === undefined ? observer.currentValue : observer.coerce(initialValue);\n    }\n    return observer;\n};\nBindableProperty.prototype._createDynamicProperty = function (viewModel, observerLookup, behaviorHandlesBind, name, attribute, boundProperties) {\n    const changeHandlerName = `${name}Changed`;\n    let selfSubscriber = null;\n    let observer;\n    let info;\n    if (changeHandlerName in viewModel) {\n        if ('propertyChanged' in viewModel) {\n            selfSubscriber = (newValue, oldValue) => {\n                viewModel[changeHandlerName](newValue, oldValue);\n                viewModel.propertyChanged(name, newValue, oldValue);\n            };\n        }\n        else {\n            selfSubscriber = (newValue, oldValue) => viewModel[changeHandlerName](newValue, oldValue);\n        }\n    }\n    else if ('propertyChanged' in viewModel) {\n        selfSubscriber = (newValue, oldValue) => viewModel.propertyChanged(name, newValue, oldValue);\n    }\n    observer = observerLookup[name] = new BehaviorPropertyObserver(this.owner.taskQueue, viewModel, name, selfSubscriber, undefined);\n    observer.setCoerce(this.coerce);\n    observer.currentValue = observer.oldValue = observer.coerce === undefined ? observer.currentValue : observer.coerce(undefined);\n    Object.defineProperty(viewModel, name, {\n        configurable: true,\n        enumerable: true,\n        get: observer.getValue.bind(observer),\n        set: observer.setValue.bind(observer)\n    });\n    if (behaviorHandlesBind) {\n        observer.selfSubscriber = null;\n    }\n    if (typeof attribute === 'string') {\n        viewModel[name] = attribute;\n        observer.call();\n    }\n    else if (attribute) {\n        info = { observer: observer, binding: attribute.createBinding(viewModel) };\n        boundProperties.push(info);\n    }\n    observer.publishing = true;\n    observer.selfSubscriber = selfSubscriber;\n};\n\nlet _usePropertyType = false;\n/**\n * Decorator: Specifies that a property is bindable through HTML.\n * @param nameOrTargetOrConfig The name of the property, or a configuration object.\n * This has Object in its type to avoid breaking change.\n * Idealy it should be `string | BindablePropertyConfig`\n */\n// tslint:disable-next-line:no-shadowed-variable\nconst bindable = function bindable(nameOrTargetOrConfig, key, descriptor) {\n    const deco = function (target, key2, descriptor2) {\n        /**\n         * key2 = truthy => decorated on a class field\n         * key2 = falsy => decorated on a class\n         */\n        const actualTarget = key2 ? target.constructor : target;\n        const r = metadata.getOrCreateOwn(metadata.resource, HtmlBehaviorResource, actualTarget);\n        let prop;\n        let propType;\n        if (key2) { //is it on a property or a class?\n            nameOrTargetOrConfig = nameOrTargetOrConfig || {};\n            nameOrTargetOrConfig.name = key2;\n            /**\n             * Support for Typescript decorator, with metadata on property type.\n             * Will check for typing only when user didn't explicitly set coerce + turn on the options\n             *\n             * If key 2 is truthy, it's a decorator on class field, which means target is prototype\n             */\n            if (nameOrTargetOrConfig.coerce === undefined && _usePropertyType) {\n                propType = metadata.getOwn(metadata.propertyType, target, key2);\n                if (propType) {\n                    const coerceType = coerceFunctionMap.get(propType);\n                    if (coerceType === undefined) {\n                        getLogger('@bindable decorator')\n                            .warn(`Invalid coerce instruction. Should be either one of ${Object.keys(coerceFunctions)} or a function.`);\n                    }\n                    nameOrTargetOrConfig.coerce = coerceType || 'none';\n                }\n            }\n        }\n        prop = new BindableProperty(nameOrTargetOrConfig);\n        return prop.registerWith(actualTarget, r, descriptor2);\n    };\n    if (!nameOrTargetOrConfig) {\n        /**\n         * placed on property initializer with parens, without any params\n         * @example:\n         * class ViewModel {\n         *   @bindable() property\n         * }\n         * @bindable() class ViewModel {}\n         */\n        return deco;\n    }\n    if (key) {\n        /**\n         * placed on a property initializer without parens\n         * @example\n         * class ViewModel {\n         *   @bindable property\n         * }\n         *\n         */\n        const target = nameOrTargetOrConfig;\n        nameOrTargetOrConfig = undefined;\n        return deco(target, key, descriptor);\n    }\n    /**\n     * placed on a class with parens and config\n     * @example\n     * @bindable({ ... })\n     * class MyViewModel {}\n     */\n    return deco;\n};\n['string', 'number', 'boolean', 'booleanAttr', 'date'].forEach(createTypedBindable);\n/**\n * Used to allow user to automatically pickup property type\n * Can be used with typescript emit metadata in compiler settings, or with `Reflect.metadata('design:type', PropertyTypeClass)` decorator\n */\nfunction usePropertyType(shouldUsePropertyType) {\n    _usePropertyType = shouldUsePropertyType;\n}\n/**\n * Create a new fluent syntax bindable decorator  ex: builtin: `@bindable.string`, custom: `@bindable.customType`\n * Need to use together with setting the type in `coerceFunctions`:\n *\n * ```js\n * import {\n *  createTypedBindable,\n *  coerceFunctions\n * } from 'aurelia-framework'\n *\n * // create the typed bindable\n * createTypedBindable('point'); // => enable `@bindable.point`\n * // Set the instruction\n * coerceFunctions.point = function(value: string) {\n *   // convert to point from value\n * }\n * ```\n *\n * @param type The type to added to bindable for fluent syntax.\n */\nfunction createTypedBindable(type) {\n    /**\n     * There no attempts to protect user from mis-using the decorators.\n     * ex. @observable({}, accidentParam) class SomeClass {}\n     * If we have some flag to use in if block, which can be remove at build time, it would be great.\n     */\n    return bindable[type] = function (nameOrTargetOrConfig, key, descriptor) {\n        if (nameOrTargetOrConfig === undefined) {\n            /**\n             * MyClass {\n             *   @bindable.number() num\n             * }\n             */\n            return bindable({ coerce: type });\n        }\n        if (key === undefined) {\n            /**\n             * @bindable.number('num')\n             * class MyClass {}\n             *\n             * @bindable.number({...})\n             * class MyClass\n             *\n             * class MyClass {\n             *   @bindable.number({...})\n             *   num\n             * }\n             */\n            nameOrTargetOrConfig = typeof nameOrTargetOrConfig === 'string' ? { name: nameOrTargetOrConfig } : nameOrTargetOrConfig;\n            nameOrTargetOrConfig.coerce = type;\n            return bindable(nameOrTargetOrConfig);\n        }\n        /**\n         * class MyClass {\n         *   @bindable.number num\n         * }\n         */\n        return bindable({ coerce: type })(nameOrTargetOrConfig, key, descriptor);\n    };\n}\n\nconst observableLogger = getLogger('aurelia-observable-decorator');\n/**\n * Internal flag to turn on / off auto pickup property type from metadata\n */\nlet _usePropertyType$1 = false;\nconst observable = function observable(nameOrTargetOrConfig, key, descriptor) {\n    /**\n     * @param target The class decorated\n     * @param key The target class field of the decorator\n     * @param descriptor class field descriptor\n     * @param config user's config\n     */\n    function deco(target, key, descriptor, config) {\n        // Used to check if we should pickup the type from metadata\n        let coerce = config === undefined || typeof config === 'string' ? undefined : config.coerce;\n        let propType;\n        let coerceFunction;\n        if (coerce) {\n            switch (typeof coerce) {\n                case 'string':\n                    coerceFunction = coerceFunctions[coerce];\n                    break;\n                case 'function':\n                    coerceFunction = coerce;\n                    break;\n                default: break;\n            }\n            if (coerceFunction === undefined) {\n                observableLogger.warn(`Invalid coerce instruction. Should be either one of ${Object.keys(coerceFunctions)} or a function.`);\n            }\n        }\n        else if (_usePropertyType$1) {\n            propType = metadata.getOwn(metadata.propertyType, target, key);\n            if (propType) {\n                coerceFunction = coerceFunctions[coerceFunctionMap.get(propType)];\n                if (coerceFunction === undefined) {\n                    observableLogger.warn(`Unable to find coerce function for type ${propType.name}.`);\n                }\n            }\n        }\n        /**\n         * class decorator?\n         * @example\n         * @observable('firstName') MyClass {}\n         * @observable({ name: 'firstName' }) MyClass {}\n         */\n        const isClassDecorator = key === undefined;\n        if (isClassDecorator) {\n            target = target.prototype;\n            key = typeof config === 'string' ? config : config.name;\n        }\n        // use a convention to compute the inner property name\n        const innerPropertyName = `_${key}`;\n        const innerPropertyDescriptor = {\n            configurable: true,\n            enumerable: false,\n            writable: true\n        };\n        if (config && 'defaultValue' in config) {\n            const initValue = config.defaultValue;\n            innerPropertyDescriptor.value = coerceFunction === undefined ? initValue : coerceFunction(initValue);\n        }\n        // determine callback name based on config or convention.\n        const callbackName = (config && config.changeHandler) || `${key}Changed`;\n        if (descriptor) {\n            // babel passes in the property descriptor with a method to get the initial value.\n            // set the initial value of the property if it is defined.\n            // also make sure it's coerced\n            if (typeof descriptor.initializer === 'function') {\n                const initValue = descriptor.initializer();\n                innerPropertyDescriptor.value = coerceFunction === undefined ? initValue : coerceFunction(initValue);\n            }\n        }\n        else {\n            // there is no descriptor if the target was a field in TS (although Babel provides one),\n            // or if the decorator was applied to a class.\n            descriptor = {};\n        }\n        // make the accessor enumerable by default, as fields are enumerable\n        if (!('enumerable' in descriptor)) {\n            descriptor.enumerable = true;\n        }\n        // we're adding a getter and setter which means the property descriptor\n        // cannot have a \"value\" or \"writable\" attribute\n        delete descriptor.value;\n        delete descriptor.writable;\n        delete descriptor.initializer;\n        // Add the inner property on the prototype.\n        Reflect.defineProperty(target, innerPropertyName, innerPropertyDescriptor);\n        // add the getter and setter to the property descriptor.\n        descriptor.get = function () { return this[innerPropertyName]; };\n        descriptor.set = function (newValue) {\n            let oldValue = this[innerPropertyName];\n            let coercedValue = coerceFunction === undefined ? newValue : coerceFunction(newValue);\n            if (coercedValue === oldValue) {\n                return;\n            }\n            // Add the inner property on the instance and make it nonenumerable.\n            this[innerPropertyName] = coercedValue;\n            Reflect.defineProperty(this, innerPropertyName, { enumerable: false });\n            if (this[callbackName]) {\n                this[callbackName](coercedValue, oldValue, key);\n            }\n        };\n        // make sure Aurelia doesn't use dirty-checking by declaring the property's\n        // dependencies. This is the equivalent of \"@computedFrom(...)\".\n        descriptor.get.dependencies = [innerPropertyName];\n        if (isClassDecorator) {\n            Reflect.defineProperty(target, key, descriptor);\n        }\n        else {\n            return descriptor;\n        }\n    }\n    /**\n     * Decorating with parens\n     * @example\n     * @observable MyClass {} <----- this breaks, but will go into this condition\n     * @observable('firstName') MyClass {}\n     * @observable({ name: 'firstName' }) MyClass {}\n     * class MyClass {\n     *   @observable() prop\n     * }\n     */\n    if (key === undefined) {\n        return (t, k, d) => deco(t, k, d, nameOrTargetOrConfig);\n    }\n    /**\n     * Decorating on class field\n     * @example\n     * class MyClass {\n     *   @observable prop\n     * }\n     */\n    return deco(nameOrTargetOrConfig, key, descriptor);\n};\n['string', 'number', 'boolean', 'date'].forEach(createTypedObservable);\n/*\n          | typescript       | babel\n----------|------------------|-------------------------\nproperty  | config           | config\nw/parens  | target, key      | target, key, descriptor\n----------|------------------|-------------------------\nproperty  | target, key      | target, key, descriptor\nno parens | n/a              | n/a\n----------|------------------|-------------------------\nclass     | config           | config\n          | target           | target\n*/\n/**\n * Toggle the flag for observable to auto pickup property type from metadata\n * The reason is sometimes we may want to use prop type on bindable, but not observable\n * and vice versa\n */\nfunction usePropertyType$1(shouldUsePropType) {\n    _usePropertyType$1 = !!shouldUsePropType;\n}\n/**\n * Decorator: Creates a new observable decorator that can be used for fluent syntax purpose\n * @param type the type name that will be assign to observable decorator. `createTypedObservable('point') -> observable.point`\n */\nfunction createTypedObservable(type) {\n    return observable[type] = function (nameOrTargetOrConfig, key, descriptor) {\n        if (nameOrTargetOrConfig === undefined) {\n            /**\n             * MyClass {\n             *   @observable.number() num\n             * }\n             *\n             * This will breaks so need to check for proper error\n             * @observable.number()\n             * class MyClass {}\n             */\n            return observable({ coerce: type });\n        }\n        if (key === undefined) {\n            /**\n             * @observable.number('num')\n             * class MyClass {}\n             *\n             * @observable.number({...})\n             * class MyClass\n             *\n             * class MyClass {\n             *   @observable.number({...})\n             *   num\n             * }\n             */\n            nameOrTargetOrConfig = typeof nameOrTargetOrConfig === 'string' ? { name: nameOrTargetOrConfig } : nameOrTargetOrConfig;\n            nameOrTargetOrConfig.coerce = type;\n            return observable(nameOrTargetOrConfig);\n        }\n        /**\n         * class MyClass {\n         *   @observable.number num\n         * }\n         */\n        return observable({ coerce: type })(nameOrTargetOrConfig, key, descriptor);\n    };\n}\n\nexport { bindable, usePropertyType as usePropertyTypeForBindable, createTypedBindable, observable, usePropertyType$1 as usePropertyTypeForObservable, createTypedObservable, coerceFunctions, coerceFunctionMap, mapCoerceFunction };\n","// This file contains an empty module that does nothing.\n// It's meant to be added as an entry point to the main bundle\n// and helps reliably adding some Aurelia dependencies that are attached \n// to no module in particular, such as `includeAll` results or `aureliaApp`.\n//\n// Trying to attach those dependencies to, for example, 'aurelia-bootstrapper' \n// is unreliable if 'aurelia-bootstrapper' is in a DLL outside the bundle.\n//\n// Trying to attach to 'aurelia-loader-webpack' works well, unless a user\n// configures a customized loader instead (unlikely, but in theory supported).\n","// With default aurelia-loader-webpack config, this module is added as an extra entry\n// before any other code executes so that PAL.Loader is properly configured.\n// There are several tricky points worth noticing.\n// \n// We don't add aurelia-loader-webpack itself as an entry point (used to until 2.0 RC2)\n// because it (transitively) brings too much bagage with itself, most notably polyfills.\n// This made it super-hard to add other polyfills before Aurelia's and led to various bugs.\n//\n// We don't add custom code in aurelia-pal or aurelia-loader or aurelia-bootstrapper to detect\n// the Webpack environment and configure the loader because they might live in a DLL.\n// If they do, they would bring aurelia-loader-webpack along in the DLL and this is a special \n// library that *has to be in the main chunk.*\n//\n// The over-complicated design I've settled upon in the end is to use this special module\n// as an entry point that configures aurelia-loader-webpack. It has minimal static imports:\n// just aurelia-pal, which itself has no other dependencies and doesn't run much code.\n// It hacks the loader field into a getter so that it can synchronously load aurelia-loader-webpack\n// just in time when it is demanded by aurelia-bootstrapper.\n// This enables users to load polyfills before aurelia-loader-webpack is actually loaded.\n\nimport { PLATFORM } from \"aurelia-pal\";\n\nvar Loader;\n\nObject.defineProperty(PLATFORM, \"Loader\", {\n  get: function() {\n    return Loader || (Loader = require(\"aurelia-loader-webpack\").WebpackLoader);\n  },\n  set: function(value) {\n    Loader = value;\n  }\n});\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/**\\n * @license\\n * Copyright Google LLC All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://github.com/material-components/material-components-web/blob/master/LICENSE\\n */\\n.mdc-line-ripple::before, .mdc-line-ripple::after {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  border-bottom-style: solid;\\n  content: \\\"\\\";\\n}\\n.mdc-line-ripple::before {\\n  border-bottom-width: 1px;\\n  z-index: 1;\\n}\\n.mdc-line-ripple::after {\\n  -webkit-transform: scaleX(0);\\n          transform: scaleX(0);\\n  border-bottom-width: 2px;\\n  opacity: 0;\\n  z-index: 2;\\n}\\n.mdc-line-ripple::after {\\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\\n}\\n\\n.mdc-line-ripple--active::after {\\n  -webkit-transform: scaleX(1);\\n          transform: scaleX(1);\\n  opacity: 1;\\n}\\n\\n.mdc-line-ripple--deactivating::after {\\n  opacity: 0;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export { MdcComponent } from './mdc-component';\nexport { MdcComponentAdapters } from './mdc-component-adapters';\n","import { inject, bindingMode, ObserverLocator, InternalPropertyObserver } from 'aurelia-framework';\nimport { SyntaxInterpreter } from 'aurelia-templating-binding';\n\nexport type GetElementObserver = (\n  obj: Element,\n  propertyName: string,\n  observerLocator: ObserverLocator,\n  descriptor?: PropertyDescriptor | null) => InternalPropertyObserver | null;\n\nexport interface MdcElementObserverAdapter {\n  tagName: string;\n  properties: Record<string, MdcElementPropertyObserver>;\n}\n\nexport interface MdcElementPropertyObserver {\n  defaultBindingMode: bindingMode;\n  getObserver: GetElementObserver;\n}\n\n@inject(ObserverLocator)\nexport class MdcComponentAdapters {\n  private adaptersCreated: boolean = false;\n  private adapters: Record<string, MdcElementObserverAdapter> = {};\n  private bindingModeIntercepted: boolean;\n\n  constructor(private observerLocator: ObserverLocator) { }\n\n  private createAdapter() {\n    this.observerLocator.addAdapter({\n      getObserver: (obj: Element, propertyName: string, descriptor: PropertyDescriptor) => {\n        if (obj instanceof Element) {\n          const tagName = obj.getAttribute('as-element') || obj.tagName;\n          const elAdapters = this.adapters[tagName];\n          if (!elAdapters) {\n            return null;\n          }\n          const propertyAdapter = elAdapters.properties[propertyName];\n          if (propertyAdapter) {\n            const observer = propertyAdapter.getObserver(obj, propertyName, this.observerLocator, descriptor);\n            if (observer) {\n              return observer;\n            }\n          }\n        }\n        return null as any;\n      }\n    });\n  }\n\n  private getOrCreateMdcElementAdapters(tagName: string): MdcElementObserverAdapter {\n    if (!this.adaptersCreated) {\n      this.createAdapter();\n      this.adaptersCreated = true;\n    }\n    const adapters = this.adapters;\n    let elementAdapters = adapters[tagName] || adapters[tagName.toLowerCase()];\n    if (!elementAdapters) {\n      elementAdapters = adapters[tagName] = adapters[tagName.toLowerCase()] = { tagName, properties: {} };\n    }\n    return elementAdapters;\n  }\n\n  private interceptDetermineDefaultBindingMode(): void {\n    const mdc = this;\n    const originalFn = SyntaxInterpreter.prototype.determineDefaultBindingMode;\n\n    SyntaxInterpreter.prototype.determineDefaultBindingMode = function (\n      this: SyntaxInterpreter,\n      element: Element,\n      attrName: string,\n      context?: any\n    ) {\n      const tagName = element.getAttribute('as-element') || element.tagName;\n      const elAdapters = mdc.adapters[tagName];\n      if (elAdapters) {\n        const propertyAdapter = elAdapters.properties[attrName];\n        if (propertyAdapter) {\n          return propertyAdapter.defaultBindingMode;\n        }\n      }\n      return originalFn.call(this, element, attrName, context);\n    };\n  }\n\n  public addMdcElementObserverAdapter(tagName: string, properties: Record<string, MdcElementPropertyObserver>): void {\n    if (!this.adaptersCreated) {\n      this.createAdapter();\n      this.adaptersCreated = true;\n    }\n    const elementAdapters = this.getOrCreateMdcElementAdapters(tagName);\n    Object.assign(elementAdapters.properties, properties);\n  }\n\n  public registerMdcElementConfig(observerAdapter: MdcElementObserverAdapter) {\n    if (!this.bindingModeIntercepted) {\n      this.interceptDetermineDefaultBindingMode();\n      this.bindingModeIntercepted = true;\n    }\n    this.addMdcElementObserverAdapter(observerAdapter.tagName.toUpperCase(), observerAdapter.properties);\n  }\n}\n","import { MDCFoundation } from '@material/base';\n\nexport abstract class MdcComponent<FoundationType extends MDCFoundation> {\n  constructor(public root: HTMLElement) { }\n\n  foundation: FoundationType;\n\n  initialised = new Promise(r => this.initialisedResolve = r);\n  private initialisedResolve: () => void;\n\n  async initialise() { }\n\n  async attached() {\n    await this.initialise();\n    this.foundation = this.getDefaultFoundation();\n    this.foundation.init();\n    this.initialisedResolve();\n  }\n\n  destroy() { }\n\n  detached() {\n    this.destroy();\n    this.foundation.destroy();\n  }\n\n  abstract getDefaultFoundation(): FoundationType;\n\n  listen(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.addEventListener(evtType, handler, options);\n  }\n\n  unlisten(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.removeEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n   */\n  emit<T extends object>(evtType: string, evtData: T, shouldBubble = false) {\n    let evt: CustomEvent<T>;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent<T>(evtType, {\n        bubbles: shouldBubble,\n        detail: evtData,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root.dispatchEvent(evt);\n  }\n}\n","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\n\nexport { MdcFloatingLabel } from './mdc-floating-label';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([\n    PLATFORM.moduleName('./mdc-floating-label')\n  ]);\n}\n","import { inject, customElement, useView } from 'aurelia-framework';\nimport { MDCFloatingLabelFoundation, MDCFloatingLabelAdapter } from '@material/floating-label';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { estimateScrollWidth } from '@material/dom/ponyfill';\n\n@inject(Element)\n@customElement('mdc-floating-label')\n@useView('./mdc-floating-label.html')\nexport class MdcFloatingLabel extends MdcComponent<MDCFloatingLabelFoundation> {\n  shake(shouldShake: boolean) {\n    this.foundation.shake(shouldShake);\n  }\n\n  /**\n   * Styles the label to float/dock.\n   * @param shouldFloat If true, floats the label by adding a CSS class; otherwise, docks it by removing the class.\n   */\n  float(shouldFloat: boolean) {\n    this.foundation.float(shouldFloat);\n  }\n\n  /**\n   * Styles the label as required.\n   * @param isRequired If true, adds an asterisk to the label, indicating that it is required.\n   */\n  setRequired(isRequired: boolean) {\n    this.foundation.setRequired(isRequired);\n  }\n\n  getWidth(): number {\n    return this.foundation.getWidth();\n  }\n\n  getDefaultFoundation() {\n    const adapter: MDCFloatingLabelAdapter = {\n      addClass: (className) => this.root.classList.add(className),\n      removeClass: (className) => this.root.classList.remove(className),\n      getWidth: () => estimateScrollWidth(this.root),\n      registerInteractionHandler: (evtType, handler) => this.listen(evtType, handler),\n      deregisterInteractionHandler: (evtType, handler) => this.unlisten(evtType, handler),\n    };\n    return new MDCFloatingLabelFoundation(adapter);\n  }\n}\n","// Module\nvar code = \"<template class=\\\"mdc-floating-label\\\">\\n  <require from=\\\"@material/floating-label/dist/mdc.floating-label.css\\\"></require>\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nmodule.exports = code;","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\n\nexport { MdcLineRipple } from './mdc-line-ripple';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([\n    PLATFORM.moduleName('./mdc-line-ripple')\n  ]);\n}\n","import { inject, customElement, inlineView } from 'aurelia-framework';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCLineRippleFoundation, MDCLineRippleAdapter } from '@material/line-ripple';\nimport '@material/line-ripple/dist/mdc.line-ripple.css';\n\n@inject(Element)\n@customElement('mdc-line-ripple')\n@inlineView('<template class=\"mdc-line-ripple\"></template>')\nexport class MdcLineRipple extends MdcComponent<MDCLineRippleFoundation> {\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.foundation.activate();\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.foundation.deactivate();\n  }\n\n  /**\n   * Sets the transform origin given a user's click location.\n   * The `rippleCenter` is the x-coordinate of the middle of the ripple.\n   */\n  setRippleCenter(xCoordinate: number) {\n    this.foundation.setRippleCenter(xCoordinate);\n  }\n\n  getDefaultFoundation() {\n    const adapter: MDCLineRippleAdapter = {\n      addClass: (className) => this.root.classList.add(className),\n      removeClass: (className) => this.root.classList.remove(className),\n      hasClass: (className) => this.root.classList.contains(className),\n      setStyle: (propertyName, value) => (this.root as HTMLElement).style.setProperty(propertyName, value),\n      registerEventHandler: (evtType, handler) => this.listen(evtType, handler),\n      deregisterEventHandler: (evtType, handler) => this.unlisten(evtType, handler),\n    };\n    return new MDCLineRippleFoundation(adapter);\n  }\n}\n","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\n\nexport { MdcNotchedOutline } from './mdc-notched-outline';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([\n    PLATFORM.moduleName('./mdc-notched-outline')\n  ]);\n}\n","import { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCNotchedOutlineFoundation, MDCNotchedOutlineAdapter, cssClasses } from '@material/notched-outline';\nimport { MDCFloatingLabelFoundation } from '@material/floating-label';\nimport { inject, customElement, useView } from 'aurelia-framework';\n\n@inject(Element)\n@useView('./mdc-notched-outline.html')\n@customElement('mdc-notched-outline')\nexport class MdcNotchedOutline extends MdcComponent<MDCNotchedOutlineFoundation> {\n  private notchElement_!: HTMLElement; // assigned in html\n\n  async initialise() {\n    const label = this.root.querySelector<HTMLElement>('.' + MDCFloatingLabelFoundation.cssClasses.ROOT);\n    if (label) {\n      label.style.transitionDuration = '0s';\n      this.root.classList.add(cssClasses.OUTLINE_UPGRADED);\n      requestAnimationFrame(() => {\n        label.style.transitionDuration = '';\n      });\n    } else {\n      this.root.classList.add(cssClasses.NO_LABEL);\n    }\n  }\n\n  /**\n   * Updates classes and styles to open the notch to the specified width.\n   * @param notchWidth The notch width in the outline.\n   */\n  notch(notchWidth: number) {\n    this.foundation.notch(notchWidth);\n  }\n\n  /**\n   * Updates classes and styles to close the notch.\n   */\n  closeNotch() {\n    this.foundation.closeNotch();\n  }\n\n  getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCNotchedOutlineAdapter = {\n      addClass: (className) => this.root.classList.add(className),\n      removeClass: (className) => this.root.classList.remove(className),\n      setNotchWidthProperty: (width) => this.notchElement_.style.setProperty('width', width + 'px'),\n      removeNotchWidthProperty: () => this.notchElement_.style.removeProperty('width'),\n    };\n    return new MDCNotchedOutlineFoundation(adapter);\n  }\n\n}\n","// Module\nvar code = \"<template class=\\\"mdc-notched-outline\\\">\\n  <require from=\\\"@material/notched-outline/dist/mdc.notched-outline.css\\\"></require>\\n  <span class=\\\"mdc-notched-outline__leading\\\"></span>\\n  <span class=\\\"mdc-notched-outline__notch\\\" ref=\\\"notchElement_\\\">\\n    <slot></slot>\\n  </span>\\n  <span class=\\\"mdc-notched-outline__trailing\\\"></span>\\n</template>\\n\";\n// Exports\nmodule.exports = code;","import { FrameworkConfiguration, PLATFORM, bindingMode, ValueAttributeObserver, EventSubscriber } from 'aurelia-framework';\nimport { MdcComponentAdapters } from '@aurelia-mdc-web/base';\n\nexport { MdcTextField } from './mdc-text-field';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.container.get(MdcComponentAdapters).registerMdcElementConfig(textFieldConfig);\n\n  config.globalResources([\n    PLATFORM.moduleName('./mdc-text-field'),\n    PLATFORM.moduleName('./mdc-text-field-icon'),\n    PLATFORM.moduleName('./mdc-text-field-helper-line'),\n    PLATFORM.moduleName('./mdc-text-field-helper-text/mdc-text-field-helper-text'),\n    PLATFORM.moduleName('./mdc-text-field-character-counter')\n  ]);\n}\n\nconst textFieldConfig = {\n  tagName: 'mdc-text-field',\n  properties: {\n    value: {\n      defaultBindingMode: bindingMode.twoWay,\n      getObserver(element: Element) {\n        return new ValueAttributeObserver(element, 'value', new EventSubscriber(['change', 'input']));\n      }\n    }\n  }\n};\n","import { useView, inject, customElement, processContent, ViewCompiler, ViewResources, BehaviorInstruction } from 'aurelia-framework';\nimport {\n  MDCTextFieldFoundation, MDCTextFieldRootAdapter, MDCTextFieldInputAdapter, MDCTextFieldLabelAdapter, MDCTextFieldAdapter, MDCTextFieldFoundationMap,\n  MDCTextFieldLineRippleAdapter, cssClasses, MDCTextFieldOutlineAdapter, helperTextStrings, characterCountStrings\n} from '@material/textfield';\nimport { applyPassive } from '@material/dom/events';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MdcFloatingLabel } from '@aurelia-mdc-web/floating-label';\nimport { MdcLineRipple } from '@aurelia-mdc-web/line-ripple';\nimport { MDCRipple, MDCRippleFactory, MDCRippleAdapter, MDCRippleFoundation } from '@material/ripple';\nimport * as ponyfill from '@material/dom/ponyfill';\nimport { bindable } from 'aurelia-typed-observable-plugin';\nimport { MdcNotchedOutline } from '@aurelia-mdc-web/notched-outline';\nimport { MdcTextFieldIcon, mdcIconStrings, IMdcTextFieldIconElement } from './mdc-text-field-icon';\nimport { MdcTextFieldHelperText, IMdcTextFieldHelperTextElement } from './mdc-text-field-helper-text/mdc-text-field-helper-text';\nimport { MdcTextFieldCharacterCounter, IMdcTextFieldCharacterCounterElement } from './mdc-text-field-character-counter';\n\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n\n@inject(Element)\n@useView('./mdc-text-field.html')\n@customElement('mdc-text-field')\n@processContent(MdcTextField.processContent)\nexport class MdcTextField extends MdcComponent<MDCTextFieldFoundation> {\n  constructor(root: HTMLElement) {\n    super(root);\n    defineMdcTextFieldElementApis(this.root);\n  }\n\n  static processContent(_viewCompiler: ViewCompiler, _resources: ViewResources, element: Element, _instruction: BehaviorInstruction) {\n    const leadingIcon = element.querySelector(`[${mdcIconStrings.ATTRIBUTE}][${mdcIconStrings.LEADING}]`);\n    if (leadingIcon) {\n      leadingIcon.setAttribute('slot', 'leading-icon');\n    }\n    const trailingIcon = element.querySelector(`[${mdcIconStrings.ATTRIBUTE}][${mdcIconStrings.TRAILING}]`);\n    if (trailingIcon) {\n      trailingIcon.setAttribute('slot', 'trailing-icon');\n    }\n    return true;\n  }\n\n  static id = 0;\n  id: number = ++MdcTextField.id;\n  input_: HTMLInputElement;\n  label_: MdcFloatingLabel;\n  lineRipple_: MdcLineRipple;\n  ripple: MDCRipple | null;\n  outline_!: MdcNotchedOutline | null; // assigned in html\n  leadingIcon_: MdcTextFieldIcon | undefined;\n  trailingIcon_: MdcTextFieldIcon | undefined;\n  helperText_: MdcTextFieldHelperText | undefined;\n  characterCounter_: MdcTextFieldCharacterCounter | undefined;\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number = 0;\n\n  @bindable\n  label: string;\n\n  @bindable.booleanAttr\n  outlined: boolean;\n\n  @bindable.number\n  maxlength: number;\n\n  @bindable\n  prefix: string;\n\n  @bindable\n  suffix: string;\n\n  @bindable.booleanAttr\n  required: boolean;\n\n  private initialValue: string;\n  get value(): string {\n    if (this.foundation) {\n      return this.foundation.getValue();\n    } else {\n      return this.initialValue;\n    }\n  }\n  set value(value: string) {\n    if (this.foundation) {\n      if (this.foundation.getValue() !== value) {\n        this.foundation.setValue(value || '');\n        this.foundation.handleInput();\n      }\n    } else {\n      this.initialValue = value;\n    }\n  }\n\n  async initialise() {\n    this.leadingIcon_ = this.root.querySelector<IMdcTextFieldIconElement>(`[${mdcIconStrings.ATTRIBUTE}][${mdcIconStrings.LEADING}]`)?.au['mdc-text-field-icon'].viewModel;\n    this.trailingIcon_ = this.root.querySelector<IMdcTextFieldIconElement>(`[${mdcIconStrings.ATTRIBUTE}][${mdcIconStrings.TRAILING}]`)?.au['mdc-text-field-icon'].viewModel;\n    this.ripple = this.createRipple_((el, foundation) => new MDCRipple(el, foundation));\n    const nextSibling = this.root.nextElementSibling;\n    if (nextSibling?.tagName === cssClasses.HELPER_LINE.toUpperCase()) {\n      this.helperText_ = nextSibling.querySelector<IMdcTextFieldHelperTextElement>(helperTextStrings.ROOT_SELECTOR)?.au.controller.viewModel;\n      this.characterCounter_ = nextSibling.querySelector<IMdcTextFieldCharacterCounterElement>(characterCountStrings.ROOT_SELECTOR)?.au.controller.viewModel;\n      await Promise.all([this.helperText_?.initialised, this.characterCounter_?.initialised].filter(x => x));\n    }\n  }\n\n  async attached() {\n    await super.attached();\n    this.foundation.setValue(this.initialValue || '');\n  }\n\n  destroy() {\n    this.ripple?.destroy();\n  }\n\n  getDefaultFoundation() {\n    const adapter: Partial<MDCTextFieldAdapter> = {\n      ...this.getRootAdapterMethods_(),\n      ...this.getInputAdapterMethods_(),\n      ...this.getLabelAdapterMethods_(),\n      ...this.getLineRippleAdapterMethods_(),\n      ...this.getOutlineAdapterMethods_(),\n    };\n    return new MDCTextFieldFoundation(adapter, this.getFoundationMap_());\n  }\n\n  private getRootAdapterMethods_(): MDCTextFieldRootAdapter {\n    return {\n      addClass: (className) => this.root.classList.add(className),\n      removeClass: (className) => this.root.classList.remove(className),\n      hasClass: (className) => this.root.classList.contains(className),\n      registerTextFieldInteractionHandler: (evtType, handler) => this.listen(evtType, handler),\n      deregisterTextFieldInteractionHandler: (evtType, handler) => this.unlisten(evtType, handler),\n      registerValidationAttributeChangeHandler: (handler) => {\n        const getAttributesList = (mutationsList: MutationRecord[]): string[] => {\n          return mutationsList\n            .map((mutation) => mutation.attributeName)\n            .filter((attributeName) => attributeName) as string[];\n        };\n        const observer = new MutationObserver((mutationsList) => handler(getAttributesList(mutationsList)));\n        const config = { attributes: true };\n        observer.observe(this.input_, config);\n        return observer;\n      },\n      deregisterValidationAttributeChangeHandler: (observer) => observer.disconnect(),\n    };\n  }\n\n  private getInputAdapterMethods_(): MDCTextFieldInputAdapter {\n    return {\n      getNativeInput: () => this.input_,\n      isFocused: () => document.activeElement === this.input_,\n      registerInputInteractionHandler: (evtType, handler) => this.input_.addEventListener(evtType, handler, applyPassive()),\n      deregisterInputInteractionHandler: (evtType, handler) => this.input_.removeEventListener(evtType, handler, applyPassive()),\n    };\n  }\n\n  private getLabelAdapterMethods_(): MDCTextFieldLabelAdapter {\n    return {\n      floatLabel: (shouldFloat) => this.label_ && this.label_.float(shouldFloat),\n      getLabelWidth: () => this.label_ ? this.label_.getWidth() : 0,\n      hasLabel: () => Boolean(this.label_),\n      shakeLabel: (shouldShake) => this.label_ && this.label_.shake(shouldShake),\n      setLabelRequired: (isRequired) => this.label_ && this.label_.setRequired(isRequired),\n    };\n  }\n\n  private getLineRippleAdapterMethods_(): MDCTextFieldLineRippleAdapter {\n    return {\n      activateLineRipple: () => this.lineRipple_ && this.lineRipple_.activate(),\n      deactivateLineRipple: () => this.lineRipple_ && this.lineRipple_.deactivate(),\n      setLineRippleTransformOrigin: (normalizedX) => this.lineRipple_ && this.lineRipple_.setRippleCenter(normalizedX)\n    };\n  }\n\n  private getOutlineAdapterMethods_(): MDCTextFieldOutlineAdapter {\n    return {\n      closeOutline: () => this.outline_ && this.outline_.closeNotch(),\n      hasOutline: () => Boolean(this.outline_),\n      notchOutline: (labelWidth) => this.outline_ && this.outline_.notch(labelWidth),\n    };\n  }\n\n  /**\n   * @return A map of all subcomponents to subfoundations.\n   */\n  private getFoundationMap_(): Partial<MDCTextFieldFoundationMap> {\n    return {\n      characterCounter: this.characterCounter_ ? this.characterCounter_.foundationForTextField : undefined,\n      helperText: this.helperText_ ? this.helperText_.foundationForTextField : undefined,\n      leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundationForTextField : undefined,\n      trailingIcon: this.trailingIcon_ ? this.trailingIcon_.foundationForTextField : undefined,\n    };\n  }\n\n  private createRipple_(rippleFactory: MDCRippleFactory): MDCRipple | null {\n    const isTextArea = this.root.classList.contains(cssClasses.TEXTAREA);\n    const isOutlined = this.root.classList.contains(cssClasses.OUTLINED);\n\n    if (isTextArea || isOutlined) {\n      return null;\n    }\n\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCRippleAdapter = {\n      ...MDCRipple.createAdapter(this),\n      isSurfaceActive: () => ponyfill.matches(this.input_, ':active'),\n      registerInteractionHandler: (evtType, handler) => this.input_.addEventListener(evtType, handler, applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        this.input_.removeEventListener(evtType, handler, applyPassive()),\n    };\n    return rippleFactory(this.root, new MDCRippleFoundation(adapter));\n  }\n\n  onInputInteraction(evt: MouseEvent | TouchEvent) {\n    if (evt instanceof MouseEvent) {\n      const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + MOUSE_EVENT_IGNORE_TIME;\n\n      if (isSyntheticEvent) {\n        return;\n      }\n    } else {\n      this._lastTouchStartEvent = Date.now();\n    }\n\n    this.foundation.setTransformOrigin(evt);\n    return true;\n  }\n\n  onInput(evt: Event): void {\n    const value = (<any>evt.target).value;\n    this.value = value;\n    this.emit('input', {}, true);\n  }\n\n  async onFocus() {\n    await this.initialised;\n    this.foundation.activateFocus();\n  }\n\n  onChange(evt: Event): void {\n    const value = (evt.target as HTMLInputElement).value;\n    this.value = value;\n    this.emit('change', {}, true);\n  }\n\n  onBlur(): void {\n    this.foundation.deactivateFocus();\n  }\n\n  focus() {\n    this.input_.focus();\n  }\n\n  blur() {\n    this.input_.blur();\n  }\n}\n\nexport interface IMdcTextFieldElement extends HTMLElement {\n  au: {\n    controller: {\n      viewModel: MdcTextField;\n    }\n  }\n}\n\nfunction defineMdcTextFieldElementApis(element: HTMLElement) {\n  Object.defineProperties(element, {\n    value: {\n      get(this: IMdcTextFieldElement) {\n        return this.au.controller.viewModel.value;\n      },\n      set(this: IMdcTextFieldElement, value: any) {\n        this.au.controller.viewModel.value = value;\n      },\n      configurable: true\n    },\n    focus: {\n      value(this: IMdcTextFieldElement) {\n        this.au.controller.viewModel.focus();\n      },\n      configurable: true\n    },\n    blur: {\n      value(this: IMdcTextFieldElement) {\n        this.au.controller.viewModel.blur();\n      },\n      configurable: true\n    }\n  });\n};\n","import { inject, inlineView, customElement } from 'aurelia-framework';\nimport { MDCTextFieldCharacterCounterFoundation, MDCTextFieldCharacterCounterAdapter, characterCountCssClasses } from '@material/textfield';\nimport { MdcComponent } from '@aurelia-mdc-web/base';\n\n@inject(Element)\n@inlineView(`<template class=\"${characterCountCssClasses.ROOT}\"></template>`)\n@customElement(characterCountCssClasses.ROOT)\nexport class MdcTextFieldCharacterCounter extends MdcComponent<MDCTextFieldCharacterCounterFoundation> {\n  // Provided for access by MDCTextField component\n  get foundationForTextField(): MDCTextFieldCharacterCounterFoundation {\n    return this.foundation;\n  }\n\n  getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCTextFieldCharacterCounterAdapter = {\n      setContent: (content) => {\n        this.root.textContent = content;\n      },\n    };\n    return new MDCTextFieldCharacterCounterFoundation(adapter);\n  }\n}\n\nexport interface IMdcTextFieldCharacterCounterElement extends HTMLElement {\n  au: {\n    controller: {\n      viewModel: MdcTextFieldCharacterCounter;\n    }\n  }\n}\n","import { inject, inlineView, customElement } from 'aurelia-framework';\n\n@inject(Element)\n@inlineView('<template class=\"mdc-text-field-helper-line\"><slot></slot></template>')\n@customElement('mdc-text-field-helper-line')\nexport class MdcTextFieldHelperLine {\n\n}\n","import { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTextFieldHelperTextFoundation, MDCTextFieldHelperTextAdapter, helperTextCssClasses } from '@material/textfield';\nimport { inject, customElement, useView } from 'aurelia-framework';\nimport { bindable } from 'aurelia-typed-observable-plugin';\n\n@inject(Element)\n@useView('./mdc-text-field-helper-text.html')\n@customElement(helperTextCssClasses.ROOT)\nexport class MdcTextFieldHelperText extends MdcComponent<MDCTextFieldHelperTextFoundation> {\n  helperTextCssClasses = helperTextCssClasses;\n\n  @bindable.booleanAttr\n  persistent: boolean;\n\n  @bindable.booleanAttr\n  validation: boolean;\n\n  // Provided for access by MDCTextField component\n  get foundationForTextField(): MDCTextFieldHelperTextFoundation {\n    return this.foundation;\n  }\n\n  getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCTextFieldHelperTextAdapter = {\n      addClass: (className) => this.root.classList.add(className),\n      removeClass: (className) => this.root.classList.remove(className),\n      hasClass: (className) => this.root.classList.contains(className),\n      setAttr: (attr, value) => this.root.setAttribute(attr, value),\n      removeAttr: (attr) => this.root.removeAttribute(attr),\n      setContent: (content) => {\n        this.root.textContent = content;\n      },\n    };\n    return new MDCTextFieldHelperTextFoundation(adapter);\n  }\n}\n\nexport interface IMdcTextFieldHelperTextElement extends HTMLElement {\n  au: {\n    controller: {\n      viewModel: MdcTextFieldHelperText;\n    }\n  }\n}\n","// Module\nvar code = \"<template class=\\\"${helperTextCssClasses.ROOT} ${persistent ? helperTextCssClasses.ROOT + '--persistent' : ''} ${validation ? helperTextCssClasses.ROOT + '--validation-msg' : ''}\\\">\\n  <slot></slot>\\n</template>\\n\";\n// Exports\nmodule.exports = code;","import { MdcComponent } from '@aurelia-mdc-web/base';\nimport { MDCTextFieldIconFoundation, MDCTextFieldIconAdapter, iconCssClasses } from '@material/textfield';\nimport { inject, customAttribute } from 'aurelia-framework';\n\nexport const mdcIconStrings = {\n  ATTRIBUTE: 'mdc-text-field-icon',\n  LEADING: 'leading',\n  TRAILING: 'trailing'\n};\n\n@inject(Element)\n@customAttribute(mdcIconStrings.ATTRIBUTE)\nexport class MdcTextFieldIcon extends MdcComponent<MDCTextFieldIconFoundation> {\n  async initialise() {\n    this.root.classList.add(iconCssClasses.ROOT);\n    if (this.root.hasAttribute(mdcIconStrings.LEADING)) {\n      this.root.classList.add(`${iconCssClasses.ROOT}--${mdcIconStrings.LEADING}`);\n    }\n    if (this.root.hasAttribute(mdcIconStrings.TRAILING)) {\n      this.root.classList.add(`${iconCssClasses.ROOT}--${mdcIconStrings.TRAILING}`);\n    }\n  }\n\n  // Provided for access by MDCTextField component\n  get foundationForTextField(): MDCTextFieldIconFoundation {\n    return this.foundation;\n  }\n\n  getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCTextFieldIconAdapter = {\n      getAttr: (attr) => this.root.getAttribute(attr),\n      setAttr: (attr, value) => this.root.setAttribute(attr, value),\n      removeAttr: (attr) => this.root.removeAttribute(attr),\n      setContent: (content) => {\n        this.root.textContent = content;\n      },\n      registerInteractionHandler: (evtType, handler) => this.listen(evtType, handler),\n      deregisterInteractionHandler: (evtType, handler) => this.unlisten(evtType, handler),\n      notifyIconAction: () => this.emit(\n        MDCTextFieldIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */),\n    };\n    return new MDCTextFieldIconFoundation(adapter);\n  }\n\n}\n\nexport interface IMdcTextFieldIconElement extends HTMLElement {\n  au: {\n    'mdc-text-field-icon': {\n      viewModel: MdcTextFieldIcon;\n    }\n  }\n}\n","// Module\nvar code = \"<template\\n  class=\\\"mdc-text-field mdc-text-field--${outlined ? 'outlined' : 'filled'} ${leadingIcon_ ? 'mdc-text-field--with-leading-icon' : ''} ${trailingIcon_ ? 'mdc-text-field--with-trailing-icon' : ''}\\\">\\n  <require from='@material/textfield/dist/mdc.textfield.css'></require>\\n  <span class=\\\"mdc-text-field__ripple\\\"></span>\\n  <slot name=\\\"leading-icon\\\"></slot>\\n  <span class=\\\"mdc-text-field__affix mdc-text-field__affix--prefix\\\" if.bind=\\\"prefix\\\">${prefix}</span>\\n  <input class=\\\"mdc-text-field__input\\\" type=\\\"text\\\" aria-labelledby.bind=\\\"id\\\" maxlength.bind=\\\"maxlength\\\"\\n    required.bind=\\\"required\\\" ref=\\\"input_\\\" mousedown.trigger=\\\"onInputInteraction($event)\\\"\\n    touchstart.trigger=\\\"onInputInteraction($event)\\\" focus.trigger=\\\"onFocus()\\\" input.trigger=\\\"onInput($event)\\\" change.trigger=\\\"onChange($event)\\\"\\n    blur.trigger=\\\"onBlur()\\\">\\n  <span class=\\\"mdc-text-field__affix mdc-text-field__affix--suffix\\\" if.bind=\\\"suffix\\\">${suffix}</span>\\n  <slot name=\\\"trailing-icon\\\"></slot>\\n  <mdc-floating-label if.bind=\\\"label && !outlined\\\" id.bind=\\\"id\\\" view-model.ref=\\\"label_\\\">${label}</mdc-floating-label>\\n  <mdc-line-ripple if.bind=\\\"!outlined\\\" view-model.ref=\\\"lineRipple_\\\"></mdc-line-ripple>\\n  <mdc-notched-outline if.bind=\\\"outlined\\\" view-model.ref=\\\"outline_\\\">\\n    <mdc-floating-label if.bind=\\\"label\\\" id.bind=\\\"id\\\" view-model.ref=\\\"label_\\\">${label}</mdc-floating-label>\\n  </mdc-notched-outline>\\n</template>\\n\";\n// Exports\nmodule.exports = code;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/**\\n * @license\\n * Copyright Google LLC All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://github.com/material-components/material-components-web/blob/master/LICENSE\\n */\\n.mdc-floating-label {\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-smoothing: antialiased;\\n  font-family: Roboto, sans-serif;\\n  /* @alternate */\\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\\n  font-size: 1rem;\\n  /* @alternate */\\n  font-size: var(--mdc-typography-subtitle1-font-size, 1rem);\\n  font-weight: 400;\\n  /* @alternate */\\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\\n  letter-spacing: 0.009375em;\\n  /* @alternate */\\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);\\n  text-decoration: inherit;\\n  /* @alternate */\\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\\n  text-transform: inherit;\\n  /* @alternate */\\n  text-transform: var(--mdc-typography-subtitle1-text-transform, inherit);\\n  position: absolute;\\n  /* @noflip */\\n  left: 0;\\n  /* @noflip */\\n  -webkit-transform-origin: left top;\\n          transform-origin: left top;\\n  line-height: 1.15rem;\\n  text-align: left;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  cursor: text;\\n  overflow: hidden;\\n  /* @alternate */\\n  will-change: transform;\\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n}\\n[dir=rtl] .mdc-floating-label, .mdc-floating-label[dir=rtl] {\\n  /* @noflip */\\n  right: 0;\\n  /* @noflip */\\n  left: auto;\\n  /* @noflip */\\n  -webkit-transform-origin: right top;\\n          transform-origin: right top;\\n  /* @noflip */\\n  text-align: right;\\n}\\n\\n.mdc-floating-label--float-above {\\n  cursor: auto;\\n}\\n\\n.mdc-floating-label--required::after {\\n  /* @noflip */\\n  margin-left: 1px;\\n  /* @noflip */\\n  margin-right: 0px;\\n  content: \\\"*\\\";\\n}\\n[dir=rtl] .mdc-floating-label--required::after, .mdc-floating-label--required[dir=rtl]::after {\\n  /* @noflip */\\n  margin-left: 0;\\n  /* @noflip */\\n  margin-right: 1px;\\n}\\n\\n.mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-106%) scale(0.75);\\n          transform: translateY(-106%) scale(0.75);\\n}\\n\\n.mdc-floating-label--shake {\\n  -webkit-animation: mdc-floating-label-shake-float-above-standard 250ms 1;\\n          animation: mdc-floating-label-shake-float-above-standard 250ms 1;\\n}\\n\\n@-webkit-keyframes mdc-floating-label-shake-float-above-standard {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n  }\\n}\\n\\n@keyframes mdc-floating-label-shake-float-above-standard {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n  }\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/**\\n * @license\\n * Copyright Google LLC All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://github.com/material-components/material-components-web/blob/master/LICENSE\\n */\\n.mdc-notched-outline {\\n  display: flex;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  box-sizing: border-box;\\n  width: 100%;\\n  max-width: 100%;\\n  height: 100%;\\n  /* @noflip */\\n  text-align: left;\\n  pointer-events: none;\\n}\\n[dir=rtl] .mdc-notched-outline, .mdc-notched-outline[dir=rtl] {\\n  /* @noflip */\\n  text-align: right;\\n}\\n.mdc-notched-outline__leading, .mdc-notched-outline__notch, .mdc-notched-outline__trailing {\\n  box-sizing: border-box;\\n  height: 100%;\\n  border-top: 1px solid;\\n  border-bottom: 1px solid;\\n  pointer-events: none;\\n}\\n.mdc-notched-outline__leading {\\n  /* @noflip */\\n  border-left: 1px solid;\\n  /* @noflip */\\n  border-right: none;\\n  width: 12px;\\n}\\n[dir=rtl] .mdc-notched-outline__leading, .mdc-notched-outline__leading[dir=rtl] {\\n  /* @noflip */\\n  border-left: none;\\n  /* @noflip */\\n  border-right: 1px solid;\\n}\\n.mdc-notched-outline__trailing {\\n  /* @noflip */\\n  border-left: none;\\n  /* @noflip */\\n  border-right: 1px solid;\\n  flex-grow: 1;\\n}\\n[dir=rtl] .mdc-notched-outline__trailing, .mdc-notched-outline__trailing[dir=rtl] {\\n  /* @noflip */\\n  border-left: 1px solid;\\n  /* @noflip */\\n  border-right: none;\\n}\\n.mdc-notched-outline__notch {\\n  flex: 0 0 auto;\\n  width: auto;\\n  max-width: calc(100% - 12px * 2);\\n}\\n.mdc-notched-outline .mdc-floating-label {\\n  display: inline-block;\\n  position: relative;\\n  max-width: 100%;\\n}\\n.mdc-notched-outline .mdc-floating-label--float-above {\\n  text-overflow: clip;\\n}\\n.mdc-notched-outline--upgraded .mdc-floating-label--float-above {\\n  max-width: calc(100% / 0.75);\\n}\\n\\n.mdc-notched-outline--notched .mdc-notched-outline__notch {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 8px;\\n  border-top: none;\\n}\\n[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch, .mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 8px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n\\n.mdc-notched-outline--no-label .mdc-notched-outline__notch {\\n  padding: 0;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/**\\n * @license\\n * Copyright Google LLC All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://github.com/material-components/material-components-web/blob/master/LICENSE\\n */\\n.mdc-floating-label {\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-smoothing: antialiased;\\n  font-family: Roboto, sans-serif;\\n  /* @alternate */\\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\\n  font-size: 1rem;\\n  /* @alternate */\\n  font-size: var(--mdc-typography-subtitle1-font-size, 1rem);\\n  font-weight: 400;\\n  /* @alternate */\\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\\n  letter-spacing: 0.009375em;\\n  /* @alternate */\\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);\\n  text-decoration: inherit;\\n  /* @alternate */\\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\\n  text-transform: inherit;\\n  /* @alternate */\\n  text-transform: var(--mdc-typography-subtitle1-text-transform, inherit);\\n  position: absolute;\\n  /* @noflip */\\n  left: 0;\\n  /* @noflip */\\n  -webkit-transform-origin: left top;\\n          transform-origin: left top;\\n  line-height: 1.15rem;\\n  text-align: left;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  cursor: text;\\n  overflow: hidden;\\n  /* @alternate */\\n  will-change: transform;\\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n}\\n[dir=rtl] .mdc-floating-label, .mdc-floating-label[dir=rtl] {\\n  /* @noflip */\\n  right: 0;\\n  /* @noflip */\\n  left: auto;\\n  /* @noflip */\\n  -webkit-transform-origin: right top;\\n          transform-origin: right top;\\n  /* @noflip */\\n  text-align: right;\\n}\\n\\n.mdc-floating-label--float-above {\\n  cursor: auto;\\n}\\n\\n.mdc-floating-label--required::after {\\n  /* @noflip */\\n  margin-left: 1px;\\n  /* @noflip */\\n  margin-right: 0px;\\n  content: \\\"*\\\";\\n}\\n[dir=rtl] .mdc-floating-label--required::after, .mdc-floating-label--required[dir=rtl]::after {\\n  /* @noflip */\\n  margin-left: 0;\\n  /* @noflip */\\n  margin-right: 1px;\\n}\\n\\n.mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-106%) scale(0.75);\\n          transform: translateY(-106%) scale(0.75);\\n}\\n\\n.mdc-floating-label--shake {\\n  -webkit-animation: mdc-floating-label-shake-float-above-standard 250ms 1;\\n          animation: mdc-floating-label-shake-float-above-standard 250ms 1;\\n}\\n\\n@-webkit-keyframes mdc-floating-label-shake-float-above-standard {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n  }\\n}\\n\\n@keyframes mdc-floating-label-shake-float-above-standard {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-106%) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-106%) scale(0.75);\\n  }\\n}\\n.mdc-line-ripple::before, .mdc-line-ripple::after {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  border-bottom-style: solid;\\n  content: \\\"\\\";\\n}\\n.mdc-line-ripple::before {\\n  border-bottom-width: 1px;\\n  z-index: 1;\\n}\\n.mdc-line-ripple::after {\\n  -webkit-transform: scaleX(0);\\n          transform: scaleX(0);\\n  border-bottom-width: 2px;\\n  opacity: 0;\\n  z-index: 2;\\n}\\n.mdc-line-ripple::after {\\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\\n}\\n\\n.mdc-line-ripple--active::after {\\n  -webkit-transform: scaleX(1);\\n          transform: scaleX(1);\\n  opacity: 1;\\n}\\n\\n.mdc-line-ripple--deactivating::after {\\n  opacity: 0;\\n}\\n\\n.mdc-notched-outline {\\n  display: flex;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  box-sizing: border-box;\\n  width: 100%;\\n  max-width: 100%;\\n  height: 100%;\\n  /* @noflip */\\n  text-align: left;\\n  pointer-events: none;\\n}\\n[dir=rtl] .mdc-notched-outline, .mdc-notched-outline[dir=rtl] {\\n  /* @noflip */\\n  text-align: right;\\n}\\n.mdc-notched-outline__leading, .mdc-notched-outline__notch, .mdc-notched-outline__trailing {\\n  box-sizing: border-box;\\n  height: 100%;\\n  border-top: 1px solid;\\n  border-bottom: 1px solid;\\n  pointer-events: none;\\n}\\n.mdc-notched-outline__leading {\\n  /* @noflip */\\n  border-left: 1px solid;\\n  /* @noflip */\\n  border-right: none;\\n  width: 12px;\\n}\\n[dir=rtl] .mdc-notched-outline__leading, .mdc-notched-outline__leading[dir=rtl] {\\n  /* @noflip */\\n  border-left: none;\\n  /* @noflip */\\n  border-right: 1px solid;\\n}\\n.mdc-notched-outline__trailing {\\n  /* @noflip */\\n  border-left: none;\\n  /* @noflip */\\n  border-right: 1px solid;\\n  flex-grow: 1;\\n}\\n[dir=rtl] .mdc-notched-outline__trailing, .mdc-notched-outline__trailing[dir=rtl] {\\n  /* @noflip */\\n  border-left: 1px solid;\\n  /* @noflip */\\n  border-right: none;\\n}\\n.mdc-notched-outline__notch {\\n  flex: 0 0 auto;\\n  width: auto;\\n  max-width: calc(100% - 12px * 2);\\n}\\n.mdc-notched-outline .mdc-floating-label {\\n  display: inline-block;\\n  position: relative;\\n  max-width: 100%;\\n}\\n.mdc-notched-outline .mdc-floating-label--float-above {\\n  text-overflow: clip;\\n}\\n.mdc-notched-outline--upgraded .mdc-floating-label--float-above {\\n  max-width: calc(100% / 0.75);\\n}\\n\\n.mdc-notched-outline--notched .mdc-notched-outline__notch {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 8px;\\n  border-top: none;\\n}\\n[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch, .mdc-notched-outline--notched .mdc-notched-outline__notch[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 8px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n\\n.mdc-notched-outline--no-label .mdc-notched-outline__notch {\\n  padding: 0;\\n}\\n\\n@-webkit-keyframes mdc-ripple-fg-radius-in {\\n  from {\\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\\n  }\\n  to {\\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\\n  }\\n}\\n\\n@keyframes mdc-ripple-fg-radius-in {\\n  from {\\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\\n  }\\n  to {\\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\\n  }\\n}\\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\\n  from {\\n    -webkit-animation-timing-function: linear;\\n            animation-timing-function: linear;\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: var(--mdc-ripple-fg-opacity, 0);\\n  }\\n}\\n@keyframes mdc-ripple-fg-opacity-in {\\n  from {\\n    -webkit-animation-timing-function: linear;\\n            animation-timing-function: linear;\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: var(--mdc-ripple-fg-opacity, 0);\\n  }\\n}\\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\\n  from {\\n    -webkit-animation-timing-function: linear;\\n            animation-timing-function: linear;\\n    opacity: var(--mdc-ripple-fg-opacity, 0);\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n@keyframes mdc-ripple-fg-opacity-out {\\n  from {\\n    -webkit-animation-timing-function: linear;\\n            animation-timing-function: linear;\\n    opacity: var(--mdc-ripple-fg-opacity, 0);\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n.mdc-text-field--filled {\\n  --mdc-ripple-fg-size: 0;\\n  --mdc-ripple-left: 0;\\n  --mdc-ripple-top: 0;\\n  --mdc-ripple-fg-scale: 1;\\n  --mdc-ripple-fg-translate-end: 0;\\n  --mdc-ripple-fg-translate-start: 0;\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n}\\n.mdc-text-field--filled .mdc-text-field__ripple::before,\\n.mdc-text-field--filled .mdc-text-field__ripple::after {\\n  position: absolute;\\n  border-radius: 50%;\\n  opacity: 0;\\n  pointer-events: none;\\n  content: \\\"\\\";\\n}\\n.mdc-text-field--filled .mdc-text-field__ripple::before {\\n  transition: opacity 15ms linear, background-color 15ms linear;\\n  z-index: 1;\\n}\\n.mdc-text-field--filled.mdc-ripple-upgraded .mdc-text-field__ripple::before {\\n  -webkit-transform: scale(var(--mdc-ripple-fg-scale, 1));\\n          transform: scale(var(--mdc-ripple-fg-scale, 1));\\n}\\n.mdc-text-field--filled.mdc-ripple-upgraded .mdc-text-field__ripple::after {\\n  top: 0;\\n  /* @noflip */\\n  left: 0;\\n  -webkit-transform: scale(0);\\n          transform: scale(0);\\n  -webkit-transform-origin: center center;\\n          transform-origin: center center;\\n}\\n.mdc-text-field--filled.mdc-ripple-upgraded--unbounded .mdc-text-field__ripple::after {\\n  top: var(--mdc-ripple-top, 0);\\n  /* @noflip */\\n  left: var(--mdc-ripple-left, 0);\\n}\\n.mdc-text-field--filled.mdc-ripple-upgraded--foreground-activation .mdc-text-field__ripple::after {\\n  -webkit-animation: mdc-ripple-fg-radius-in 225ms forwards, mdc-ripple-fg-opacity-in 75ms forwards;\\n          animation: mdc-ripple-fg-radius-in 225ms forwards, mdc-ripple-fg-opacity-in 75ms forwards;\\n}\\n.mdc-text-field--filled.mdc-ripple-upgraded--foreground-deactivation .mdc-text-field__ripple::after {\\n  -webkit-animation: mdc-ripple-fg-opacity-out 150ms;\\n          animation: mdc-ripple-fg-opacity-out 150ms;\\n  -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\\n          transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\\n}\\n.mdc-text-field--filled .mdc-text-field__ripple::before,\\n.mdc-text-field--filled .mdc-text-field__ripple::after {\\n  top: calc(50% - 100%);\\n  /* @noflip */\\n  left: calc(50% - 100%);\\n  width: 200%;\\n  height: 200%;\\n}\\n.mdc-text-field--filled.mdc-ripple-upgraded .mdc-text-field__ripple::after {\\n  width: var(--mdc-ripple-fg-size, 100%);\\n  height: var(--mdc-ripple-fg-size, 100%);\\n}\\n\\n.mdc-text-field__ripple {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  pointer-events: none;\\n}\\n\\n.mdc-text-field {\\n  border-top-left-radius: 4px;\\n  border-top-right-radius: 4px;\\n  border-bottom-right-radius: 0;\\n  border-bottom-left-radius: 0;\\n  padding: 0 16px;\\n  display: inline-flex;\\n  align-items: baseline;\\n  position: relative;\\n  box-sizing: border-box;\\n  overflow: hidden;\\n  /* @alternate */\\n  will-change: opacity, transform, color;\\n}\\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label {\\n  color: rgba(0, 0, 0, 0.6);\\n}\\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input {\\n  color: rgba(0, 0, 0, 0.87);\\n}\\n@media all {\\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.54);\\n  }\\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.54);\\n  }\\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.54);\\n  }\\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\\n    color: rgba(0, 0, 0, 0.54);\\n  }\\n}\\n@media all {\\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.54);\\n  }\\n}\\n.mdc-text-field .mdc-text-field__input {\\n  caret-color: #6200ee;\\n  /* @alternate */\\n  caret-color: var(--mdc-theme-primary, #6200ee);\\n}\\n.mdc-text-field:not(.mdc-text-field--disabled) + .mdc-text-field-helper-line .mdc-text-field-helper-text {\\n  color: rgba(0, 0, 0, 0.6);\\n}\\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field-character-counter,\\n.mdc-text-field:not(.mdc-text-field--disabled) + .mdc-text-field-helper-line .mdc-text-field-character-counter {\\n  color: rgba(0, 0, 0, 0.6);\\n}\\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--leading {\\n  color: rgba(0, 0, 0, 0.54);\\n}\\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\\n  color: rgba(0, 0, 0, 0.54);\\n}\\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__affix--prefix {\\n  color: rgba(0, 0, 0, 0.6);\\n}\\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__affix--suffix {\\n  color: rgba(0, 0, 0, 0.6);\\n}\\n.mdc-text-field .mdc-floating-label {\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n  pointer-events: none;\\n}\\n.mdc-text-field.mdc-text-field--with-leading-icon {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 16px;\\n}\\n[dir=rtl] .mdc-text-field.mdc-text-field--with-leading-icon, .mdc-text-field.mdc-text-field--with-leading-icon[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 16px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n.mdc-text-field.mdc-text-field--with-trailing-icon {\\n  /* @noflip */\\n  padding-left: 16px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n[dir=rtl] .mdc-text-field.mdc-text-field--with-trailing-icon, .mdc-text-field.mdc-text-field--with-trailing-icon[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 16px;\\n}\\n.mdc-text-field.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n[dir=rtl] .mdc-text-field.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon, .mdc-text-field.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n\\n.mdc-text-field__input {\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-smoothing: antialiased;\\n  font-family: Roboto, sans-serif;\\n  /* @alternate */\\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\\n  font-size: 1rem;\\n  /* @alternate */\\n  font-size: var(--mdc-typography-subtitle1-font-size, 1rem);\\n  font-weight: 400;\\n  /* @alternate */\\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\\n  letter-spacing: 0.009375em;\\n  /* @alternate */\\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);\\n  text-decoration: inherit;\\n  /* @alternate */\\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\\n  text-transform: inherit;\\n  /* @alternate */\\n  text-transform: var(--mdc-typography-subtitle1-text-transform, inherit);\\n  height: 28px;\\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n  width: 100%;\\n  min-width: 0;\\n  border: none;\\n  border-radius: 0;\\n  background: none;\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n  padding: 0;\\n}\\n.mdc-text-field__input::-ms-clear {\\n  display: none;\\n}\\n.mdc-text-field__input:focus {\\n  outline: none;\\n}\\n.mdc-text-field__input:invalid {\\n  box-shadow: none;\\n}\\n.mdc-text-field__input:-webkit-autofill {\\n  z-index: auto !important;\\n}\\n@media all {\\n  .mdc-text-field__input::-webkit-input-placeholder {\\n    transition: opacity 67ms cubic-bezier(0.4, 0, 0.2, 1);\\n    opacity: 0;\\n  }\\n  .mdc-text-field__input:-ms-input-placeholder {\\n    transition: opacity 67ms cubic-bezier(0.4, 0, 0.2, 1);\\n    opacity: 0;\\n  }\\n  .mdc-text-field__input::-ms-input-placeholder {\\n    transition: opacity 67ms cubic-bezier(0.4, 0, 0.2, 1);\\n    opacity: 0;\\n  }\\n  .mdc-text-field__input::placeholder {\\n    transition: opacity 67ms cubic-bezier(0.4, 0, 0.2, 1);\\n    opacity: 0;\\n  }\\n}\\n@media all {\\n  .mdc-text-field__input:-ms-input-placeholder {\\n    transition: opacity 67ms cubic-bezier(0.4, 0, 0.2, 1);\\n    opacity: 0;\\n  }\\n}\\n@media all {\\n  .mdc-text-field--fullwidth .mdc-text-field__input::-webkit-input-placeholder, .mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder, .mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder {\\n    transition-delay: 40ms;\\n    transition-duration: 110ms;\\n    opacity: 1;\\n  }\\n  .mdc-text-field--fullwidth .mdc-text-field__input:-ms-input-placeholder, .mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder, .mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder {\\n    transition-delay: 40ms;\\n    transition-duration: 110ms;\\n    opacity: 1;\\n  }\\n  .mdc-text-field--fullwidth .mdc-text-field__input::-ms-input-placeholder, .mdc-text-field--no-label .mdc-text-field__input::-ms-input-placeholder, .mdc-text-field--focused .mdc-text-field__input::-ms-input-placeholder {\\n    transition-delay: 40ms;\\n    transition-duration: 110ms;\\n    opacity: 1;\\n  }\\n  .mdc-text-field--fullwidth .mdc-text-field__input::placeholder, .mdc-text-field--no-label .mdc-text-field__input::placeholder, .mdc-text-field--focused .mdc-text-field__input::placeholder {\\n    transition-delay: 40ms;\\n    transition-duration: 110ms;\\n    opacity: 1;\\n  }\\n}\\n@media all {\\n  .mdc-text-field--fullwidth .mdc-text-field__input:-ms-input-placeholder, .mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder, .mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder {\\n    transition-delay: 40ms;\\n    transition-duration: 110ms;\\n    opacity: 1;\\n  }\\n}\\n\\n.mdc-text-field__affix {\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-smoothing: antialiased;\\n  font-family: Roboto, sans-serif;\\n  /* @alternate */\\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\\n  font-size: 1rem;\\n  /* @alternate */\\n  font-size: var(--mdc-typography-subtitle1-font-size, 1rem);\\n  font-weight: 400;\\n  /* @alternate */\\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\\n  letter-spacing: 0.009375em;\\n  /* @alternate */\\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);\\n  text-decoration: inherit;\\n  /* @alternate */\\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\\n  text-transform: inherit;\\n  /* @alternate */\\n  text-transform: var(--mdc-typography-subtitle1-text-transform, inherit);\\n  height: 28px;\\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n  opacity: 0;\\n  white-space: nowrap;\\n}\\n.mdc-text-field--label-floating .mdc-text-field__affix, .mdc-text-field--no-label .mdc-text-field__affix {\\n  opacity: 1;\\n}\\n\\n.mdc-text-field__affix--prefix {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 2px;\\n}\\n[dir=rtl] .mdc-text-field__affix--prefix, .mdc-text-field__affix--prefix[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 2px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n.mdc-text-field--end-aligned .mdc-text-field__affix--prefix {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 12px;\\n}\\n[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--prefix, .mdc-text-field--end-aligned .mdc-text-field__affix--prefix[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 12px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n\\n.mdc-text-field__affix--suffix {\\n  /* @noflip */\\n  padding-left: 12px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n[dir=rtl] .mdc-text-field__affix--suffix, .mdc-text-field__affix--suffix[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 12px;\\n}\\n.mdc-text-field--end-aligned .mdc-text-field__affix--suffix {\\n  /* @noflip */\\n  padding-left: 2px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__affix--suffix, .mdc-text-field--end-aligned .mdc-text-field__affix--suffix[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 2px;\\n}\\n\\n.mdc-text-field__input:-webkit-autofill + .mdc-floating-label {\\n  -webkit-transform: translateY(-50%) scale(0.75);\\n          transform: translateY(-50%) scale(0.75);\\n  cursor: auto;\\n}\\n\\n.mdc-text-field--filled {\\n  height: 56px;\\n}\\n.mdc-text-field--filled .mdc-text-field__ripple::before,\\n.mdc-text-field--filled .mdc-text-field__ripple::after {\\n  background-color: rgba(0, 0, 0, 0.87);\\n}\\n.mdc-text-field--filled:hover .mdc-text-field__ripple::before {\\n  opacity: 0.04;\\n}\\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before, .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before {\\n  transition-duration: 75ms;\\n  opacity: 0.12;\\n}\\n.mdc-text-field--filled::before {\\n  display: inline-block;\\n  width: 0;\\n  height: 40px;\\n  content: \\\"\\\";\\n  vertical-align: 0;\\n}\\n.mdc-text-field--filled:not(.mdc-text-field--disabled) {\\n  background-color: whitesmoke;\\n}\\n.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\\n  border-bottom-color: rgba(0, 0, 0, 0.42);\\n}\\n.mdc-text-field--filled:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\\n  border-bottom-color: rgba(0, 0, 0, 0.87);\\n}\\n.mdc-text-field--filled .mdc-line-ripple::after {\\n  border-bottom-color: #6200ee;\\n  /* @alternate */\\n  border-bottom-color: var(--mdc-theme-primary, #6200ee);\\n}\\n.mdc-text-field--filled .mdc-floating-label {\\n  /* @noflip */\\n  left: 16px;\\n  /* @noflip */\\n  right: initial;\\n}\\n[dir=rtl] .mdc-text-field--filled .mdc-floating-label, .mdc-text-field--filled .mdc-floating-label[dir=rtl] {\\n  /* @noflip */\\n  left: initial;\\n  /* @noflip */\\n  right: 16px;\\n}\\n.mdc-text-field--filled .mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-106%) scale(0.75);\\n          transform: translateY(-106%) scale(0.75);\\n}\\n.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input {\\n  height: 100%;\\n}\\n.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label {\\n  display: none;\\n}\\n.mdc-text-field--filled.mdc-text-field--no-label::before {\\n  display: none;\\n}\\n\\n.mdc-text-field--outlined {\\n  height: 56px;\\n  overflow: visible;\\n}\\n.mdc-text-field--outlined .mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-37.25px) scale(1);\\n          transform: translateY(-37.25px) scale(1);\\n}\\n.mdc-text-field--outlined .mdc-floating-label--float-above {\\n  font-size: 0.75rem;\\n}\\n.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,\\n.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-34.75px) scale(0.75);\\n          transform: translateY(-34.75px) scale(0.75);\\n}\\n.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,\\n.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\\n  font-size: 1rem;\\n}\\n.mdc-text-field--outlined .mdc-floating-label--shake {\\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined 250ms 1;\\n          animation: mdc-floating-label-shake-float-above-text-field-outlined 250ms 1;\\n}\\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75);\\n  }\\n}\\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-34.75px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-34.75px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-34.75px) scale(0.75);\\n  }\\n}\\n.mdc-text-field--outlined .mdc-text-field__input {\\n  height: 100%;\\n}\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\\n  border-color: rgba(0, 0, 0, 0.38);\\n}\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\\n  border-color: rgba(0, 0, 0, 0.87);\\n}\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\\n.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\\n  border-color: #6200ee;\\n  /* @alternate */\\n  border-color: var(--mdc-theme-primary, #6200ee);\\n}\\n.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading {\\n  /* @noflip */\\n  border-top-left-radius: 4px;\\n  /* @noflip */\\n  border-top-right-radius: 0;\\n  /* @noflip */\\n  border-bottom-right-radius: 0;\\n  /* @noflip */\\n  border-bottom-left-radius: 4px;\\n}\\n[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading, .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading[dir=rtl] {\\n  /* @noflip */\\n  border-top-left-radius: 0;\\n  /* @noflip */\\n  border-top-right-radius: 4px;\\n  /* @noflip */\\n  border-bottom-right-radius: 4px;\\n  /* @noflip */\\n  border-bottom-left-radius: 0;\\n}\\n.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing {\\n  /* @noflip */\\n  border-top-left-radius: 0;\\n  /* @noflip */\\n  border-top-right-radius: 4px;\\n  /* @noflip */\\n  border-bottom-right-radius: 4px;\\n  /* @noflip */\\n  border-bottom-left-radius: 0;\\n}\\n[dir=rtl] .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing, .mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__trailing[dir=rtl] {\\n  /* @noflip */\\n  border-top-left-radius: 4px;\\n  /* @noflip */\\n  border-top-right-radius: 0;\\n  /* @noflip */\\n  border-bottom-right-radius: 0;\\n  /* @noflip */\\n  border-bottom-left-radius: 4px;\\n}\\n.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch {\\n  padding-top: 1px;\\n}\\n.mdc-text-field--outlined .mdc-text-field__ripple::before,\\n.mdc-text-field--outlined .mdc-text-field__ripple::after {\\n  content: none;\\n}\\n.mdc-text-field--outlined .mdc-floating-label {\\n  /* @noflip */\\n  left: 4px;\\n  /* @noflip */\\n  right: initial;\\n}\\n[dir=rtl] .mdc-text-field--outlined .mdc-floating-label, .mdc-text-field--outlined .mdc-floating-label[dir=rtl] {\\n  /* @noflip */\\n  left: initial;\\n  /* @noflip */\\n  right: 4px;\\n}\\n.mdc-text-field--outlined .mdc-text-field__input {\\n  display: flex;\\n  border: none !important;\\n  background-color: transparent;\\n}\\n\\n.mdc-text-field--textarea {\\n  flex-direction: column;\\n  align-items: center;\\n  width: auto;\\n  height: auto;\\n  padding: 0;\\n  transition: none;\\n}\\n.mdc-text-field--textarea .mdc-floating-label {\\n  top: 19px;\\n}\\n.mdc-text-field--textarea .mdc-floating-label:not(.mdc-floating-label--float-above) {\\n  -webkit-transform: none;\\n          transform: none;\\n}\\n.mdc-text-field--textarea .mdc-text-field__input {\\n  flex-grow: 1;\\n  height: auto;\\n  min-height: 1.5rem;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  box-sizing: border-box;\\n  resize: none;\\n  padding: 0 16px;\\n  line-height: 1.5rem;\\n}\\n.mdc-text-field--textarea.mdc-text-field--filled::before {\\n  display: none;\\n}\\n.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-10.25px) scale(0.75);\\n          transform: translateY(-10.25px) scale(0.75);\\n}\\n.mdc-text-field--textarea.mdc-text-field--filled .mdc-floating-label--shake {\\n  -webkit-animation: mdc-floating-label-shake-float-above-textarea-filled 250ms 1;\\n          animation: mdc-floating-label-shake-float-above-textarea-filled 250ms 1;\\n}\\n@-webkit-keyframes mdc-floating-label-shake-float-above-textarea-filled {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75);\\n  }\\n}\\n@keyframes mdc-floating-label-shake-float-above-textarea-filled {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-10.25px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-10.25px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-10.25px) scale(0.75);\\n  }\\n}\\n.mdc-text-field--textarea.mdc-text-field--filled .mdc-text-field__input {\\n  margin-top: 23px;\\n  margin-bottom: 9px;\\n}\\n.mdc-text-field--textarea.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input {\\n  margin-top: 16px;\\n  margin-bottom: 16px;\\n}\\n.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch {\\n  padding-top: 0;\\n}\\n.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-27.25px) scale(1);\\n          transform: translateY(-27.25px) scale(1);\\n}\\n.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--float-above {\\n  font-size: 0.75rem;\\n}\\n.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,\\n.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-24.75px) scale(0.75);\\n          transform: translateY(-24.75px) scale(0.75);\\n}\\n.mdc-text-field--textarea.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,\\n.mdc-text-field--textarea.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\\n  font-size: 1rem;\\n}\\n.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label--shake {\\n  -webkit-animation: mdc-floating-label-shake-float-above-textarea-outlined 250ms 1;\\n          animation: mdc-floating-label-shake-float-above-textarea-outlined 250ms 1;\\n}\\n@-webkit-keyframes mdc-floating-label-shake-float-above-textarea-outlined {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75);\\n  }\\n}\\n@keyframes mdc-floating-label-shake-float-above-textarea-outlined {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75);\\n            transform: translateX(calc(4% - 0%)) translateY(-24.75px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75);\\n            transform: translateX(calc(-4% - 0%)) translateY(-24.75px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75);\\n            transform: translateX(calc(0 - 0%)) translateY(-24.75px) scale(0.75);\\n  }\\n}\\n.mdc-text-field--textarea.mdc-text-field--outlined .mdc-text-field__input {\\n  margin-top: 16px;\\n  margin-bottom: 16px;\\n}\\n.mdc-text-field--textarea.mdc-text-field--outlined .mdc-floating-label {\\n  top: 18px;\\n}\\n.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field__input {\\n  margin-bottom: 2px;\\n}\\n.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter {\\n  align-self: flex-end;\\n  padding: 0 16px;\\n}\\n.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::after {\\n  display: inline-block;\\n  width: 0;\\n  height: 16px;\\n  content: \\\"\\\";\\n  vertical-align: -16px;\\n}\\n.mdc-text-field--textarea.mdc-text-field--with-internal-counter .mdc-text-field-character-counter::before {\\n  display: none;\\n}\\n\\n.mdc-text-field__resizer {\\n  align-self: stretch;\\n  display: inline-flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  max-height: 100%;\\n  max-width: 100%;\\n  min-height: 56px;\\n  min-width: -webkit-fit-content;\\n  min-width: -moz-fit-content;\\n  min-width: fit-content;\\n  /* @alternate */\\n  min-width: -moz-available;\\n  /* @alternate */\\n  min-width: -webkit-fill-available;\\n  overflow: hidden;\\n  resize: both;\\n}\\n.mdc-text-field--filled .mdc-text-field__resizer {\\n  -webkit-transform: translateY(-1px);\\n          transform: translateY(-1px);\\n}\\n.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field__input,\\n.mdc-text-field--filled .mdc-text-field__resizer .mdc-text-field-character-counter {\\n  -webkit-transform: translateY(1px);\\n          transform: translateY(1px);\\n}\\n.mdc-text-field--outlined .mdc-text-field__resizer {\\n  -webkit-transform: translateX(-1px) translateY(-1px);\\n          transform: translateX(-1px) translateY(-1px);\\n}\\n[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer, .mdc-text-field--outlined .mdc-text-field__resizer[dir=rtl] {\\n  -webkit-transform: translateX(1px) translateY(-1px);\\n          transform: translateX(1px) translateY(-1px);\\n}\\n.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input,\\n.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter {\\n  -webkit-transform: translateX(1px) translateY(1px);\\n          transform: translateX(1px) translateY(1px);\\n}\\n[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input, .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field__input[dir=rtl],\\n[dir=rtl] .mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter,\\n.mdc-text-field--outlined .mdc-text-field__resizer .mdc-text-field-character-counter[dir=rtl] {\\n  -webkit-transform: translateX(-1px) translateY(1px);\\n          transform: translateX(-1px) translateY(1px);\\n}\\n\\n.mdc-text-field--fullwidth {\\n  padding: 0;\\n  width: 100%;\\n}\\n.mdc-text-field--fullwidth:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\\n  border-bottom-color: rgba(0, 0, 0, 0.42);\\n}\\n.mdc-text-field--fullwidth.mdc-text-field--disabled .mdc-line-ripple::before {\\n  border-bottom-color: rgba(0, 0, 0, 0.42);\\n}\\n.mdc-text-field--fullwidth:not(.mdc-text-field--textarea) {\\n  display: flex;\\n}\\n.mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .mdc-text-field__input {\\n  height: 100%;\\n}\\n.mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .mdc-floating-label {\\n  display: none;\\n}\\n.mdc-text-field--fullwidth:not(.mdc-text-field--textarea)::before {\\n  display: none;\\n}\\n.mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .mdc-text-field__ripple::before,\\n.mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .mdc-text-field__ripple::after {\\n  content: none;\\n}\\n.mdc-text-field--fullwidth:not(.mdc-text-field--textarea):not(.mdc-text-field--disabled) {\\n  background-color: transparent;\\n}\\n.mdc-text-field--fullwidth.mdc-text-field--textarea .mdc-text-field__resizer {\\n  resize: vertical;\\n}\\n\\n.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label {\\n  max-width: calc(100% - 48px);\\n  /* @noflip */\\n  left: 48px;\\n  /* @noflip */\\n  right: initial;\\n}\\n[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label, .mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label[dir=rtl] {\\n  /* @noflip */\\n  left: initial;\\n  /* @noflip */\\n  right: 48px;\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--filled .mdc-floating-label--float-above {\\n  max-width: calc(100% / 0.75 - 64px / 0.75);\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label {\\n  /* @noflip */\\n  left: 36px;\\n  /* @noflip */\\n  right: initial;\\n}\\n[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label, .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label[dir=rtl] {\\n  /* @noflip */\\n  left: initial;\\n  /* @noflip */\\n  right: 36px;\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\\n  max-width: calc(100% - 60px);\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-37.25px) translateX(-32px) scale(1);\\n          transform: translateY(-37.25px) translateX(-32px) scale(1);\\n}\\n[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above, .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above[dir=rtl] {\\n  -webkit-transform: translateY(-37.25px) translateX(32px) scale(1);\\n          transform: translateY(-37.25px) translateX(32px) scale(1);\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--float-above {\\n  font-size: 0.75rem;\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\\n  -webkit-transform: translateY(-34.75px) translateX(-32px) scale(0.75);\\n          transform: translateY(-34.75px) translateX(-32px) scale(0.75);\\n}\\n[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above, .mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl],\\n[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above,\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above[dir=rtl] {\\n  -webkit-transform: translateY(-34.75px) translateX(32px) scale(0.75);\\n          transform: translateY(-34.75px) translateX(32px) scale(0.75);\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\\n  font-size: 1rem;\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake {\\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1;\\n          animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1;\\n}\\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75);\\n  }\\n}\\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(4% - 32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(-4% - 32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - 32px)) translateY(-34.75px) scale(0.75);\\n  }\\n}\\n[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined .mdc-floating-label--shake, .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] .mdc-floating-label--shake {\\n  -webkit-animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1;\\n          animation: mdc-floating-label-shake-float-above-text-field-outlined-leading-icon 250ms 1;\\n}\\n@-webkit-keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75);\\n  }\\n}\\n@keyframes mdc-floating-label-shake-float-above-text-field-outlined-leading-icon-rtl {\\n  0% {\\n    -webkit-transform: translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  33% {\\n    -webkit-animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n            animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\\n    -webkit-transform: translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(4% - -32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  66% {\\n    -webkit-animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n            animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);\\n    -webkit-transform: translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(-4% - -32px)) translateY(-34.75px) scale(0.75);\\n  }\\n  100% {\\n    -webkit-transform: translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75);\\n            transform: translateX(calc(0 - -32px)) translateY(-34.75px) scale(0.75);\\n  }\\n}\\n\\n.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label {\\n  max-width: calc(100% - 64px);\\n}\\n.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above {\\n  max-width: calc(100% / 0.75 - 64px / 0.75);\\n}\\n.mdc-text-field--with-trailing-icon.mdc-text-field--outlined :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\\n  max-width: calc(100% - 60px);\\n}\\n\\n.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label {\\n  max-width: calc(100% - 96px);\\n}\\n.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon.mdc-text-field--filled .mdc-floating-label--float-above {\\n  max-width: calc(100% / 0.75 - 96px / 0.75);\\n}\\n\\n.mdc-text-field-helper-line {\\n  display: flex;\\n  justify-content: space-between;\\n  box-sizing: border-box;\\n}\\n.mdc-text-field + .mdc-text-field-helper-line {\\n  padding-right: 16px;\\n  padding-left: 16px;\\n}\\n\\n.mdc-form-field > .mdc-text-field + label {\\n  align-self: flex-start;\\n}\\n\\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\\n  color: rgba(98, 0, 238, 0.87);\\n}\\n.mdc-text-field--focused .mdc-notched-outline__leading,\\n.mdc-text-field--focused .mdc-notched-outline__notch,\\n.mdc-text-field--focused .mdc-notched-outline__trailing {\\n  border-width: 2px;\\n}\\n.mdc-text-field--focused + .mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {\\n  opacity: 1;\\n}\\n.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch {\\n  padding-top: 2px;\\n}\\n.mdc-text-field--focused.mdc-text-field--outlined.mdc-text-field--textarea .mdc-notched-outline--notched .mdc-notched-outline__notch {\\n  padding-top: 0;\\n}\\n\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\\n  border-bottom-color: #b00020;\\n  /* @alternate */\\n  border-bottom-color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\\n  border-bottom-color: #b00020;\\n  /* @alternate */\\n  border-bottom-color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\\n  color: #b00020;\\n  /* @alternate */\\n  color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\\n  color: #b00020;\\n  /* @alternate */\\n  color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid .mdc-text-field__input {\\n  caret-color: #b00020;\\n  /* @alternate */\\n  caret-color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\\n  color: #b00020;\\n  /* @alternate */\\n  color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\\n  border-bottom-color: #b00020;\\n  /* @alternate */\\n  border-bottom-color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\\n  border-color: #b00020;\\n  /* @alternate */\\n  border-color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\\n  border-color: #b00020;\\n  /* @alternate */\\n  border-color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\\n  border-color: #b00020;\\n  /* @alternate */\\n  border-color: var(--mdc-theme-error, #b00020);\\n}\\n.mdc-text-field--invalid + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\\n  opacity: 1;\\n}\\n\\n.mdc-text-field--disabled {\\n  pointer-events: none;\\n}\\n.mdc-text-field--disabled .mdc-text-field__input {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n@media all {\\n  .mdc-text-field--disabled .mdc-text-field__input::-webkit-input-placeholder {\\n    color: rgba(0, 0, 0, 0.38);\\n  }\\n  .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.38);\\n  }\\n  .mdc-text-field--disabled .mdc-text-field__input::-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.38);\\n  }\\n  .mdc-text-field--disabled .mdc-text-field__input::placeholder {\\n    color: rgba(0, 0, 0, 0.38);\\n  }\\n}\\n@media all {\\n  .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\\n    color: rgba(0, 0, 0, 0.38);\\n  }\\n}\\n.mdc-text-field--disabled .mdc-floating-label {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n.mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-helper-text {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n.mdc-text-field--disabled .mdc-text-field-character-counter,\\n.mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-character-counter {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n.mdc-text-field--disabled .mdc-text-field__icon--leading {\\n  color: rgba(0, 0, 0, 0.3);\\n}\\n.mdc-text-field--disabled .mdc-text-field__icon--trailing {\\n  color: rgba(0, 0, 0, 0.3);\\n}\\n.mdc-text-field--disabled .mdc-text-field__affix--prefix {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n.mdc-text-field--disabled .mdc-text-field__affix--suffix {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n.mdc-text-field--disabled .mdc-line-ripple::before {\\n  border-bottom-color: rgba(0, 0, 0, 0.06);\\n}\\n.mdc-text-field--disabled .mdc-notched-outline__leading,\\n.mdc-text-field--disabled .mdc-notched-outline__notch,\\n.mdc-text-field--disabled .mdc-notched-outline__trailing {\\n  border-color: rgba(0, 0, 0, 0.06);\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-text-field__input::-webkit-input-placeholder {\\n    color: GrayText;\\n  }\\n  .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\\n    color: GrayText;\\n  }\\n  .mdc-text-field--disabled .mdc-text-field__input::-ms-input-placeholder {\\n    color: GrayText;\\n  }\\n  .mdc-text-field--disabled .mdc-text-field__input::placeholder {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-floating-label {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-helper-text {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-text-field-character-counter,\\n.mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-character-counter {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-text-field__icon--leading {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-text-field__icon--trailing {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-text-field__affix--prefix {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-text-field__affix--suffix {\\n    color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-line-ripple::before {\\n    border-bottom-color: GrayText;\\n  }\\n}\\n@media screen and (-ms-high-contrast: active) {\\n  .mdc-text-field--disabled .mdc-notched-outline__leading,\\n.mdc-text-field--disabled .mdc-notched-outline__notch,\\n.mdc-text-field--disabled .mdc-notched-outline__trailing {\\n    border-color: GrayText;\\n  }\\n}\\n.mdc-text-field--disabled .mdc-floating-label {\\n  cursor: default;\\n}\\n.mdc-text-field--disabled.mdc-text-field--filled {\\n  background-color: #fafafa;\\n}\\n.mdc-text-field--disabled.mdc-text-field--filled .mdc-text-field__ripple {\\n  display: none;\\n}\\n.mdc-text-field--disabled .mdc-text-field__input {\\n  pointer-events: auto;\\n}\\n\\n.mdc-text-field--end-aligned .mdc-text-field__input {\\n  /* @noflip */\\n  text-align: right;\\n}\\n[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input, .mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl] {\\n  /* @noflip */\\n  text-align: left;\\n}\\n\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input,\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix, .mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input,\\n.mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix {\\n  /* @noflip */\\n  direction: ltr;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix, .mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 2px;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix, .mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix {\\n  /* @noflip */\\n  padding-left: 12px;\\n  /* @noflip */\\n  padding-right: 0;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--leading, .mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--leading {\\n  order: 1;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--suffix, .mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--suffix {\\n  order: 2;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__input, .mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__input {\\n  order: 3;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__affix--prefix, .mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__affix--prefix {\\n  order: 4;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text .mdc-text-field__icon--trailing, .mdc-text-field--ltr-text[dir=rtl] .mdc-text-field__icon--trailing {\\n  order: 5;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__input, .mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__input {\\n  /* @noflip */\\n  text-align: right;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--prefix, .mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--prefix {\\n  /* @noflip */\\n  padding-right: 12px;\\n}\\n[dir=rtl] .mdc-text-field--ltr-text.mdc-text-field--end-aligned .mdc-text-field__affix--suffix, .mdc-text-field--ltr-text.mdc-text-field--end-aligned[dir=rtl] .mdc-text-field__affix--suffix {\\n  /* @noflip */\\n  padding-left: 2px;\\n}\\n\\n.mdc-text-field-helper-text {\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-smoothing: antialiased;\\n  font-family: Roboto, sans-serif;\\n  /* @alternate */\\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\\n  font-size: 0.75rem;\\n  /* @alternate */\\n  font-size: var(--mdc-typography-caption-font-size, 0.75rem);\\n  line-height: 1.25rem;\\n  /* @alternate */\\n  line-height: var(--mdc-typography-caption-line-height, 1.25rem);\\n  font-weight: 400;\\n  /* @alternate */\\n  font-weight: var(--mdc-typography-caption-font-weight, 400);\\n  letter-spacing: 0.0333333333em;\\n  /* @alternate */\\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0333333333em);\\n  text-decoration: inherit;\\n  /* @alternate */\\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\\n  text-transform: inherit;\\n  /* @alternate */\\n  text-transform: var(--mdc-typography-caption-text-transform, inherit);\\n  display: block;\\n  margin-top: 0;\\n  /* @alternate */\\n  line-height: normal;\\n  margin: 0;\\n  opacity: 0;\\n  will-change: opacity;\\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\\n}\\n.mdc-text-field-helper-text::before {\\n  display: inline-block;\\n  width: 0;\\n  height: 16px;\\n  content: \\\"\\\";\\n  vertical-align: 0;\\n}\\n\\n.mdc-text-field-helper-text--persistent {\\n  transition: none;\\n  opacity: 1;\\n  will-change: initial;\\n}\\n\\n.mdc-text-field-character-counter {\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-font-smoothing: antialiased;\\n  font-family: Roboto, sans-serif;\\n  /* @alternate */\\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\\n  font-size: 0.75rem;\\n  /* @alternate */\\n  font-size: var(--mdc-typography-caption-font-size, 0.75rem);\\n  line-height: 1.25rem;\\n  /* @alternate */\\n  line-height: var(--mdc-typography-caption-line-height, 1.25rem);\\n  font-weight: 400;\\n  /* @alternate */\\n  font-weight: var(--mdc-typography-caption-font-weight, 400);\\n  letter-spacing: 0.0333333333em;\\n  /* @alternate */\\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0333333333em);\\n  text-decoration: inherit;\\n  /* @alternate */\\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\\n  text-transform: inherit;\\n  /* @alternate */\\n  text-transform: var(--mdc-typography-caption-text-transform, inherit);\\n  display: block;\\n  margin-top: 0;\\n  /* @alternate */\\n  line-height: normal;\\n  /* @noflip */\\n  margin-left: auto;\\n  /* @noflip */\\n  margin-right: 0;\\n  /* @noflip */\\n  padding-left: 16px;\\n  /* @noflip */\\n  padding-right: 0;\\n  white-space: nowrap;\\n}\\n.mdc-text-field-character-counter::before {\\n  display: inline-block;\\n  width: 0;\\n  height: 16px;\\n  content: \\\"\\\";\\n  vertical-align: 0;\\n}\\n[dir=rtl] .mdc-text-field-character-counter, .mdc-text-field-character-counter[dir=rtl] {\\n  /* @noflip */\\n  margin-left: 0;\\n  /* @noflip */\\n  margin-right: auto;\\n}\\n[dir=rtl] .mdc-text-field-character-counter, .mdc-text-field-character-counter[dir=rtl] {\\n  /* @noflip */\\n  padding-left: 0;\\n  /* @noflip */\\n  padding-right: 16px;\\n}\\n\\n.mdc-text-field__icon {\\n  align-self: center;\\n  cursor: pointer;\\n}\\n.mdc-text-field__icon:not([tabindex]), .mdc-text-field__icon[tabindex=\\\"-1\\\"] {\\n  cursor: default;\\n  pointer-events: none;\\n}\\n.mdc-text-field__icon svg {\\n  display: block;\\n}\\n\\n.mdc-text-field__icon--leading {\\n  /* @noflip */\\n  margin-left: 16px;\\n  /* @noflip */\\n  margin-right: 8px;\\n}\\n[dir=rtl] .mdc-text-field__icon--leading, .mdc-text-field__icon--leading[dir=rtl] {\\n  /* @noflip */\\n  margin-left: 8px;\\n  /* @noflip */\\n  margin-right: 16px;\\n}\\n\\n.mdc-text-field__icon--trailing {\\n  /* @noflip */\\n  margin-left: 12px;\\n  /* @noflip */\\n  margin-right: 12px;\\n}\\n[dir=rtl] .mdc-text-field__icon--trailing, .mdc-text-field__icon--trailing[dir=rtl] {\\n  /* @noflip */\\n  margin-left: 12px;\\n  /* @noflip */\\n  margin-right: 12px;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export class App {\n  constructor() { }\n\n  value = '123';\n}\n","// Module\nvar code = \"<template>\\n  <div style=\\\"display: inline-block\\\">\\n    <mdc-text-field label=\\\"Label\\\" maxlength=\\\"100\\\" value.bind=\\\"value\\\">\\n      <i class=\\\"material-icons\\\" mdc-text-field-icon leading>event</i>\\n      <i class=\\\"material-icons\\\" mdc-text-field-icon trailing>science</i>\\n    </mdc-text-field>\\n    <mdc-text-field-helper-line>\\n      <mdc-text-field-helper-text persistent>Helper text</mdc-text-field-helper-text>\\n      <mdc-text-field-character-counter></mdc-text-field-character-counter>\\n    </mdc-text-field-helper-line>\\n  </div>\\n\\n  <div style=\\\"display: inline-block\\\">\\n    <mdc-text-field label=\\\"Label\\\" outlined value.bind=\\\"value\\\" maxlength=\\\"100\\\">\\n      <i class=\\\"material-icons\\\" mdc-text-field-icon leading>event</i>\\n      <i class=\\\"material-icons\\\" mdc-text-field-icon trailing>science</i>\\n    </mdc-text-field>\\n    <mdc-text-field-helper-line>\\n      <mdc-text-field-helper-text validation>Validation text</mdc-text-field-helper-text>\\n    </mdc-text-field-helper-line>\\n  </div>\\n  <div>${value}</div>\\n</template>\\n\";\n// Exports\nmodule.exports = code;","import * as LogManager from 'aurelia-logging';\n\nconst logger = LogManager.getLogger('event-aggregator');\n\nlet Handler = class Handler {\n  constructor(messageType, callback) {\n    this.messageType = messageType;\n    this.callback = callback;\n  }\n\n  handle(message) {\n    if (message instanceof this.messageType) {\n      this.callback.call(null, message);\n    }\n  }\n};\n\n\nfunction invokeCallback(callback, data, event) {\n  try {\n    callback(data, event);\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\nfunction invokeHandler(handler, data) {\n  try {\n    handler.handle(data);\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\nexport let EventAggregator = class EventAggregator {\n  constructor() {\n    this.eventLookup = {};\n    this.messageHandlers = [];\n  }\n\n  publish(event, data) {\n    let subscribers;\n    let i;\n\n    if (!event) {\n      throw new Error('Event was invalid.');\n    }\n\n    if (typeof event === 'string') {\n      subscribers = this.eventLookup[event];\n      if (subscribers) {\n        subscribers = subscribers.slice();\n        i = subscribers.length;\n\n        while (i--) {\n          invokeCallback(subscribers[i], data, event);\n        }\n      }\n    } else {\n      subscribers = this.messageHandlers.slice();\n      i = subscribers.length;\n\n      while (i--) {\n        invokeHandler(subscribers[i], event);\n      }\n    }\n  }\n\n  subscribe(event, callback) {\n    let handler;\n    let subscribers;\n\n    if (!event) {\n      throw new Error('Event channel/type was invalid.');\n    }\n\n    if (typeof event === 'string') {\n      handler = callback;\n      subscribers = this.eventLookup[event] || (this.eventLookup[event] = []);\n    } else {\n      handler = new Handler(event, callback);\n      subscribers = this.messageHandlers;\n    }\n\n    subscribers.push(handler);\n\n    return {\n      dispose() {\n        let idx = subscribers.indexOf(handler);\n        if (idx !== -1) {\n          subscribers.splice(idx, 1);\n        }\n      }\n    };\n  }\n\n  subscribeOnce(event, callback) {\n    let sub = this.subscribe(event, (a, b) => {\n      sub.dispose();\n      return callback(a, b);\n    });\n\n    return sub;\n  }\n};\n\nexport function includeEventsIn(obj) {\n  let ea = new EventAggregator();\n\n  obj.subscribeOnce = function (event, callback) {\n    return ea.subscribeOnce(event, callback);\n  };\n\n  obj.subscribe = function (event, callback) {\n    return ea.subscribe(event, callback);\n  };\n\n  obj.publish = function (event, data) {\n    ea.publish(event, data);\n  };\n\n  return ea;\n}\n\nexport function configure(config) {\n  config.instance(EventAggregator, includeEventsIn(config.aurelia));\n}","import * as TheLogManager from 'aurelia-logging';\nimport { Container } from 'aurelia-dependency-injection';\nimport { Loader } from 'aurelia-loader';\nimport { BindingLanguage, ViewSlot, ViewResources, TemplatingEngine, CompositionTransaction, ViewEngine, HtmlBehaviorResource } from 'aurelia-templating';\nimport { DOM, PLATFORM } from 'aurelia-pal';\nimport { relativeToFile, join } from 'aurelia-path';\n\nfunction preventActionlessFormSubmit() {\n  DOM.addEventListener('submit', evt => {\n    const target = evt.target;\n    const action = target.action;\n\n    if (target.tagName.toLowerCase() === 'form' && !action) {\n      evt.preventDefault();\n    }\n  });\n}\n\nexport let Aurelia = class Aurelia {\n  constructor(loader, container, resources) {\n    this.loader = loader || new PLATFORM.Loader();\n    this.container = container || new Container().makeGlobal();\n    this.resources = resources || new ViewResources();\n    this.use = new FrameworkConfiguration(this);\n    this.logger = TheLogManager.getLogger('aurelia');\n    this.hostConfigured = false;\n    this.host = null;\n\n    this.use.instance(Aurelia, this);\n    this.use.instance(Loader, this.loader);\n    this.use.instance(ViewResources, this.resources);\n  }\n\n  start() {\n    if (this._started) {\n      return this._started;\n    }\n\n    this.logger.info('Aurelia Starting');\n    return this._started = this.use.apply().then(() => {\n      preventActionlessFormSubmit();\n\n      if (!this.container.hasResolver(BindingLanguage)) {\n        let message = 'You must configure Aurelia with a BindingLanguage implementation.';\n        this.logger.error(message);\n        throw new Error(message);\n      }\n\n      this.logger.info('Aurelia Started');\n      let evt = DOM.createCustomEvent('aurelia-started', { bubbles: true, cancelable: true });\n      DOM.dispatchEvent(evt);\n      return this;\n    });\n  }\n\n  enhance(bindingContext = {}, applicationHost = null) {\n    this._configureHost(applicationHost || DOM.querySelectorAll('body')[0]);\n\n    return new Promise(resolve => {\n      let engine = this.container.get(TemplatingEngine);\n      this.root = engine.enhance({ container: this.container, element: this.host, resources: this.resources, bindingContext: bindingContext });\n      this.root.attached();\n      this._onAureliaComposed();\n      resolve(this);\n    });\n  }\n\n  setRoot(root = null, applicationHost = null) {\n    let instruction = {};\n\n    if (this.root && this.root.viewModel && this.root.viewModel.router) {\n      this.root.viewModel.router.deactivate();\n      this.root.viewModel.router.reset();\n    }\n\n    this._configureHost(applicationHost);\n\n    let engine = this.container.get(TemplatingEngine);\n    let transaction = this.container.get(CompositionTransaction);\n    delete transaction.initialComposition;\n\n    if (!root) {\n      if (this.configModuleId) {\n        root = relativeToFile('./app', this.configModuleId);\n      } else {\n        root = 'app';\n      }\n    }\n\n    instruction.viewModel = root;\n    instruction.container = instruction.childContainer = this.container;\n    instruction.viewSlot = this.hostSlot;\n    instruction.host = this.host;\n\n    return engine.compose(instruction).then(r => {\n      this.root = r;\n      instruction.viewSlot.attached();\n      this._onAureliaComposed();\n      return this;\n    });\n  }\n\n  _configureHost(applicationHost) {\n    if (this.hostConfigured) {\n      return;\n    }\n    applicationHost = applicationHost || this.host;\n\n    if (!applicationHost || typeof applicationHost === 'string') {\n      this.host = DOM.getElementById(applicationHost || 'applicationHost');\n    } else {\n      this.host = applicationHost;\n    }\n\n    if (!this.host) {\n      throw new Error('No applicationHost was specified.');\n    }\n\n    this.hostConfigured = true;\n    this.host.aurelia = this;\n    this.hostSlot = new ViewSlot(this.host, true);\n    this.hostSlot.transformChildNodesIntoView();\n    this.container.registerInstance(DOM.boundary, this.host);\n  }\n\n  _onAureliaComposed() {\n    let evt = DOM.createCustomEvent('aurelia-composed', { bubbles: true, cancelable: true });\n    setTimeout(() => DOM.dispatchEvent(evt), 1);\n  }\n};\n\nconst logger = TheLogManager.getLogger('aurelia');\nconst extPattern = /\\.[^/.]+$/;\n\nfunction runTasks(config, tasks) {\n  let current;\n  let next = () => {\n    current = tasks.shift();\n    if (current) {\n      return Promise.resolve(current(config)).then(next);\n    }\n\n    return Promise.resolve();\n  };\n\n  return next();\n}\n\nfunction loadPlugin(fwConfig, loader, info) {\n  logger.debug(`Loading plugin ${info.moduleId}.`);\n  if (typeof info.moduleId === 'string') {\n    fwConfig.resourcesRelativeTo = info.resourcesRelativeTo;\n\n    let id = info.moduleId;\n\n    if (info.resourcesRelativeTo.length > 1) {\n      return loader.normalize(info.moduleId, info.resourcesRelativeTo[1]).then(normalizedId => _loadPlugin(normalizedId));\n    }\n\n    return _loadPlugin(id);\n  } else if (typeof info.configure === 'function') {\n    if (fwConfig.configuredPlugins.indexOf(info.configure) !== -1) {\n      return Promise.resolve();\n    }\n    fwConfig.configuredPlugins.push(info.configure);\n\n    return Promise.resolve(info.configure.call(null, fwConfig, info.config || {}));\n  }\n  throw new Error(invalidConfigMsg(info.moduleId || info.configure, 'plugin'));\n\n  function _loadPlugin(moduleId) {\n    return loader.loadModule(moduleId).then(m => {\n      if ('configure' in m) {\n        if (fwConfig.configuredPlugins.indexOf(m.configure) !== -1) {\n          return Promise.resolve();\n        }\n        return Promise.resolve(m.configure(fwConfig, info.config || {})).then(() => {\n          fwConfig.configuredPlugins.push(m.configure);\n          fwConfig.resourcesRelativeTo = null;\n          logger.debug(`Configured plugin ${info.moduleId}.`);\n        });\n      }\n\n      fwConfig.resourcesRelativeTo = null;\n      logger.debug(`Loaded plugin ${info.moduleId}.`);\n    });\n  }\n}\n\nfunction loadResources(aurelia, resourcesToLoad, appResources) {\n  if (Object.keys(resourcesToLoad).length === 0) {\n    return Promise.resolve();\n  }\n  let viewEngine = aurelia.container.get(ViewEngine);\n\n  return Promise.all(Object.keys(resourcesToLoad).map(n => _normalize(resourcesToLoad[n]))).then(loads => {\n    let names = [];\n    let importIds = [];\n\n    loads.forEach(l => {\n      names.push(undefined);\n      importIds.push(l.importId);\n    });\n\n    return viewEngine.importViewResources(importIds, names, appResources);\n  });\n\n  function _normalize(load) {\n    let moduleId = load.moduleId;\n    let ext = getExt(moduleId);\n\n    if (isOtherResource(moduleId)) {\n      moduleId = removeExt(moduleId);\n    }\n\n    return aurelia.loader.normalize(moduleId, load.relativeTo).then(normalized => {\n      return {\n        name: load.moduleId,\n        importId: isOtherResource(load.moduleId) ? addOriginalExt(normalized, ext) : normalized\n      };\n    });\n  }\n\n  function isOtherResource(name) {\n    let ext = getExt(name);\n    if (!ext) return false;\n    if (ext === '') return false;\n    if (ext === '.js' || ext === '.ts') return false;\n    return true;\n  }\n\n  function removeExt(name) {\n    return name.replace(extPattern, '');\n  }\n\n  function addOriginalExt(normalized, ext) {\n    return removeExt(normalized) + '.' + ext;\n  }\n}\n\nfunction getExt(name) {\n  let match = name.match(extPattern);\n  if (match && match.length > 0) {\n    return match[0].split('.')[1];\n  }\n}\n\nfunction loadBehaviors(config) {\n  return Promise.all(config.behaviorsToLoad.map(m => m.load(config.container, m.target))).then(() => {\n    config.behaviorsToLoad = null;\n  });\n}\n\nfunction assertProcessed(plugins) {\n  if (plugins.processed) {\n    throw new Error('This config instance has already been applied. To load more plugins or global resources, create a new FrameworkConfiguration instance.');\n  }\n}\n\nfunction invalidConfigMsg(cfg, type) {\n  return `Invalid ${type} [${cfg}], ${type} must be specified as functions or relative module IDs.`;\n}\n\nexport let FrameworkConfiguration = class FrameworkConfiguration {\n  constructor(aurelia) {\n    this.aurelia = aurelia;\n    this.container = aurelia.container;\n\n    this.info = [];\n    this.processed = false;\n    this.preTasks = [];\n    this.postTasks = [];\n\n    this.behaviorsToLoad = [];\n\n    this.configuredPlugins = [];\n    this.resourcesToLoad = {};\n    this.preTask(() => aurelia.loader.normalize('aurelia-bootstrapper').then(name => this.bootstrapperName = name));\n    this.postTask(() => loadResources(aurelia, this.resourcesToLoad, aurelia.resources));\n  }\n\n  instance(type, instance) {\n    this.container.registerInstance(type, instance);\n    return this;\n  }\n\n  singleton(type, implementation) {\n    this.container.registerSingleton(type, implementation);\n    return this;\n  }\n\n  transient(type, implementation) {\n    this.container.registerTransient(type, implementation);\n    return this;\n  }\n\n  preTask(task) {\n    assertProcessed(this);\n    this.preTasks.push(task);\n    return this;\n  }\n\n  postTask(task) {\n    assertProcessed(this);\n    this.postTasks.push(task);\n    return this;\n  }\n\n  feature(plugin, config = {}) {\n    switch (typeof plugin) {\n      case 'string':\n        let hasIndex = /\\/index$/i.test(plugin);\n        let moduleId = hasIndex || getExt(plugin) ? plugin : plugin + '/index';\n        let root = hasIndex ? plugin.substr(0, plugin.length - 6) : plugin;\n        this.info.push({ moduleId, resourcesRelativeTo: [root, ''], config });\n        break;\n\n      case 'function':\n        this.info.push({ configure: plugin, config: config || {} });\n        break;\n      default:\n        throw new Error(invalidConfigMsg(plugin, 'feature'));\n    }\n    return this;\n  }\n\n  globalResources(resources) {\n    assertProcessed(this);\n\n    let toAdd = Array.isArray(resources) ? resources : arguments;\n    let resource;\n    let resourcesRelativeTo = this.resourcesRelativeTo || ['', ''];\n\n    for (let i = 0, ii = toAdd.length; i < ii; ++i) {\n      resource = toAdd[i];\n      switch (typeof resource) {\n        case 'string':\n          let parent = resourcesRelativeTo[0];\n          let grandParent = resourcesRelativeTo[1];\n          let name = resource;\n\n          if ((resource.startsWith('./') || resource.startsWith('../')) && parent !== '') {\n            name = join(parent, resource);\n          }\n\n          this.resourcesToLoad[name] = { moduleId: name, relativeTo: grandParent };\n          break;\n        case 'function':\n          let meta = this.aurelia.resources.autoRegister(this.container, resource);\n          if (meta instanceof HtmlBehaviorResource && meta.elementName !== null) {\n            if (this.behaviorsToLoad.push(meta) === 1) {\n              this.postTask(() => loadBehaviors(this));\n            }\n          }\n          break;\n        default:\n          throw new Error(invalidConfigMsg(resource, 'resource'));\n      }\n    }\n\n    return this;\n  }\n\n  globalName(resourcePath, newName) {\n    assertProcessed(this);\n    this.resourcesToLoad[resourcePath] = { moduleId: newName, relativeTo: '' };\n    return this;\n  }\n\n  plugin(plugin, pluginConfig) {\n    assertProcessed(this);\n\n    let info;\n    switch (typeof plugin) {\n      case 'string':\n        info = { moduleId: plugin, resourcesRelativeTo: [plugin, ''], config: pluginConfig || {} };\n        break;\n      case 'function':\n        info = { configure: plugin, config: pluginConfig || {} };\n        break;\n      default:\n        throw new Error(invalidConfigMsg(plugin, 'plugin'));\n    }\n    this.info.push(info);\n    return this;\n  }\n\n  _addNormalizedPlugin(name, config) {\n    let plugin = { moduleId: name, resourcesRelativeTo: [name, ''], config: config || {} };\n    this.info.push(plugin);\n\n    this.preTask(() => {\n      let relativeTo = [name, this.bootstrapperName];\n      plugin.moduleId = name;\n      plugin.resourcesRelativeTo = relativeTo;\n      return Promise.resolve();\n    });\n\n    return this;\n  }\n\n  defaultBindingLanguage() {\n    return this._addNormalizedPlugin('aurelia-templating-binding');\n  }\n\n  router() {\n    return this._addNormalizedPlugin('aurelia-templating-router');\n  }\n\n  history() {\n    return this._addNormalizedPlugin('aurelia-history-browser');\n  }\n\n  defaultResources() {\n    return this._addNormalizedPlugin('aurelia-templating-resources');\n  }\n\n  eventAggregator() {\n    return this._addNormalizedPlugin('aurelia-event-aggregator');\n  }\n\n  basicConfiguration() {\n    return this.defaultBindingLanguage().defaultResources().eventAggregator();\n  }\n\n  standardConfiguration() {\n    return this.basicConfiguration().history().router();\n  }\n\n  developmentLogging(level) {\n    let logLevel = level ? TheLogManager.logLevel[level] : undefined;\n\n    if (logLevel === undefined) {\n      logLevel = TheLogManager.logLevel.debug;\n    }\n\n    this.preTask(() => {\n      return this.aurelia.loader.normalize('aurelia-logging-console', this.bootstrapperName).then(name => {\n        return this.aurelia.loader.loadModule(name).then(m => {\n          TheLogManager.addAppender(new m.ConsoleAppender());\n          TheLogManager.setLevel(logLevel);\n        });\n      });\n    });\n\n    return this;\n  }\n\n  apply() {\n    if (this.processed) {\n      return Promise.resolve();\n    }\n\n    return runTasks(this, this.preTasks).then(() => {\n      let loader = this.aurelia.loader;\n      let info = this.info;\n      let current;\n\n      let next = () => {\n        current = info.shift();\n        if (current) {\n          return loadPlugin(this, loader, current).then(next);\n        }\n\n        this.processed = true;\n        this.configuredPlugins = null;\n        return Promise.resolve();\n      };\n\n      return next().then(() => runTasks(this, this.postTasks));\n    });\n  }\n};\n\nexport * from 'aurelia-dependency-injection';\nexport * from 'aurelia-binding';\nexport * from 'aurelia-metadata';\nexport * from 'aurelia-templating';\nexport * from 'aurelia-loader';\nexport * from 'aurelia-task-queue';\nexport * from 'aurelia-path';\nexport * from 'aurelia-pal';\n\nexport const LogManager = TheLogManager;","import { History } from 'aurelia-history';\nimport { DOM, PLATFORM } from 'aurelia-pal';\n\nclass LinkHandler {\r\n    activate(history) { }\r\n    deactivate() { }\r\n}\r\nclass DefaultLinkHandler extends LinkHandler {\r\n    constructor() {\r\n        super();\r\n        this.handler = (e) => {\r\n            let { shouldHandleEvent, href } = DefaultLinkHandler.getEventInfo(e);\r\n            if (shouldHandleEvent) {\r\n                e.preventDefault();\r\n                this.history.navigate(href);\r\n            }\r\n        };\r\n    }\r\n    activate(history) {\r\n        if (history._hasPushState) {\r\n            this.history = history;\r\n            DOM.addEventListener('click', this.handler, true);\r\n        }\r\n    }\r\n    deactivate() {\r\n        DOM.removeEventListener('click', this.handler, true);\r\n    }\r\n    static getEventInfo(event) {\r\n        let $event = event;\r\n        let info = {\r\n            shouldHandleEvent: false,\r\n            href: null,\r\n            anchor: null\r\n        };\r\n        let target = DefaultLinkHandler.findClosestAnchor($event.target);\r\n        if (!target || !DefaultLinkHandler.targetIsThisWindow(target)) {\r\n            return info;\r\n        }\r\n        if (hasAttribute(target, 'download')\r\n            || hasAttribute(target, 'router-ignore')\r\n            || hasAttribute(target, 'data-router-ignore')) {\r\n            return info;\r\n        }\r\n        if ($event.altKey || $event.ctrlKey || $event.metaKey || $event.shiftKey) {\r\n            return info;\r\n        }\r\n        let href = target.getAttribute('href');\r\n        info.anchor = target;\r\n        info.href = href;\r\n        let leftButtonClicked = $event.which === 1;\r\n        let isRelative = href && !(href.charAt(0) === '#' || (/^[a-z]+:/i).test(href));\r\n        info.shouldHandleEvent = leftButtonClicked && isRelative;\r\n        return info;\r\n    }\r\n    static findClosestAnchor(el) {\r\n        while (el) {\r\n            if (el.tagName === 'A') {\r\n                return el;\r\n            }\r\n            el = el.parentNode;\r\n        }\r\n    }\r\n    static targetIsThisWindow(target) {\r\n        let targetWindow = target.getAttribute('target');\r\n        let win = PLATFORM.global;\r\n        return !targetWindow ||\r\n            targetWindow === win.name ||\r\n            targetWindow === '_self';\r\n    }\r\n}\r\nconst hasAttribute = (el, attr) => el.hasAttribute(attr);\n\nclass BrowserHistory extends History {\r\n    constructor(linkHandler) {\r\n        super();\r\n        this._isActive = false;\r\n        this._checkUrlCallback = this._checkUrl.bind(this);\r\n        this.location = PLATFORM.location;\r\n        this.history = PLATFORM.history;\r\n        this.linkHandler = linkHandler;\r\n    }\r\n    activate(options) {\r\n        if (this._isActive) {\r\n            throw new Error('History has already been activated.');\r\n        }\r\n        let $history = this.history;\r\n        let wantsPushState = !!options.pushState;\r\n        this._isActive = true;\r\n        let normalizedOptions = this.options = Object.assign({}, { root: '/' }, this.options, options);\r\n        let rootUrl = this.root = ('/' + normalizedOptions.root + '/').replace(rootStripper, '/');\r\n        let wantsHashChange = this._wantsHashChange = normalizedOptions.hashChange !== false;\r\n        let hasPushState = this._hasPushState = !!(normalizedOptions.pushState && $history && $history.pushState);\r\n        let eventName;\r\n        if (hasPushState) {\r\n            eventName = 'popstate';\r\n        }\r\n        else if (wantsHashChange) {\r\n            eventName = 'hashchange';\r\n        }\r\n        PLATFORM.addEventListener(eventName, this._checkUrlCallback);\r\n        if (wantsHashChange && wantsPushState) {\r\n            let $location = this.location;\r\n            let atRoot = $location.pathname.replace(/[^\\/]$/, '$&/') === rootUrl;\r\n            if (!hasPushState && !atRoot) {\r\n                let fragment = this.fragment = this._getFragment(null, true);\r\n                $location.replace(rootUrl + $location.search + '#' + fragment);\r\n                return true;\r\n            }\r\n            else if (hasPushState && atRoot && $location.hash) {\r\n                let fragment = this.fragment = this._getHash().replace(routeStripper, '');\r\n                $history.replaceState({}, DOM.title, rootUrl + fragment + $location.search);\r\n            }\r\n        }\r\n        if (!this.fragment) {\r\n            this.fragment = this._getFragment('');\r\n        }\r\n        this.linkHandler.activate(this);\r\n        if (!normalizedOptions.silent) {\r\n            return this._loadUrl('');\r\n        }\r\n    }\r\n    deactivate() {\r\n        const handler = this._checkUrlCallback;\r\n        PLATFORM.removeEventListener('popstate', handler);\r\n        PLATFORM.removeEventListener('hashchange', handler);\r\n        this._isActive = false;\r\n        this.linkHandler.deactivate();\r\n    }\r\n    getAbsoluteRoot() {\r\n        let $location = this.location;\r\n        let origin = createOrigin($location.protocol, $location.hostname, $location.port);\r\n        return `${origin}${this.root}`;\r\n    }\r\n    navigate(fragment, { trigger = true, replace = false } = {}) {\r\n        let location = this.location;\r\n        if (fragment && absoluteUrl.test(fragment)) {\r\n            location.href = fragment;\r\n            return true;\r\n        }\r\n        if (!this._isActive) {\r\n            return false;\r\n        }\r\n        fragment = this._getFragment(fragment || '');\r\n        if (this.fragment === fragment && !replace) {\r\n            return false;\r\n        }\r\n        this.fragment = fragment;\r\n        let url = this.root + fragment;\r\n        if (fragment === '' && url !== '/') {\r\n            url = url.slice(0, -1);\r\n        }\r\n        if (this._hasPushState) {\r\n            url = url.replace('//', '/');\r\n            this.history[replace ? 'replaceState' : 'pushState']({}, DOM.title, url);\r\n        }\r\n        else if (this._wantsHashChange) {\r\n            updateHash(location, fragment, replace);\r\n        }\r\n        else {\r\n            location.assign(url);\r\n        }\r\n        if (trigger) {\r\n            return this._loadUrl(fragment);\r\n        }\r\n        return true;\r\n    }\r\n    navigateBack() {\r\n        this.history.back();\r\n    }\r\n    setTitle(title) {\r\n        DOM.title = title;\r\n    }\r\n    setState(key, value) {\r\n        let $history = this.history;\r\n        let state = Object.assign({}, $history.state);\r\n        let { pathname, search, hash } = this.location;\r\n        state[key] = value;\r\n        $history.replaceState(state, null, `${pathname}${search}${hash}`);\r\n    }\r\n    getState(key) {\r\n        let state = Object.assign({}, this.history.state);\r\n        return state[key];\r\n    }\r\n    getHistoryIndex() {\r\n        let historyIndex = this.getState('HistoryIndex');\r\n        if (historyIndex === undefined) {\r\n            historyIndex = this.history.length - 1;\r\n            this.setState('HistoryIndex', historyIndex);\r\n        }\r\n        return historyIndex;\r\n    }\r\n    go(movement) {\r\n        this.history.go(movement);\r\n    }\r\n    _getHash() {\r\n        return this.location.hash.substr(1);\r\n    }\r\n    _getFragment(fragment, forcePushState) {\r\n        let rootUrl;\r\n        if (!fragment) {\r\n            if (this._hasPushState || !this._wantsHashChange || forcePushState) {\r\n                let location = this.location;\r\n                fragment = location.pathname + location.search;\r\n                rootUrl = this.root.replace(trailingSlash, '');\r\n                if (!fragment.indexOf(rootUrl)) {\r\n                    fragment = fragment.substr(rootUrl.length);\r\n                }\r\n            }\r\n            else {\r\n                fragment = this._getHash();\r\n            }\r\n        }\r\n        return '/' + fragment.replace(routeStripper, '');\r\n    }\r\n    _checkUrl() {\r\n        let current = this._getFragment('');\r\n        if (current !== this.fragment) {\r\n            this._loadUrl('');\r\n        }\r\n    }\r\n    _loadUrl(fragmentOverride) {\r\n        let fragment = this.fragment = this._getFragment(fragmentOverride);\r\n        return this.options.routeHandler ?\r\n            this.options.routeHandler(fragment) :\r\n            false;\r\n    }\r\n}\r\nBrowserHistory.inject = [LinkHandler];\r\nconst routeStripper = /^#?\\/*|\\s+$/g;\r\nconst rootStripper = /^\\/+|\\/+$/g;\r\nconst trailingSlash = /\\/$/;\r\nconst absoluteUrl = /^([a-z][a-z0-9+\\-.]*:)?\\/\\//i;\r\nfunction updateHash($location, fragment, replace) {\r\n    if (replace) {\r\n        let href = $location.href.replace(/(javascript:|#).*$/, '');\r\n        $location.replace(href + '#' + fragment);\r\n    }\r\n    else {\r\n        $location.hash = '#' + fragment;\r\n    }\r\n}\r\nfunction createOrigin(protocol, hostname, port) {\r\n    return `${protocol}//${hostname}${port ? ':' + port : ''}`;\r\n}\n\nfunction configure(config) {\r\n    const $config = config;\r\n    $config.singleton(History, BrowserHistory);\r\n    $config.transient(LinkHandler, DefaultLinkHandler);\r\n}\n\nexport { BrowserHistory, DefaultLinkHandler, LinkHandler, configure };\n//# sourceMappingURL=aurelia-history-browser.js.map\n","\nexport let ConsoleAppender = class ConsoleAppender {\n  debug(logger, ...rest) {\n    console.debug(`DEBUG [${logger.id}]`, ...rest);\n  }\n\n  info(logger, ...rest) {\n    console.info(`INFO [${logger.id}]`, ...rest);\n  }\n\n  warn(logger, ...rest) {\n    console.warn(`WARN [${logger.id}]`, ...rest);\n  }\n\n  error(logger, ...rest) {\n    console.error(`ERROR [${logger.id}]`, ...rest);\n  }\n};","import { initializePAL, isInitialized } from 'aurelia-pal';\n\nexport const _PLATFORM = {\n  location: window.location,\n  history: window.history,\n  addEventListener(eventName, callback, capture) {\n    this.global.addEventListener(eventName, callback, capture);\n  },\n  removeEventListener(eventName, callback, capture) {\n    this.global.removeEventListener(eventName, callback, capture);\n  },\n  performance: window.performance,\n  requestAnimationFrame(callback) {\n    return this.global.requestAnimationFrame(callback);\n  }\n};\n\nif (typeof FEATURE_NO_IE === 'undefined') {\n  function test() {}\n\n  if (test.name === undefined) {\n    Object.defineProperty(Function.prototype, 'name', {\n      get: function () {\n        let name = this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n\n        Object.defineProperty(this, 'name', { value: name });\n        return name;\n      }\n    });\n  }\n}\n\nif (typeof FEATURE_NO_IE === 'undefined') {\n  if (!('classList' in document.createElement('_')) || document.createElementNS && !('classList' in document.createElementNS('http://www.w3.org/2000/svg', 'g'))) {\n    let protoProp = 'prototype';\n    let strTrim = String.prototype.trim;\n    let arrIndexOf = Array.prototype.indexOf;\n    let emptyArray = [];\n\n    let DOMEx = function (type, message) {\n      this.name = type;\n      this.code = DOMException[type];\n      this.message = message;\n    };\n\n    let checkTokenAndGetIndex = function (classList, token) {\n      if (token === '') {\n        throw new DOMEx('SYNTAX_ERR', 'An invalid or illegal string was specified');\n      }\n\n      if (/\\s/.test(token)) {\n        throw new DOMEx('INVALID_CHARACTER_ERR', 'String contains an invalid character');\n      }\n\n      return arrIndexOf.call(classList, token);\n    };\n\n    let ClassList = function (elem) {\n      let trimmedClasses = strTrim.call(elem.getAttribute('class') || '');\n      let classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : emptyArray;\n\n      for (let i = 0, ii = classes.length; i < ii; ++i) {\n        this.push(classes[i]);\n      }\n\n      this._updateClassName = function () {\n        elem.setAttribute('class', this.toString());\n      };\n    };\n\n    let classListProto = ClassList[protoProp] = [];\n\n    DOMEx[protoProp] = Error[protoProp];\n\n    classListProto.item = function (i) {\n      return this[i] || null;\n    };\n\n    classListProto.contains = function (token) {\n      token += '';\n      return checkTokenAndGetIndex(this, token) !== -1;\n    };\n\n    classListProto.add = function () {\n      let tokens = arguments;\n      let i = 0;\n      let ii = tokens.length;\n      let token;\n      let updated = false;\n\n      do {\n        token = tokens[i] + '';\n        if (checkTokenAndGetIndex(this, token) === -1) {\n          this.push(token);\n          updated = true;\n        }\n      } while (++i < ii);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n\n    classListProto.remove = function () {\n      let tokens = arguments;\n      let i = 0;\n      let ii = tokens.length;\n      let token;\n      let updated = false;\n      let index;\n\n      do {\n        token = tokens[i] + '';\n        index = checkTokenAndGetIndex(this, token);\n        while (index !== -1) {\n          this.splice(index, 1);\n          updated = true;\n          index = checkTokenAndGetIndex(this, token);\n        }\n      } while (++i < ii);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n\n    classListProto.toggle = function (token, force) {\n      token += '';\n\n      let result = this.contains(token);\n      let method = result ? force !== true && 'remove' : force !== false && 'add';\n\n      if (method) {\n        this[method](token);\n      }\n\n      if (force === true || force === false) {\n        return force;\n      }\n\n      return !result;\n    };\n\n    classListProto.toString = function () {\n      return this.join(' ');\n    };\n\n    Object.defineProperty(Element.prototype, 'classList', {\n      get: function () {\n        return new ClassList(this);\n      },\n      enumerable: true,\n      configurable: true\n    });\n  } else {\n    let testElement = document.createElement('_');\n    testElement.classList.add('c1', 'c2');\n\n    if (!testElement.classList.contains('c2')) {\n      let createMethod = function (method) {\n        let original = DOMTokenList.prototype[method];\n\n        DOMTokenList.prototype[method] = function (token) {\n          for (let i = 0, ii = arguments.length; i < ii; ++i) {\n            token = arguments[i];\n            original.call(this, token);\n          }\n        };\n      };\n\n      createMethod('add');\n      createMethod('remove');\n    }\n\n    testElement.classList.toggle('c3', false);\n\n    if (testElement.classList.contains('c3')) {\n      let _toggle = DOMTokenList.prototype.toggle;\n\n      DOMTokenList.prototype.toggle = function (token, force) {\n        if (1 in arguments && !this.contains(token) === !force) {\n          return force;\n        }\n\n        return _toggle.call(this, token);\n      };\n    }\n\n    testElement = null;\n  }\n}\n\nif (typeof FEATURE_NO_IE === 'undefined') {\n  // @license http://opensource.org/licenses/MIT\n  if ('performance' in window === false) {\n    window.performance = {};\n  }\n\n  if ('now' in window.performance === false) {\n    let nowOffset = Date.now();\n\n    if (performance.timing && performance.timing.navigationStart) {\n      nowOffset = performance.timing.navigationStart;\n    }\n\n    window.performance.now = function now() {\n      return Date.now() - nowOffset;\n    };\n  }\n\n  const startOffset = Date.now ? Date.now() : +new Date();\n  const _entries = [];\n  const _marksIndex = {};\n\n  function _filterEntries(key, value) {\n    var i = 0,\n        n = _entries.length,\n        result = [];\n    for (; i < n; i++) {\n      if (_entries[i][key] == value) {\n        result.push(_entries[i]);\n      }\n    }\n    return result;\n  }\n\n  function _clearEntries(type, name) {\n    var i = _entries.length,\n        entry;\n    while (i--) {\n      entry = _entries[i];\n      if (entry.entryType == type && (name === void 0 || entry.name == name)) {\n        _entries.splice(i, 1);\n      }\n    }\n  };\n\n  if (!window.performance.mark) {\n    window.performance.mark = window.performance.webkitMark || function (name) {\n      const mark = {\n        name,\n        entryType: \"mark\",\n        startTime: window.performance.now(),\n        duration: 0\n      };\n\n      _entries.push(mark);\n      _marksIndex[name] = mark;\n    };\n  }\n\n  if (!window.performance.measure) {\n    window.performance.measure = window.performance.webkitMeasure || function (name, startMark, endMark) {\n      startMark = _marksIndex[startMark].startTime;\n      endMark = _marksIndex[endMark].startTime;\n\n      _entries.push({\n        name,\n        entryType: \"measure\",\n        startTime: startMark,\n        duration: endMark - startMark\n      });\n    };\n  }\n\n  if (!window.performance.getEntriesByType) {\n    window.performance.getEntriesByType = window.performance.webkitGetEntriesByType || function (type) {\n      return _filterEntries(\"entryType\", type);\n    };\n  }\n\n  if (!window.performance.getEntriesByName) {\n    window.performance.getEntriesByName = window.performance.webkitGetEntriesByName || function (name) {\n      return _filterEntries(\"name\", name);\n    };\n  }\n\n  if (!window.performance.clearMarks) {\n    window.performance.clearMarks = window.performance.webkitClearMarks || function (name) {\n      _clearEntries(\"mark\", name);\n    };\n  }\n\n  if (!window.performance.clearMeasures) {\n    window.performance.clearMeasures = window.performance.webkitClearMeasures || function (name) {\n      _clearEntries(\"measure\", name);\n    };\n  }\n\n  _PLATFORM.performance = window.performance;\n}\n\nif (typeof FEATURE_NO_IE === 'undefined') {\n  let con = window.console = window.console || {};\n  let nop = function () {};\n\n  if (!con.memory) con.memory = {};\n  ('assert,clear,count,debug,dir,dirxml,error,exception,group,' + 'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' + 'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',').forEach(m => {\n    if (!con[m]) con[m] = nop;\n  });\n\n  if (typeof con.log === 'object') {\n    'log,info,warn,error,assert,dir,clear,profile,profileEnd'.split(',').forEach(function (method) {\n      console[method] = this.bind(console[method], console);\n    }, Function.prototype.call);\n  }\n}\n\nif (typeof FEATURE_NO_IE === 'undefined') {\n  if (!window.CustomEvent || typeof window.CustomEvent !== 'function') {\n    let CustomEvent = function (event, params) {\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n\n      let evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    };\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent;\n  }\n}\n\nif (Element && !Element.prototype.matches) {\n  let proto = Element.prototype;\n  proto.matches = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector;\n}\n\nexport const _FEATURE = {\n  shadowDOM: !!HTMLElement.prototype.attachShadow,\n  scopedCSS: 'scoped' in document.createElement('style'),\n  htmlTemplateElement: function () {\n    let d = document.createElement('div');\n    d.innerHTML = '<template></template>';\n    return 'content' in d.children[0];\n  }(),\n  mutationObserver: !!(window.MutationObserver || window.WebKitMutationObserver),\n  ensureHTMLTemplateElement: t => t\n};\n\nif (typeof FEATURE_NO_IE === 'undefined') {\n  function isSVGTemplate(el) {\n    return el.tagName === 'template' && el.namespaceURI === 'http://www.w3.org/2000/svg';\n  }\n\n  function fixSVGTemplateElement(el) {\n    let template = el.ownerDocument.createElement('template');\n    let attrs = el.attributes;\n    let length = attrs.length;\n    let attr;\n\n    el.parentNode.insertBefore(template, el);\n\n    while (length-- > 0) {\n      attr = attrs[length];\n      template.setAttribute(attr.name, attr.value);\n      el.removeAttribute(attr.name);\n    }\n\n    el.parentNode.removeChild(el);\n\n    return fixHTMLTemplateElement(template);\n  }\n\n  function fixHTMLTemplateElement(template) {\n    let content = template.content = document.createDocumentFragment();\n    let child;\n\n    while (child = template.firstChild) {\n      content.appendChild(child);\n    }\n\n    return template;\n  }\n\n  function fixHTMLTemplateElementRoot(template) {\n    let content = fixHTMLTemplateElement(template).content;\n    let childTemplates = content.querySelectorAll('template');\n\n    for (let i = 0, ii = childTemplates.length; i < ii; ++i) {\n      let child = childTemplates[i];\n\n      if (isSVGTemplate(child)) {\n        fixSVGTemplateElement(child);\n      } else {\n        fixHTMLTemplateElement(child);\n      }\n    }\n\n    return template;\n  }\n\n  if (!_FEATURE.htmlTemplateElement) {\n    _FEATURE.ensureHTMLTemplateElement = fixHTMLTemplateElementRoot;\n  }\n}\n\nlet shadowPoly = window.ShadowDOMPolyfill || null;\n\nexport const _DOM = {\n  Element: Element,\n  NodeList: NodeList,\n  SVGElement: SVGElement,\n  boundary: 'aurelia-dom-boundary',\n  addEventListener(eventName, callback, capture) {\n    document.addEventListener(eventName, callback, capture);\n  },\n  removeEventListener(eventName, callback, capture) {\n    document.removeEventListener(eventName, callback, capture);\n  },\n  adoptNode(node) {\n    return document.adoptNode(node);\n  },\n  createAttribute(name) {\n    return document.createAttribute(name);\n  },\n  createElement(tagName) {\n    return document.createElement(tagName);\n  },\n  createTextNode(text) {\n    return document.createTextNode(text);\n  },\n  createComment(text) {\n    return document.createComment(text);\n  },\n  createDocumentFragment() {\n    return document.createDocumentFragment();\n  },\n  createTemplateElement() {\n    let template = document.createElement('template');\n    return _FEATURE.ensureHTMLTemplateElement(template);\n  },\n  createMutationObserver(callback) {\n    return new (window.MutationObserver || window.WebKitMutationObserver)(callback);\n  },\n  createCustomEvent(eventType, options) {\n    return new window.CustomEvent(eventType, options);\n  },\n  dispatchEvent(evt) {\n    document.dispatchEvent(evt);\n  },\n  getComputedStyle(element) {\n    return window.getComputedStyle(element);\n  },\n  getElementById(id) {\n    return document.getElementById(id);\n  },\n  querySelector(query) {\n    return document.querySelector(query);\n  },\n  querySelectorAll(query) {\n    return document.querySelectorAll(query);\n  },\n  nextElementSibling(element) {\n    if (element.nextElementSibling) {\n      return element.nextElementSibling;\n    }\n    do {\n      element = element.nextSibling;\n    } while (element && element.nodeType !== 1);\n    return element;\n  },\n  createTemplateFromMarkup(markup) {\n    let parser = document.createElement('div');\n    parser.innerHTML = markup;\n\n    let temp = parser.firstElementChild;\n    if (!temp || temp.nodeName !== 'TEMPLATE') {\n      throw new Error('Template markup must be wrapped in a <template> element e.g. <template> <!-- markup here --> </template>');\n    }\n\n    return _FEATURE.ensureHTMLTemplateElement(temp);\n  },\n  appendNode(newNode, parentNode) {\n    (parentNode || document.body).appendChild(newNode);\n  },\n  replaceNode(newNode, node, parentNode) {\n    if (node.parentNode) {\n      node.parentNode.replaceChild(newNode, node);\n    } else if (shadowPoly !== null) {\n      shadowPoly.unwrap(parentNode).replaceChild(shadowPoly.unwrap(newNode), shadowPoly.unwrap(node));\n    } else {\n      parentNode.replaceChild(newNode, node);\n    }\n  },\n  removeNode(node, parentNode) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    } else if (parentNode) {\n      if (shadowPoly !== null) {\n        shadowPoly.unwrap(parentNode).removeChild(shadowPoly.unwrap(node));\n      } else {\n        parentNode.removeChild(node);\n      }\n    }\n  },\n  injectStyles(styles, destination, prepend, id) {\n    if (id) {\n      let oldStyle = document.getElementById(id);\n      if (oldStyle) {\n        let isStyleTag = oldStyle.tagName.toLowerCase() === 'style';\n\n        if (isStyleTag) {\n          oldStyle.innerHTML = styles;\n          return;\n        }\n\n        throw new Error('The provided id does not indicate a style tag.');\n      }\n    }\n\n    let node = document.createElement('style');\n    node.innerHTML = styles;\n    node.type = 'text/css';\n\n    if (id) {\n      node.id = id;\n    }\n\n    destination = destination || document.head;\n\n    if (prepend && destination.childNodes.length > 0) {\n      destination.insertBefore(node, destination.childNodes[0]);\n    } else {\n      destination.appendChild(node);\n    }\n\n    return node;\n  }\n};\n\nexport function initialize() {\n  if (isInitialized) {\n    return;\n  }\n\n  initializePAL((platform, feature, dom) => {\n    Object.assign(platform, _PLATFORM);\n    Object.assign(feature, _FEATURE);\n    Object.assign(dom, _DOM);\n\n    Object.defineProperty(dom, 'title', {\n      get: () => document.title,\n      set: value => {\n        document.title = value;\n      }\n    });\n\n    Object.defineProperty(dom, 'activeElement', {\n      get: () => document.activeElement\n    });\n\n    Object.defineProperty(platform, 'XMLHttpRequest', {\n      get: () => platform.global.XMLHttpRequest\n    });\n  });\n}","var _class, _temp, _dec, _class2, _dec2, _class3, _class4, _temp2, _class5, _temp3;\n\nimport * as LogManager from 'aurelia-logging';\nimport { camelCase, SVGAnalyzer, bindingMode, connectable, enqueueBindingConnect, sourceContext, Parser, ObserverLocator, EventManager, ListenerExpression, BindingExpression, CallExpression, delegationStrategy, NameExpression, LiteralString } from 'aurelia-binding';\nimport { BehaviorInstruction, BindingLanguage } from 'aurelia-templating';\n\nexport let AttributeMap = (_temp = _class = class AttributeMap {\n\n  constructor(svg) {\n    this.elements = Object.create(null);\n    this.allElements = Object.create(null);\n\n    this.svg = svg;\n\n    this.registerUniversal('accesskey', 'accessKey');\n    this.registerUniversal('contenteditable', 'contentEditable');\n    this.registerUniversal('tabindex', 'tabIndex');\n    this.registerUniversal('textcontent', 'textContent');\n    this.registerUniversal('innerhtml', 'innerHTML');\n    this.registerUniversal('scrolltop', 'scrollTop');\n    this.registerUniversal('scrollleft', 'scrollLeft');\n    this.registerUniversal('readonly', 'readOnly');\n\n    this.register('label', 'for', 'htmlFor');\n\n    this.register('img', 'usemap', 'useMap');\n\n    this.register('input', 'maxlength', 'maxLength');\n    this.register('input', 'minlength', 'minLength');\n    this.register('input', 'formaction', 'formAction');\n    this.register('input', 'formenctype', 'formEncType');\n    this.register('input', 'formmethod', 'formMethod');\n    this.register('input', 'formnovalidate', 'formNoValidate');\n    this.register('input', 'formtarget', 'formTarget');\n\n    this.register('textarea', 'maxlength', 'maxLength');\n\n    this.register('td', 'rowspan', 'rowSpan');\n    this.register('td', 'colspan', 'colSpan');\n    this.register('th', 'rowspan', 'rowSpan');\n    this.register('th', 'colspan', 'colSpan');\n  }\n\n  register(elementName, attributeName, propertyName) {\n    elementName = elementName.toLowerCase();\n    attributeName = attributeName.toLowerCase();\n    const element = this.elements[elementName] = this.elements[elementName] || Object.create(null);\n    element[attributeName] = propertyName;\n  }\n\n  registerUniversal(attributeName, propertyName) {\n    attributeName = attributeName.toLowerCase();\n    this.allElements[attributeName] = propertyName;\n  }\n\n  map(elementName, attributeName) {\n    if (this.svg.isStandardSvgAttribute(elementName, attributeName)) {\n      return attributeName;\n    }\n    elementName = elementName.toLowerCase();\n    attributeName = attributeName.toLowerCase();\n    const element = this.elements[elementName];\n    if (element !== undefined && attributeName in element) {\n      return element[attributeName];\n    }\n    if (attributeName in this.allElements) {\n      return this.allElements[attributeName];\n    }\n\n    if (/(?:^data-)|(?:^aria-)|:/.test(attributeName)) {\n      return attributeName;\n    }\n    return camelCase(attributeName);\n  }\n}, _class.inject = [SVGAnalyzer], _temp);\n\nexport let InterpolationBindingExpression = class InterpolationBindingExpression {\n  constructor(observerLocator, targetProperty, parts, mode, lookupFunctions, attribute) {\n    this.observerLocator = observerLocator;\n    this.targetProperty = targetProperty;\n    this.parts = parts;\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n    this.attribute = this.attrToRemove = attribute;\n    this.discrete = false;\n  }\n\n  createBinding(target) {\n    if (this.parts.length === 3) {\n      return new ChildInterpolationBinding(target, this.observerLocator, this.parts[1], this.mode, this.lookupFunctions, this.targetProperty, this.parts[0], this.parts[2]);\n    }\n    return new InterpolationBinding(this.observerLocator, this.parts, target, this.targetProperty, this.mode, this.lookupFunctions);\n  }\n};\n\nfunction validateTarget(target, propertyName) {\n  if (propertyName === 'style') {\n    LogManager.getLogger('templating-binding').info('Internet Explorer does not support interpolation in \"style\" attributes.  Use the style attribute\\'s alias, \"css\" instead.');\n  } else if (target.parentElement && target.parentElement.nodeName === 'TEXTAREA' && propertyName === 'textContent') {\n    throw new Error('Interpolation binding cannot be used in the content of a textarea element.  Use <textarea value.bind=\"expression\"></textarea> instead.');\n  }\n}\n\nexport let InterpolationBinding = class InterpolationBinding {\n  constructor(observerLocator, parts, target, targetProperty, mode, lookupFunctions) {\n    validateTarget(target, targetProperty);\n    this.observerLocator = observerLocator;\n    this.parts = parts;\n    this.target = target;\n    this.targetProperty = targetProperty;\n    this.targetAccessor = observerLocator.getAccessor(target, targetProperty);\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n  }\n\n  interpolate() {\n    if (this.isBound) {\n      let value = '';\n      let parts = this.parts;\n      for (let i = 0, ii = parts.length; i < ii; i++) {\n        value += i % 2 === 0 ? parts[i] : this[`childBinding${i}`].value;\n      }\n      this.targetAccessor.setValue(value, this.target, this.targetProperty);\n    }\n  }\n\n  updateOneTimeBindings() {\n    for (let i = 1, ii = this.parts.length; i < ii; i += 2) {\n      let child = this[`childBinding${i}`];\n      if (child.mode === bindingMode.oneTime) {\n        child.call();\n      }\n    }\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.source = source;\n\n    let parts = this.parts;\n    for (let i = 1, ii = parts.length; i < ii; i += 2) {\n      let binding = new ChildInterpolationBinding(this, this.observerLocator, parts[i], this.mode, this.lookupFunctions);\n      binding.bind(source);\n      this[`childBinding${i}`] = binding;\n    }\n\n    this.isBound = true;\n    this.interpolate();\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    this.source = null;\n    let parts = this.parts;\n    for (let i = 1, ii = parts.length; i < ii; i += 2) {\n      let name = `childBinding${i}`;\n      this[name].unbind();\n    }\n  }\n};\n\nexport let ChildInterpolationBinding = (_dec = connectable(), _dec(_class2 = class ChildInterpolationBinding {\n  constructor(target, observerLocator, sourceExpression, mode, lookupFunctions, targetProperty, left, right) {\n    if (target instanceof InterpolationBinding) {\n      this.parent = target;\n    } else {\n      validateTarget(target, targetProperty);\n      this.target = target;\n      this.targetProperty = targetProperty;\n      this.targetAccessor = observerLocator.getAccessor(target, targetProperty);\n    }\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.mode = mode;\n    this.lookupFunctions = lookupFunctions;\n    this.left = left;\n    this.right = right;\n  }\n\n  updateTarget(value) {\n    value = value === null || value === undefined ? '' : value.toString();\n    if (value !== this.value) {\n      this.value = value;\n      if (this.parent) {\n        this.parent.interpolate();\n      } else {\n        this.targetAccessor.setValue(this.left + value + this.right, this.target, this.targetProperty);\n      }\n    }\n  }\n\n  call() {\n    if (!this.isBound) {\n      return;\n    }\n\n    this.rawValue = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n    this.updateTarget(this.rawValue);\n\n    if (this.mode !== bindingMode.oneTime) {\n      this._version++;\n      this.sourceExpression.connect(this, this.source);\n      if (this.rawValue instanceof Array) {\n        this.observeArray(this.rawValue);\n      }\n      this.unobserve(false);\n    }\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n    this.isBound = true;\n    this.source = source;\n\n    let sourceExpression = this.sourceExpression;\n    if (sourceExpression.bind) {\n      sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n\n    this.rawValue = sourceExpression.evaluate(source, this.lookupFunctions);\n    this.updateTarget(this.rawValue);\n\n    if (this.mode === bindingMode.oneWay) {\n      enqueueBindingConnect(this);\n    }\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    let sourceExpression = this.sourceExpression;\n    if (sourceExpression.unbind) {\n      sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    this.value = null;\n    this.rawValue = null;\n    this.unobserve(true);\n  }\n\n  connect(evaluate) {\n    if (!this.isBound) {\n      return;\n    }\n    if (evaluate) {\n      this.rawValue = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n      this.updateTarget(this.rawValue);\n    }\n    this.sourceExpression.connect(this, this.source);\n    if (this.rawValue instanceof Array) {\n      this.observeArray(this.rawValue);\n    }\n  }\n}) || _class2);\n\nexport let LetExpression = class LetExpression {\n  constructor(observerLocator, targetProperty, sourceExpression, lookupFunctions, toBindingContext) {\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.targetProperty = targetProperty;\n    this.lookupFunctions = lookupFunctions;\n    this.toBindingContext = toBindingContext;\n  }\n\n  createBinding() {\n    return new LetBinding(this.observerLocator, this.sourceExpression, this.targetProperty, this.lookupFunctions, this.toBindingContext);\n  }\n};\n\nexport let LetBinding = (_dec2 = connectable(), _dec2(_class3 = class LetBinding {\n  constructor(observerLocator, sourceExpression, targetProperty, lookupFunctions, toBindingContext) {\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.targetProperty = targetProperty;\n    this.lookupFunctions = lookupFunctions;\n    this.source = null;\n    this.target = null;\n    this.toBindingContext = toBindingContext;\n  }\n\n  updateTarget() {\n    const value = this.sourceExpression.evaluate(this.source, this.lookupFunctions);\n    this.target[this.targetProperty] = value;\n  }\n\n  call(context) {\n    if (!this.isBound) {\n      return;\n    }\n    if (context === sourceContext) {\n      this.updateTarget();\n      return;\n    }\n    throw new Error(`Unexpected call context ${context}`);\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.source = source;\n    this.target = this.toBindingContext ? source.bindingContext : source.overrideContext;\n\n    if (this.sourceExpression.bind) {\n      this.sourceExpression.bind(this, source, this.lookupFunctions);\n    }\n\n    enqueueBindingConnect(this);\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    if (this.sourceExpression.unbind) {\n      this.sourceExpression.unbind(this, this.source);\n    }\n    this.source = null;\n    this.target = null;\n    this.unobserve(true);\n  }\n\n  connect() {\n    if (!this.isBound) {\n      return;\n    }\n    this.updateTarget();\n    this.sourceExpression.connect(this, this.source);\n  }\n}) || _class3);\n\nexport let LetInterpolationBindingExpression = class LetInterpolationBindingExpression {\n  constructor(observerLocator, targetProperty, parts, lookupFunctions, toBindingContext) {\n    this.observerLocator = observerLocator;\n    this.targetProperty = targetProperty;\n    this.parts = parts;\n    this.lookupFunctions = lookupFunctions;\n    this.toBindingContext = toBindingContext;\n  }\n\n  createBinding() {\n    return new LetInterpolationBinding(this.observerLocator, this.targetProperty, this.parts, this.lookupFunctions, this.toBindingContext);\n  }\n};\n\nexport let LetInterpolationBinding = class LetInterpolationBinding {\n  constructor(observerLocator, targetProperty, parts, lookupFunctions, toBindingContext) {\n    this.observerLocator = observerLocator;\n    this.parts = parts;\n    this.targetProperty = targetProperty;\n    this.lookupFunctions = lookupFunctions;\n    this.toBindingContext = toBindingContext;\n    this.target = null;\n  }\n\n  bind(source) {\n    if (this.isBound) {\n      if (this.source === source) {\n        return;\n      }\n      this.unbind();\n    }\n\n    this.isBound = true;\n    this.source = source;\n    this.target = this.toBindingContext ? source.bindingContext : source.overrideContext;\n\n    this.interpolationBinding = this.createInterpolationBinding();\n    this.interpolationBinding.bind(source);\n  }\n\n  unbind() {\n    if (!this.isBound) {\n      return;\n    }\n    this.isBound = false;\n    this.source = null;\n    this.target = null;\n    this.interpolationBinding.unbind();\n    this.interpolationBinding = null;\n  }\n\n  createInterpolationBinding() {\n    if (this.parts.length === 3) {\n      return new ChildInterpolationBinding(this.target, this.observerLocator, this.parts[1], bindingMode.oneWay, this.lookupFunctions, this.targetProperty, this.parts[0], this.parts[2]);\n    }\n    return new InterpolationBinding(this.observerLocator, this.parts, this.target, this.targetProperty, bindingMode.oneWay, this.lookupFunctions);\n  }\n};\n\nexport let SyntaxInterpreter = (_temp2 = _class4 = class SyntaxInterpreter {\n\n  constructor(parser, observerLocator, eventManager, attributeMap) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n    this.eventManager = eventManager;\n    this.attributeMap = attributeMap;\n  }\n\n  interpret(resources, element, info, existingInstruction, context) {\n    if (info.command in this) {\n      return this[info.command](resources, element, info, existingInstruction, context);\n    }\n\n    return this.handleUnknownCommand(resources, element, info, existingInstruction, context);\n  }\n\n  handleUnknownCommand(resources, element, info, existingInstruction, context) {\n    LogManager.getLogger('templating-binding').warn('Unknown binding command.', info);\n    return existingInstruction;\n  }\n\n  determineDefaultBindingMode(element, attrName, context) {\n    let tagName = element.tagName.toLowerCase();\n\n    if (tagName === 'input' && (attrName === 'value' || attrName === 'files') && element.type !== 'checkbox' && element.type !== 'radio' || tagName === 'input' && attrName === 'checked' && (element.type === 'checkbox' || element.type === 'radio') || (tagName === 'textarea' || tagName === 'select') && attrName === 'value' || (attrName === 'textcontent' || attrName === 'innerhtml') && element.contentEditable === 'true' || attrName === 'scrolltop' || attrName === 'scrollleft') {\n      return bindingMode.twoWay;\n    }\n\n    if (context && attrName in context.attributes && context.attributes[attrName] && context.attributes[attrName].defaultBindingMode >= bindingMode.oneTime) {\n      return context.attributes[attrName].defaultBindingMode;\n    }\n\n    return bindingMode.oneWay;\n  }\n\n  bind(resources, element, info, existingInstruction, context) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), info.defaultBindingMode === undefined || info.defaultBindingMode === null ? this.determineDefaultBindingMode(element, info.attrName, context) : info.defaultBindingMode, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  trigger(resources, element, info) {\n    return new ListenerExpression(this.eventManager, info.attrName, this.parser.parse(info.attrValue), delegationStrategy.none, true, resources.lookupFunctions);\n  }\n\n  capture(resources, element, info) {\n    return new ListenerExpression(this.eventManager, info.attrName, this.parser.parse(info.attrValue), delegationStrategy.capturing, true, resources.lookupFunctions);\n  }\n\n  delegate(resources, element, info) {\n    return new ListenerExpression(this.eventManager, info.attrName, this.parser.parse(info.attrValue), delegationStrategy.bubbling, true, resources.lookupFunctions);\n  }\n\n  call(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new CallExpression(this.observerLocator, info.attrName, this.parser.parse(info.attrValue), resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  options(resources, element, info, existingInstruction, context) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n    let attrValue = info.attrValue;\n    let language = this.language;\n    let name = null;\n    let target = '';\n    let current;\n    let i;\n    let ii;\n    let inString = false;\n    let inEscape = false;\n    let foundName = false;\n\n    for (i = 0, ii = attrValue.length; i < ii; ++i) {\n      current = attrValue[i];\n\n      if (current === ';' && !inString) {\n        if (!foundName) {\n          name = this._getPrimaryPropertyName(resources, context);\n        }\n        info = language.inspectAttribute(resources, '?', name, target.trim());\n        language.createAttributeInstruction(resources, element, info, instruction, context);\n\n        if (!instruction.attributes[info.attrName]) {\n          instruction.attributes[info.attrName] = info.attrValue;\n        }\n\n        target = '';\n        name = null;\n      } else if (current === ':' && name === null) {\n        foundName = true;\n        name = target.trim();\n        target = '';\n      } else if (current === '\\\\') {\n        target += current;\n        inEscape = true;\n        continue;\n      } else {\n        target += current;\n\n        if (name !== null && inEscape === false && current === '\\'') {\n          inString = !inString;\n        }\n      }\n\n      inEscape = false;\n    }\n\n    if (!foundName) {\n      name = this._getPrimaryPropertyName(resources, context);\n    }\n\n    if (name !== null) {\n      info = language.inspectAttribute(resources, '?', name, target.trim());\n      language.createAttributeInstruction(resources, element, info, instruction, context);\n\n      if (!instruction.attributes[info.attrName]) {\n        instruction.attributes[info.attrName] = info.attrValue;\n      }\n    }\n\n    return instruction;\n  }\n\n  _getPrimaryPropertyName(resources, context) {\n    let type = resources.getAttribute(context.attributeName);\n    if (type && type.primaryProperty) {\n      return type.primaryProperty.attribute;\n    }\n    return null;\n  }\n\n  'for'(resources, element, info, existingInstruction) {\n    let parts;\n    let keyValue;\n    let instruction;\n    let attrValue;\n    let isDestructuring;\n\n    attrValue = info.attrValue;\n    isDestructuring = attrValue.match(/^ *[[].+[\\]]/);\n    parts = isDestructuring ? attrValue.split('of ') : attrValue.split(' of ');\n\n    if (parts.length !== 2) {\n      throw new Error('Incorrect syntax for \"for\". The form is: \"$local of $items\" or \"[$key, $value] of $items\".');\n    }\n\n    instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    if (isDestructuring) {\n      keyValue = parts[0].replace(/[[\\]]/g, '').replace(/,/g, ' ').replace(/\\s+/g, ' ').trim().split(' ');\n      instruction.attributes.key = keyValue[0];\n      instruction.attributes.value = keyValue[1];\n    } else {\n      instruction.attributes.local = parts[0];\n    }\n\n    instruction.attributes.items = new BindingExpression(this.observerLocator, 'items', this.parser.parse(parts[1]), bindingMode.oneWay, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  'two-way'(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), bindingMode.twoWay, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  'to-view'(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), bindingMode.toView, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  'from-view'(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), bindingMode.fromView, resources.lookupFunctions);\n\n    return instruction;\n  }\n\n  'one-time'(resources, element, info, existingInstruction) {\n    let instruction = existingInstruction || BehaviorInstruction.attribute(info.attrName);\n\n    instruction.attributes[info.attrName] = new BindingExpression(this.observerLocator, this.attributeMap.map(element.tagName, info.attrName), this.parser.parse(info.attrValue), bindingMode.oneTime, resources.lookupFunctions);\n\n    return instruction;\n  }\n}, _class4.inject = [Parser, ObserverLocator, EventManager, AttributeMap], _temp2);\n\nSyntaxInterpreter.prototype['one-way'] = SyntaxInterpreter.prototype['to-view'];\n\nlet info = {};\n\nexport let TemplatingBindingLanguage = (_temp3 = _class5 = class TemplatingBindingLanguage extends BindingLanguage {\n\n  constructor(parser, observerLocator, syntaxInterpreter, attributeMap) {\n    super();\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n    this.syntaxInterpreter = syntaxInterpreter;\n    this.emptyStringExpression = this.parser.parse('\\'\\'');\n    syntaxInterpreter.language = this;\n    this.attributeMap = attributeMap;\n    this.toBindingContextAttr = 'to-binding-context';\n  }\n\n  inspectAttribute(resources, elementName, attrName, attrValue) {\n    let parts = attrName.split('.');\n\n    info.defaultBindingMode = null;\n\n    if (parts.length === 2) {\n      info.attrName = parts[0].trim();\n      info.attrValue = attrValue;\n      info.command = parts[1].trim();\n\n      if (info.command === 'ref') {\n        info.expression = new NameExpression(this.parser.parse(attrValue), info.attrName, resources.lookupFunctions);\n        info.command = null;\n        info.attrName = 'ref';\n      } else {\n        info.expression = null;\n      }\n    } else if (attrName === 'ref') {\n      info.attrName = attrName;\n      info.attrValue = attrValue;\n      info.command = null;\n      info.expression = new NameExpression(this.parser.parse(attrValue), 'element', resources.lookupFunctions);\n    } else {\n      info.attrName = attrName;\n      info.attrValue = attrValue;\n      info.command = null;\n      const interpolationParts = this.parseInterpolation(resources, attrValue);\n      if (interpolationParts === null) {\n        info.expression = null;\n      } else {\n        info.expression = new InterpolationBindingExpression(this.observerLocator, this.attributeMap.map(elementName, attrName), interpolationParts, bindingMode.oneWay, resources.lookupFunctions, attrName);\n      }\n    }\n\n    return info;\n  }\n\n  createAttributeInstruction(resources, element, theInfo, existingInstruction, context) {\n    let instruction;\n\n    if (theInfo.expression) {\n      if (theInfo.attrName === 'ref') {\n        return theInfo.expression;\n      }\n\n      instruction = existingInstruction || BehaviorInstruction.attribute(theInfo.attrName);\n      instruction.attributes[theInfo.attrName] = theInfo.expression;\n    } else if (theInfo.command) {\n      instruction = this.syntaxInterpreter.interpret(resources, element, theInfo, existingInstruction, context);\n    }\n\n    return instruction;\n  }\n\n  createLetExpressions(resources, letElement) {\n    let expressions = [];\n    let attributes = letElement.attributes;\n\n    let attr;\n\n    let parts;\n    let attrName;\n    let attrValue;\n    let command;\n    let toBindingContextAttr = this.toBindingContextAttr;\n    let toBindingContext = letElement.hasAttribute(toBindingContextAttr);\n    for (let i = 0, ii = attributes.length; ii > i; ++i) {\n      attr = attributes[i];\n      attrName = attr.name;\n      attrValue = attr.nodeValue;\n      parts = attrName.split('.');\n\n      if (attrName === toBindingContextAttr) {\n        continue;\n      }\n\n      if (parts.length === 2) {\n        command = parts[1];\n        if (command !== 'bind') {\n          LogManager.getLogger('templating-binding-language').warn(`Detected invalid let command. Expected \"${parts[0]}.bind\", given \"${attrName}\"`);\n          continue;\n        }\n        expressions.push(new LetExpression(this.observerLocator, camelCase(parts[0]), this.parser.parse(attrValue), resources.lookupFunctions, toBindingContext));\n      } else {\n        attrName = camelCase(attrName);\n        parts = this.parseInterpolation(resources, attrValue);\n        if (parts === null) {\n          LogManager.getLogger('templating-binding-language').warn(`Detected string literal in let bindings. Did you mean \"${attrName}.bind=${attrValue}\" or \"${attrName}=\\${${attrValue}}\" ?`);\n        }\n        if (parts) {\n          expressions.push(new LetInterpolationBindingExpression(this.observerLocator, attrName, parts, resources.lookupFunctions, toBindingContext));\n        } else {\n          expressions.push(new LetExpression(this.observerLocator, attrName, new LiteralString(attrValue), resources.lookupFunctions, toBindingContext));\n        }\n      }\n    }\n    return expressions;\n  }\n\n  inspectTextContent(resources, value) {\n    const parts = this.parseInterpolation(resources, value);\n    if (parts === null) {\n      return null;\n    }\n    return new InterpolationBindingExpression(this.observerLocator, 'textContent', parts, bindingMode.oneWay, resources.lookupFunctions, 'textContent');\n  }\n\n  parseInterpolation(resources, value) {\n    let i = value.indexOf('${', 0);\n    let ii = value.length;\n    let char;\n    let pos = 0;\n    let open = 0;\n    let quote = null;\n    let interpolationStart;\n    let parts;\n    let partIndex = 0;\n\n    while (i >= 0 && i < ii - 2) {\n      open = 1;\n      interpolationStart = i;\n      i += 2;\n\n      do {\n        char = value[i];\n        i++;\n\n        if (char === \"'\" || char === '\"') {\n          if (quote === null) {\n            quote = char;\n          } else if (quote === char) {\n            quote = null;\n          }\n          continue;\n        }\n\n        if (char === '\\\\') {\n          i++;\n          continue;\n        }\n\n        if (quote !== null) {\n          continue;\n        }\n\n        if (char === '{') {\n          open++;\n        } else if (char === '}') {\n          open--;\n        }\n      } while (open > 0 && i < ii);\n\n      if (open === 0) {\n        parts = parts || [];\n        if (value[interpolationStart - 1] === '\\\\' && value[interpolationStart - 2] !== '\\\\') {\n          parts[partIndex] = value.substring(pos, interpolationStart - 1) + value.substring(interpolationStart, i);\n          partIndex++;\n          parts[partIndex] = this.emptyStringExpression;\n          partIndex++;\n        } else {\n          parts[partIndex] = value.substring(pos, interpolationStart);\n          partIndex++;\n          parts[partIndex] = this.parser.parse(value.substring(interpolationStart + 2, i - 1));\n          partIndex++;\n        }\n        pos = i;\n        i = value.indexOf('${', i);\n      } else {\n        break;\n      }\n    }\n\n    if (partIndex === 0) {\n      return null;\n    }\n\n    parts[partIndex] = value.substr(pos);\n    return parts;\n  }\n}, _class5.inject = [Parser, ObserverLocator, SyntaxInterpreter, AttributeMap], _temp3);\n\nexport function configure(config) {\n  config.container.registerSingleton(BindingLanguage, TemplatingBindingLanguage);\n  config.container.registerAlias(BindingLanguage, TemplatingBindingLanguage);\n}","import { Container, inject, Optional } from 'aurelia-dependency-injection';\nimport { DOM, FEATURE } from 'aurelia-pal';\nimport { TaskQueue } from 'aurelia-task-queue';\nimport { CompositionEngine, ViewSlot, ViewResources, bindable, noView, customElement, customAttribute, templateController, BoundViewFactory, TargetInstruction, Animator, resource, useView, useShadowDOM, ViewEngine } from 'aurelia-templating';\nimport { createOverrideContext, bindingMode, BindingBehavior, ValueConverter, sourceContext, mergeSplice, ObserverLocator, valueConverter, DataAttributeObserver, bindingBehavior, targetContext, EventSubscriber } from 'aurelia-binding';\nimport { getLogger } from 'aurelia-logging';\nimport { Loader } from 'aurelia-loader';\nimport { relativeToFile } from 'aurelia-path';\nimport { mixin } from 'aurelia-metadata';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\n\nvar ActivationStrategy;\r\n(function (ActivationStrategy) {\r\n    ActivationStrategy[\"InvokeLifecycle\"] = \"invoke-lifecycle\";\r\n    ActivationStrategy[\"Replace\"] = \"replace\";\r\n})(ActivationStrategy || (ActivationStrategy = {}));\r\nlet Compose = class Compose {\r\n    constructor(element, container, compositionEngine, viewSlot, viewResources, taskQueue) {\r\n        this.activationStrategy = ActivationStrategy.InvokeLifecycle;\r\n        this.element = element;\r\n        this.container = container;\r\n        this.compositionEngine = compositionEngine;\r\n        this.viewSlot = viewSlot;\r\n        this.viewResources = viewResources;\r\n        this.taskQueue = taskQueue;\r\n        this.currentController = null;\r\n        this.currentViewModel = null;\r\n        this.changes = Object.create(null);\r\n    }\r\n    static inject() {\r\n        return [DOM.Element, Container, CompositionEngine, ViewSlot, ViewResources, TaskQueue];\r\n    }\r\n    created(owningView) {\r\n        this.owningView = owningView;\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n        let changes = this.changes;\r\n        changes.view = this.view;\r\n        changes.viewModel = this.viewModel;\r\n        changes.model = this.model;\r\n        if (!this.pendingTask) {\r\n            processChanges(this);\r\n        }\r\n    }\r\n    unbind() {\r\n        this.changes = Object.create(null);\r\n        this.bindingContext = null;\r\n        this.overrideContext = null;\r\n        let returnToCache = true;\r\n        let skipAnimation = true;\r\n        this.viewSlot.removeAll(returnToCache, skipAnimation);\r\n    }\r\n    modelChanged(newValue, oldValue) {\r\n        this.changes.model = newValue;\r\n        requestUpdate(this);\r\n    }\r\n    viewChanged(newValue, oldValue) {\r\n        this.changes.view = newValue;\r\n        requestUpdate(this);\r\n    }\r\n    viewModelChanged(newValue, oldValue) {\r\n        this.changes.viewModel = newValue;\r\n        requestUpdate(this);\r\n    }\r\n};\r\n__decorate([\r\n    bindable\r\n], Compose.prototype, \"model\", void 0);\r\n__decorate([\r\n    bindable\r\n], Compose.prototype, \"view\", void 0);\r\n__decorate([\r\n    bindable\r\n], Compose.prototype, \"viewModel\", void 0);\r\n__decorate([\r\n    bindable\r\n], Compose.prototype, \"activationStrategy\", void 0);\r\n__decorate([\r\n    bindable\r\n], Compose.prototype, \"swapOrder\", void 0);\r\nCompose = __decorate([\r\n    noView,\r\n    customElement('compose')\r\n], Compose);\r\nfunction isEmpty(obj) {\r\n    for (const _ in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction tryActivateViewModel(vm, model) {\r\n    if (vm && typeof vm.activate === 'function') {\r\n        return Promise.resolve(vm.activate(model));\r\n    }\r\n}\r\nfunction createInstruction(composer, instruction) {\r\n    return Object.assign(instruction, {\r\n        bindingContext: composer.bindingContext,\r\n        overrideContext: composer.overrideContext,\r\n        owningView: composer.owningView,\r\n        container: composer.container,\r\n        viewSlot: composer.viewSlot,\r\n        viewResources: composer.viewResources,\r\n        currentController: composer.currentController,\r\n        host: composer.element,\r\n        swapOrder: composer.swapOrder\r\n    });\r\n}\r\nfunction processChanges(composer) {\r\n    const changes = composer.changes;\r\n    composer.changes = Object.create(null);\r\n    if (needsReInitialization(composer, changes)) {\r\n        let instruction = {\r\n            view: composer.view,\r\n            viewModel: composer.currentViewModel || composer.viewModel,\r\n            model: composer.model\r\n        };\r\n        instruction = Object.assign(instruction, changes);\r\n        instruction = createInstruction(composer, instruction);\r\n        composer.pendingTask = composer.compositionEngine.compose(instruction).then(controller => {\r\n            composer.currentController = controller;\r\n            composer.currentViewModel = controller ? controller.viewModel : null;\r\n        });\r\n    }\r\n    else {\r\n        composer.pendingTask = tryActivateViewModel(composer.currentViewModel, changes.model);\r\n        if (!composer.pendingTask) {\r\n            return;\r\n        }\r\n    }\r\n    composer.pendingTask = composer.pendingTask\r\n        .then(() => {\r\n        completeCompositionTask(composer);\r\n    }, reason => {\r\n        completeCompositionTask(composer);\r\n        throw reason;\r\n    });\r\n}\r\nfunction completeCompositionTask(composer) {\r\n    composer.pendingTask = null;\r\n    if (!isEmpty(composer.changes)) {\r\n        processChanges(composer);\r\n    }\r\n}\r\nfunction requestUpdate(composer) {\r\n    if (composer.pendingTask || composer.updateRequested) {\r\n        return;\r\n    }\r\n    composer.updateRequested = true;\r\n    composer.taskQueue.queueMicroTask(() => {\r\n        composer.updateRequested = false;\r\n        processChanges(composer);\r\n    });\r\n}\r\nfunction needsReInitialization(composer, changes) {\r\n    let activationStrategy = composer.activationStrategy;\r\n    const vm = composer.currentViewModel;\r\n    if (vm && typeof vm.determineActivationStrategy === 'function') {\r\n        activationStrategy = vm.determineActivationStrategy();\r\n    }\r\n    return 'view' in changes\r\n        || 'viewModel' in changes\r\n        || activationStrategy === ActivationStrategy.Replace;\r\n}\n\nclass IfCore {\r\n    constructor(viewFactory, viewSlot) {\r\n        this.viewFactory = viewFactory;\r\n        this.viewSlot = viewSlot;\r\n        this.view = null;\r\n        this.bindingContext = null;\r\n        this.overrideContext = null;\r\n        this.showing = false;\r\n        this.cache = true;\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n    }\r\n    unbind() {\r\n        if (this.view === null) {\r\n            return;\r\n        }\r\n        this.view.unbind();\r\n        if (!this.viewFactory.isCaching) {\r\n            return;\r\n        }\r\n        if (this.showing) {\r\n            this.showing = false;\r\n            this.viewSlot.remove(this.view, true, true);\r\n        }\r\n        else {\r\n            this.view.returnToCache();\r\n        }\r\n        this.view = null;\r\n    }\r\n    _show() {\r\n        if (this.showing) {\r\n            if (!this.view.isBound) {\r\n                this.view.bind(this.bindingContext, this.overrideContext);\r\n            }\r\n            return;\r\n        }\r\n        if (this.view === null) {\r\n            this.view = this.viewFactory.create();\r\n        }\r\n        if (!this.view.isBound) {\r\n            this.view.bind(this.bindingContext, this.overrideContext);\r\n        }\r\n        this.showing = true;\r\n        return this.viewSlot.add(this.view);\r\n    }\r\n    _hide() {\r\n        if (!this.showing) {\r\n            return;\r\n        }\r\n        this.showing = false;\r\n        let removed = this.viewSlot.remove(this.view);\r\n        if (removed instanceof Promise) {\r\n            return removed.then(() => {\r\n                this._unbindView();\r\n            });\r\n        }\r\n        this._unbindView();\r\n    }\r\n    _unbindView() {\r\n        const cache = this.cache === 'false' ? false : !!this.cache;\r\n        this.view.unbind();\r\n        if (!cache) {\r\n            this.view = null;\r\n        }\r\n    }\r\n}\n\nlet If = class If extends IfCore {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.cache = true;\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        super.bind(bindingContext, overrideContext);\r\n        if (this.condition) {\r\n            this._show();\r\n        }\r\n        else {\r\n            this._hide();\r\n        }\r\n    }\r\n    conditionChanged(newValue) {\r\n        this._update(newValue);\r\n    }\r\n    _update(show) {\r\n        if (this.animating) {\r\n            return;\r\n        }\r\n        let promise;\r\n        if (this.elseVm) {\r\n            promise = show ? this._swap(this.elseVm, this) : this._swap(this, this.elseVm);\r\n        }\r\n        else {\r\n            promise = show ? this._show() : this._hide();\r\n        }\r\n        if (promise) {\r\n            this.animating = true;\r\n            promise.then(() => {\r\n                this.animating = false;\r\n                if (this.condition !== this.showing) {\r\n                    this._update(this.condition);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _swap(remove, add) {\r\n        switch (this.swapOrder) {\r\n            case 'before':\r\n                return Promise.resolve(add._show()).then(() => remove._hide());\r\n            case 'with':\r\n                return Promise.all([remove._hide(), add._show()]);\r\n            default:\r\n                let promise = remove._hide();\r\n                return promise ? promise.then(() => add._show()) : add._show();\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    bindable({ primaryProperty: true })\r\n], If.prototype, \"condition\", void 0);\r\n__decorate([\r\n    bindable\r\n], If.prototype, \"swapOrder\", void 0);\r\n__decorate([\r\n    bindable\r\n], If.prototype, \"cache\", void 0);\r\nIf = __decorate([\r\n    customAttribute('if'),\r\n    templateController,\r\n    inject(BoundViewFactory, ViewSlot)\r\n], If);\n\nlet Else = class Else extends IfCore {\r\n    constructor(viewFactory, viewSlot) {\r\n        super(viewFactory, viewSlot);\r\n        this._registerInIf();\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        super.bind(bindingContext, overrideContext);\r\n        if (this.ifVm.condition) {\r\n            this._hide();\r\n        }\r\n        else {\r\n            this._show();\r\n        }\r\n    }\r\n    _registerInIf() {\r\n        let previous = this.viewSlot.anchor.previousSibling;\r\n        while (previous && !previous.au) {\r\n            previous = previous.previousSibling;\r\n        }\r\n        if (!previous || !previous.au.if) {\r\n            throw new Error(\"Can't find matching If for Else custom attribute.\");\r\n        }\r\n        this.ifVm = previous.au.if.viewModel;\r\n        this.ifVm.elseVm = this;\r\n    }\r\n};\r\nElse = __decorate([\r\n    customAttribute('else'),\r\n    templateController,\r\n    inject(BoundViewFactory, ViewSlot)\r\n], Else);\n\nlet With = class With {\r\n    constructor(viewFactory, viewSlot) {\r\n        this.viewFactory = viewFactory;\r\n        this.viewSlot = viewSlot;\r\n        this.parentOverrideContext = null;\r\n        this.view = null;\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        this.parentOverrideContext = overrideContext;\r\n        this.valueChanged(this.value);\r\n    }\r\n    valueChanged(newValue) {\r\n        let overrideContext = createOverrideContext(newValue, this.parentOverrideContext);\r\n        let view = this.view;\r\n        if (!view) {\r\n            view = this.view = this.viewFactory.create();\r\n            view.bind(newValue, overrideContext);\r\n            this.viewSlot.add(view);\r\n        }\r\n        else {\r\n            view.bind(newValue, overrideContext);\r\n        }\r\n    }\r\n    unbind() {\r\n        let view = this.view;\r\n        this.parentOverrideContext = null;\r\n        if (view) {\r\n            view.unbind();\r\n        }\r\n    }\r\n};\r\nWith = __decorate([\r\n    customAttribute('with'),\r\n    templateController,\r\n    inject(BoundViewFactory, ViewSlot)\r\n], With);\n\nconst oneTime = bindingMode.oneTime;\r\nfunction updateOverrideContexts(views, startIndex) {\r\n    let length = views.length;\r\n    if (startIndex > 0) {\r\n        startIndex = startIndex - 1;\r\n    }\r\n    for (; startIndex < length; ++startIndex) {\r\n        updateOverrideContext(views[startIndex].overrideContext, startIndex, length);\r\n    }\r\n}\r\nfunction createFullOverrideContext(repeat, data, index, length, key) {\r\n    let bindingContext = {};\r\n    let overrideContext = createOverrideContext(bindingContext, repeat.scope.overrideContext);\r\n    if (typeof key !== 'undefined') {\r\n        bindingContext[repeat.key] = key;\r\n        bindingContext[repeat.value] = data;\r\n    }\r\n    else {\r\n        bindingContext[repeat.local] = data;\r\n    }\r\n    updateOverrideContext(overrideContext, index, length);\r\n    return overrideContext;\r\n}\r\nfunction updateOverrideContext(overrideContext, index, length) {\r\n    let first = (index === 0);\r\n    let last = (index === length - 1);\r\n    let even = index % 2 === 0;\r\n    overrideContext.$index = index;\r\n    overrideContext.$first = first;\r\n    overrideContext.$last = last;\r\n    overrideContext.$middle = !(first || last);\r\n    overrideContext.$odd = !even;\r\n    overrideContext.$even = even;\r\n}\r\nfunction getItemsSourceExpression(instruction, attrName) {\r\n    return instruction.behaviorInstructions\r\n        .filter(bi => bi.originalAttrName === attrName)[0]\r\n        .attributes\r\n        .items\r\n        .sourceExpression;\r\n}\r\nfunction unwrapExpression(expression) {\r\n    let unwrapped = false;\r\n    while (expression instanceof BindingBehavior) {\r\n        expression = expression.expression;\r\n    }\r\n    while (expression instanceof ValueConverter) {\r\n        expression = expression.expression;\r\n        unwrapped = true;\r\n    }\r\n    return unwrapped ? expression : null;\r\n}\r\nfunction isOneTime(expression) {\r\n    while (expression instanceof BindingBehavior) {\r\n        if (expression.name === 'oneTime') {\r\n            return true;\r\n        }\r\n        expression = expression.expression;\r\n    }\r\n    return false;\r\n}\r\nfunction updateOneTimeBinding(binding) {\r\n    if (binding.call && binding.mode === oneTime) {\r\n        binding.call(sourceContext);\r\n    }\r\n    else if (binding.updateOneTimeBindings) {\r\n        binding.updateOneTimeBindings();\r\n    }\r\n}\r\nfunction indexOf(array, item, matcher, startIndex) {\r\n    if (!matcher) {\r\n        return array.indexOf(item);\r\n    }\r\n    const length = array.length;\r\n    for (let index = startIndex || 0; index < length; index++) {\r\n        if (matcher(array[index], item)) {\r\n            return index;\r\n        }\r\n    }\r\n    return -1;\r\n}\n\nclass ArrayRepeatStrategy {\r\n    getCollectionObserver(observerLocator, items) {\r\n        return observerLocator.getArrayObserver(items);\r\n    }\r\n    instanceChanged(repeat, items) {\r\n        const $repeat = repeat;\r\n        const itemsLength = items.length;\r\n        if (!items || itemsLength === 0) {\r\n            $repeat.removeAllViews(true, !$repeat.viewsRequireLifecycle);\r\n            return;\r\n        }\r\n        const children = $repeat.views();\r\n        const viewsLength = children.length;\r\n        if (viewsLength === 0) {\r\n            this._standardProcessInstanceChanged($repeat, items);\r\n            return;\r\n        }\r\n        if ($repeat.viewsRequireLifecycle) {\r\n            const childrenSnapshot = children.slice(0);\r\n            const itemNameInBindingContext = $repeat.local;\r\n            const matcher = $repeat.matcher();\r\n            let itemsPreviouslyInViews = [];\r\n            const viewsToRemove = [];\r\n            for (let index = 0; index < viewsLength; index++) {\r\n                const view = childrenSnapshot[index];\r\n                const oldItem = view.bindingContext[itemNameInBindingContext];\r\n                if (indexOf(items, oldItem, matcher) === -1) {\r\n                    viewsToRemove.push(view);\r\n                }\r\n                else {\r\n                    itemsPreviouslyInViews.push(oldItem);\r\n                }\r\n            }\r\n            let updateViews;\r\n            let removePromise;\r\n            if (itemsPreviouslyInViews.length > 0) {\r\n                removePromise = $repeat.removeViews(viewsToRemove, true, !$repeat.viewsRequireLifecycle);\r\n                updateViews = () => {\r\n                    for (let index = 0; index < itemsLength; index++) {\r\n                        const item = items[index];\r\n                        const indexOfView = indexOf(itemsPreviouslyInViews, item, matcher, index);\r\n                        let view;\r\n                        if (indexOfView === -1) {\r\n                            const overrideContext = createFullOverrideContext($repeat, items[index], index, itemsLength);\r\n                            $repeat.insertView(index, overrideContext.bindingContext, overrideContext);\r\n                            itemsPreviouslyInViews.splice(index, 0, undefined);\r\n                        }\r\n                        else if (indexOfView === index) {\r\n                            view = children[indexOfView];\r\n                            itemsPreviouslyInViews[indexOfView] = undefined;\r\n                        }\r\n                        else {\r\n                            view = children[indexOfView];\r\n                            $repeat.moveView(indexOfView, index);\r\n                            itemsPreviouslyInViews.splice(indexOfView, 1);\r\n                            itemsPreviouslyInViews.splice(index, 0, undefined);\r\n                        }\r\n                        if (view) {\r\n                            updateOverrideContext(view.overrideContext, index, itemsLength);\r\n                        }\r\n                    }\r\n                    this._inPlaceProcessItems($repeat, items);\r\n                };\r\n            }\r\n            else {\r\n                removePromise = $repeat.removeAllViews(true, !$repeat.viewsRequireLifecycle);\r\n                updateViews = () => this._standardProcessInstanceChanged($repeat, items);\r\n            }\r\n            if (removePromise instanceof Promise) {\r\n                removePromise.then(updateViews);\r\n            }\r\n            else {\r\n                updateViews();\r\n            }\r\n        }\r\n        else {\r\n            this._inPlaceProcessItems($repeat, items);\r\n        }\r\n    }\r\n    _standardProcessInstanceChanged(repeat, items) {\r\n        for (let i = 0, ii = items.length; i < ii; i++) {\r\n            let overrideContext = createFullOverrideContext(repeat, items[i], i, ii);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n        }\r\n    }\r\n    _inPlaceProcessItems(repeat, items) {\r\n        let itemsLength = items.length;\r\n        let viewsLength = repeat.viewCount();\r\n        while (viewsLength > itemsLength) {\r\n            viewsLength--;\r\n            repeat.removeView(viewsLength, true, !repeat.viewsRequireLifecycle);\r\n        }\r\n        let local = repeat.local;\r\n        for (let i = 0; i < viewsLength; i++) {\r\n            let view = repeat.view(i);\r\n            let last = i === itemsLength - 1;\r\n            let middle = i !== 0 && !last;\r\n            let bindingContext = view.bindingContext;\r\n            let overrideContext = view.overrideContext;\r\n            if (bindingContext[local] === items[i]\r\n                && overrideContext.$middle === middle\r\n                && overrideContext.$last === last) {\r\n                continue;\r\n            }\r\n            bindingContext[local] = items[i];\r\n            overrideContext.$middle = middle;\r\n            overrideContext.$last = last;\r\n            repeat.updateBindings(view);\r\n        }\r\n        for (let i = viewsLength; i < itemsLength; i++) {\r\n            let overrideContext = createFullOverrideContext(repeat, items[i], i, itemsLength);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n        }\r\n    }\r\n    instanceMutated(repeat, array, splices) {\r\n        if (repeat.__queuedSplices) {\r\n            for (let i = 0, ii = splices.length; i < ii; ++i) {\r\n                let { index, removed, addedCount } = splices[i];\r\n                mergeSplice(repeat.__queuedSplices, index, removed, addedCount);\r\n            }\r\n            repeat.__array = array.slice(0);\r\n            return;\r\n        }\r\n        let maybePromise = this._runSplices(repeat, array.slice(0), splices);\r\n        if (maybePromise instanceof Promise) {\r\n            let queuedSplices = repeat.__queuedSplices = [];\r\n            let runQueuedSplices = () => {\r\n                if (!queuedSplices.length) {\r\n                    repeat.__queuedSplices = undefined;\r\n                    repeat.__array = undefined;\r\n                    return;\r\n                }\r\n                let nextPromise = this._runSplices(repeat, repeat.__array, queuedSplices) || Promise.resolve();\r\n                queuedSplices = repeat.__queuedSplices = [];\r\n                nextPromise.then(runQueuedSplices);\r\n            };\r\n            maybePromise.then(runQueuedSplices);\r\n        }\r\n    }\r\n    _runSplices(repeat, array, splices) {\r\n        let removeDelta = 0;\r\n        let rmPromises = [];\r\n        for (let i = 0, ii = splices.length; i < ii; ++i) {\r\n            let splice = splices[i];\r\n            let removed = splice.removed;\r\n            for (let j = 0, jj = removed.length; j < jj; ++j) {\r\n                let viewOrPromise = repeat.removeView(splice.index + removeDelta + rmPromises.length, true);\r\n                if (viewOrPromise instanceof Promise) {\r\n                    rmPromises.push(viewOrPromise);\r\n                }\r\n            }\r\n            removeDelta -= splice.addedCount;\r\n        }\r\n        if (rmPromises.length > 0) {\r\n            return Promise.all(rmPromises).then(() => {\r\n                let spliceIndexLow = this._handleAddedSplices(repeat, array, splices);\r\n                updateOverrideContexts(repeat.views(), spliceIndexLow);\r\n            });\r\n        }\r\n        let spliceIndexLow = this._handleAddedSplices(repeat, array, splices);\r\n        updateOverrideContexts(repeat.views(), spliceIndexLow);\r\n        return undefined;\r\n    }\r\n    _handleAddedSplices(repeat, array, splices) {\r\n        let spliceIndex;\r\n        let spliceIndexLow;\r\n        let arrayLength = array.length;\r\n        for (let i = 0, ii = splices.length; i < ii; ++i) {\r\n            let splice = splices[i];\r\n            let addIndex = spliceIndex = splice.index;\r\n            let end = splice.index + splice.addedCount;\r\n            if (typeof spliceIndexLow === 'undefined' || spliceIndexLow === null || spliceIndexLow > splice.index) {\r\n                spliceIndexLow = spliceIndex;\r\n            }\r\n            for (; addIndex < end; ++addIndex) {\r\n                let overrideContext = createFullOverrideContext(repeat, array[addIndex], addIndex, arrayLength);\r\n                repeat.insertView(addIndex, overrideContext.bindingContext, overrideContext);\r\n            }\r\n        }\r\n        return spliceIndexLow;\r\n    }\r\n}\n\nclass MapRepeatStrategy {\r\n    getCollectionObserver(observerLocator, items) {\r\n        return observerLocator.getMapObserver(items);\r\n    }\r\n    instanceChanged(repeat, items) {\r\n        let removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n        if (removePromise instanceof Promise) {\r\n            removePromise.then(() => this._standardProcessItems(repeat, items));\r\n            return;\r\n        }\r\n        this._standardProcessItems(repeat, items);\r\n    }\r\n    _standardProcessItems(repeat, items) {\r\n        let index = 0;\r\n        let overrideContext;\r\n        items.forEach((value, key) => {\r\n            overrideContext = createFullOverrideContext(repeat, value, index, items.size, key);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n            ++index;\r\n        });\r\n    }\r\n    instanceMutated(repeat, map, records) {\r\n        let key;\r\n        let i;\r\n        let ii;\r\n        let overrideContext;\r\n        let removeIndex;\r\n        let addIndex;\r\n        let record;\r\n        let rmPromises = [];\r\n        let viewOrPromise;\r\n        for (i = 0, ii = records.length; i < ii; ++i) {\r\n            record = records[i];\r\n            key = record.key;\r\n            switch (record.type) {\r\n                case 'update':\r\n                    removeIndex = this._getViewIndexByKey(repeat, key);\r\n                    viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\r\n                    if (viewOrPromise instanceof Promise) {\r\n                        rmPromises.push(viewOrPromise);\r\n                    }\r\n                    overrideContext = createFullOverrideContext(repeat, map.get(key), removeIndex, map.size, key);\r\n                    repeat.insertView(removeIndex, overrideContext.bindingContext, overrideContext);\r\n                    break;\r\n                case 'add':\r\n                    addIndex = repeat.viewCount() <= map.size - 1 ? repeat.viewCount() : map.size - 1;\r\n                    overrideContext = createFullOverrideContext(repeat, map.get(key), addIndex, map.size, key);\r\n                    repeat.insertView(map.size - 1, overrideContext.bindingContext, overrideContext);\r\n                    break;\r\n                case 'delete':\r\n                    if (record.oldValue === undefined) {\r\n                        return;\r\n                    }\r\n                    removeIndex = this._getViewIndexByKey(repeat, key);\r\n                    viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\r\n                    if (viewOrPromise instanceof Promise) {\r\n                        rmPromises.push(viewOrPromise);\r\n                    }\r\n                    break;\r\n                case 'clear':\r\n                    repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n                    break;\r\n                default:\r\n                    continue;\r\n            }\r\n        }\r\n        if (rmPromises.length > 0) {\r\n            Promise.all(rmPromises).then(() => {\r\n                updateOverrideContexts(repeat.views(), 0);\r\n            });\r\n        }\r\n        else {\r\n            updateOverrideContexts(repeat.views(), 0);\r\n        }\r\n    }\r\n    _getViewIndexByKey(repeat, key) {\r\n        let i;\r\n        let ii;\r\n        let child;\r\n        for (i = 0, ii = repeat.viewCount(); i < ii; ++i) {\r\n            child = repeat.view(i);\r\n            if (child.bindingContext[repeat.key] === key) {\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\n\nclass NullRepeatStrategy {\r\n    instanceChanged(repeat, items) {\r\n        repeat.removeAllViews(true);\r\n    }\r\n    getCollectionObserver(observerLocator, items) {\r\n    }\r\n}\n\nclass NumberRepeatStrategy {\r\n    getCollectionObserver() {\r\n        return null;\r\n    }\r\n    instanceChanged(repeat, value) {\r\n        let removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n        if (removePromise instanceof Promise) {\r\n            removePromise.then(() => this._standardProcessItems(repeat, value));\r\n            return;\r\n        }\r\n        this._standardProcessItems(repeat, value);\r\n    }\r\n    _standardProcessItems(repeat, value) {\r\n        let childrenLength = repeat.viewCount();\r\n        let i;\r\n        let ii;\r\n        let overrideContext;\r\n        let viewsToRemove;\r\n        value = Math.floor(value);\r\n        viewsToRemove = childrenLength - value;\r\n        if (viewsToRemove > 0) {\r\n            if (viewsToRemove > childrenLength) {\r\n                viewsToRemove = childrenLength;\r\n            }\r\n            for (i = 0, ii = viewsToRemove; i < ii; ++i) {\r\n                repeat.removeView(childrenLength - (i + 1), true, !repeat.viewsRequireLifecycle);\r\n            }\r\n            return;\r\n        }\r\n        for (i = childrenLength, ii = value; i < ii; ++i) {\r\n            overrideContext = createFullOverrideContext(repeat, i, i, ii);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n        }\r\n        updateOverrideContexts(repeat.views(), 0);\r\n    }\r\n}\n\nclass SetRepeatStrategy {\r\n    getCollectionObserver(observerLocator, items) {\r\n        return observerLocator.getSetObserver(items);\r\n    }\r\n    instanceChanged(repeat, items) {\r\n        let removePromise = repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n        if (removePromise instanceof Promise) {\r\n            removePromise.then(() => this._standardProcessItems(repeat, items));\r\n            return;\r\n        }\r\n        this._standardProcessItems(repeat, items);\r\n    }\r\n    _standardProcessItems(repeat, items) {\r\n        let index = 0;\r\n        let overrideContext;\r\n        items.forEach(value => {\r\n            overrideContext = createFullOverrideContext(repeat, value, index, items.size);\r\n            repeat.addView(overrideContext.bindingContext, overrideContext);\r\n            ++index;\r\n        });\r\n    }\r\n    instanceMutated(repeat, set, records) {\r\n        let value;\r\n        let i;\r\n        let ii;\r\n        let overrideContext;\r\n        let removeIndex;\r\n        let record;\r\n        let rmPromises = [];\r\n        let viewOrPromise;\r\n        for (i = 0, ii = records.length; i < ii; ++i) {\r\n            record = records[i];\r\n            value = record.value;\r\n            switch (record.type) {\r\n                case 'add':\r\n                    let size = Math.max(set.size - 1, 0);\r\n                    overrideContext = createFullOverrideContext(repeat, value, size, set.size);\r\n                    repeat.insertView(size, overrideContext.bindingContext, overrideContext);\r\n                    break;\r\n                case 'delete':\r\n                    removeIndex = this._getViewIndexByValue(repeat, value);\r\n                    viewOrPromise = repeat.removeView(removeIndex, true, !repeat.viewsRequireLifecycle);\r\n                    if (viewOrPromise instanceof Promise) {\r\n                        rmPromises.push(viewOrPromise);\r\n                    }\r\n                    break;\r\n                case 'clear':\r\n                    repeat.removeAllViews(true, !repeat.viewsRequireLifecycle);\r\n                    break;\r\n                default:\r\n                    continue;\r\n            }\r\n        }\r\n        if (rmPromises.length > 0) {\r\n            Promise.all(rmPromises).then(() => {\r\n                updateOverrideContexts(repeat.views(), 0);\r\n            });\r\n        }\r\n        else {\r\n            updateOverrideContexts(repeat.views(), 0);\r\n        }\r\n    }\r\n    _getViewIndexByValue(repeat, value) {\r\n        let i;\r\n        let ii;\r\n        let child;\r\n        for (i = 0, ii = repeat.viewCount(); i < ii; ++i) {\r\n            child = repeat.view(i);\r\n            if (child.bindingContext[repeat.local] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\n\nclass RepeatStrategyLocator {\r\n    constructor() {\r\n        this.matchers = [];\r\n        this.strategies = [];\r\n        this.addStrategy(items => items === null || items === undefined, new NullRepeatStrategy());\r\n        this.addStrategy(items => items instanceof Array, new ArrayRepeatStrategy());\r\n        this.addStrategy(items => items instanceof Map, new MapRepeatStrategy());\r\n        this.addStrategy(items => items instanceof Set, new SetRepeatStrategy());\r\n        this.addStrategy(items => typeof items === 'number', new NumberRepeatStrategy());\r\n    }\r\n    addStrategy(matcher, strategy) {\r\n        this.matchers.push(matcher);\r\n        this.strategies.push(strategy);\r\n    }\r\n    getStrategy(items) {\r\n        let matchers = this.matchers;\r\n        for (let i = 0, ii = matchers.length; i < ii; ++i) {\r\n            if (matchers[i](items)) {\r\n                return this.strategies[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\nconst lifecycleOptionalBehaviors = ['focus', 'if', 'else', 'repeat', 'show', 'hide', 'with'];\r\nfunction behaviorRequiresLifecycle(instruction) {\r\n    let t = instruction.type;\r\n    let name = t.elementName !== null ? t.elementName : t.attributeName;\r\n    return lifecycleOptionalBehaviors.indexOf(name) === -1 && (t.handlesAttached || t.handlesBind || t.handlesCreated || t.handlesDetached || t.handlesUnbind)\r\n        || t.viewFactory && viewsRequireLifecycle(t.viewFactory)\r\n        || instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);\r\n}\r\nfunction targetRequiresLifecycle(instruction) {\r\n    let behaviors = instruction.behaviorInstructions;\r\n    if (behaviors) {\r\n        let i = behaviors.length;\r\n        while (i--) {\r\n            if (behaviorRequiresLifecycle(behaviors[i])) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return instruction.viewFactory && viewsRequireLifecycle(instruction.viewFactory);\r\n}\r\nfunction viewsRequireLifecycle(viewFactory) {\r\n    if ('_viewsRequireLifecycle' in viewFactory) {\r\n        return viewFactory._viewsRequireLifecycle;\r\n    }\r\n    viewFactory._viewsRequireLifecycle = false;\r\n    if (viewFactory.viewFactory) {\r\n        viewFactory._viewsRequireLifecycle = viewsRequireLifecycle(viewFactory.viewFactory);\r\n        return viewFactory._viewsRequireLifecycle;\r\n    }\r\n    if (viewFactory.template.querySelector('.au-animate')) {\r\n        viewFactory._viewsRequireLifecycle = true;\r\n        return true;\r\n    }\r\n    for (let id in viewFactory.instructions) {\r\n        if (targetRequiresLifecycle(viewFactory.instructions[id])) {\r\n            viewFactory._viewsRequireLifecycle = true;\r\n            return true;\r\n        }\r\n    }\r\n    viewFactory._viewsRequireLifecycle = false;\r\n    return false;\r\n}\n\nclass AbstractRepeater {\r\n    constructor(options) {\r\n        Object.assign(this, {\r\n            local: 'items',\r\n            viewsRequireLifecycle: true\r\n        }, options);\r\n    }\r\n    viewCount() {\r\n        throw new Error('subclass must implement `viewCount`');\r\n    }\r\n    views() {\r\n        throw new Error('subclass must implement `views`');\r\n    }\r\n    view(index) {\r\n        throw new Error('subclass must implement `view`');\r\n    }\r\n    matcher() {\r\n        throw new Error('subclass must implement `matcher`');\r\n    }\r\n    addView(bindingContext, overrideContext) {\r\n        throw new Error('subclass must implement `addView`');\r\n    }\r\n    insertView(index, bindingContext, overrideContext) {\r\n        throw new Error('subclass must implement `insertView`');\r\n    }\r\n    moveView(sourceIndex, targetIndex) {\r\n        throw new Error('subclass must implement `moveView`');\r\n    }\r\n    removeAllViews(returnToCache, skipAnimation) {\r\n        throw new Error('subclass must implement `removeAllViews`');\r\n    }\r\n    removeViews(viewsToRemove, returnToCache, skipAnimation) {\r\n        throw new Error('subclass must implement `removeView`');\r\n    }\r\n    removeView(index, returnToCache, skipAnimation) {\r\n        throw new Error('subclass must implement `removeView`');\r\n    }\r\n    updateBindings(view) {\r\n        throw new Error('subclass must implement `updateBindings`');\r\n    }\r\n}\n\nvar Repeat_1;\r\nlet Repeat = Repeat_1 = class Repeat extends AbstractRepeater {\r\n    constructor(viewFactory, instruction, viewSlot, viewResources, observerLocator, strategyLocator) {\r\n        super({\r\n            local: 'item',\r\n            viewsRequireLifecycle: viewsRequireLifecycle(viewFactory)\r\n        });\r\n        this.viewFactory = viewFactory;\r\n        this.instruction = instruction;\r\n        this.viewSlot = viewSlot;\r\n        this.lookupFunctions = viewResources.lookupFunctions;\r\n        this.observerLocator = observerLocator;\r\n        this.key = 'key';\r\n        this.value = 'value';\r\n        this.strategyLocator = strategyLocator;\r\n        this.ignoreMutation = false;\r\n        this.sourceExpression = getItemsSourceExpression(this.instruction, 'repeat.for');\r\n        this.isOneTime = isOneTime(this.sourceExpression);\r\n        this.viewsRequireLifecycle = viewsRequireLifecycle(viewFactory);\r\n    }\r\n    call(context, changes) {\r\n        this[context](this.items, changes);\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        this.scope = { bindingContext, overrideContext };\r\n        this.matcherBinding = this._captureAndRemoveMatcherBinding();\r\n        this.itemsChanged();\r\n    }\r\n    unbind() {\r\n        this.scope = null;\r\n        this.items = null;\r\n        this.matcherBinding = null;\r\n        this.viewSlot.removeAll(true, true);\r\n        this._unsubscribeCollection();\r\n    }\r\n    _unsubscribeCollection() {\r\n        if (this.collectionObserver) {\r\n            this.collectionObserver.unsubscribe(this.callContext, this);\r\n            this.collectionObserver = null;\r\n            this.callContext = null;\r\n        }\r\n    }\r\n    itemsChanged() {\r\n        this._unsubscribeCollection();\r\n        if (!this.scope) {\r\n            return;\r\n        }\r\n        let items = this.items;\r\n        this.strategy = this.strategyLocator.getStrategy(items);\r\n        if (!this.strategy) {\r\n            throw new Error(`Value for '${this.sourceExpression}' is non-repeatable`);\r\n        }\r\n        if (!this.isOneTime && !this._observeInnerCollection()) {\r\n            this._observeCollection();\r\n        }\r\n        this.ignoreMutation = true;\r\n        this.strategy.instanceChanged(this, items);\r\n        this.observerLocator.taskQueue.queueMicroTask(() => {\r\n            this.ignoreMutation = false;\r\n        });\r\n    }\r\n    _getInnerCollection() {\r\n        let expression = unwrapExpression(this.sourceExpression);\r\n        if (!expression) {\r\n            return null;\r\n        }\r\n        return expression.evaluate(this.scope, null);\r\n    }\r\n    handleCollectionMutated(collection, changes) {\r\n        if (!this.collectionObserver) {\r\n            return;\r\n        }\r\n        if (this.ignoreMutation) {\r\n            return;\r\n        }\r\n        this.strategy.instanceMutated(this, collection, changes);\r\n    }\r\n    handleInnerCollectionMutated(collection, changes) {\r\n        if (!this.collectionObserver) {\r\n            return;\r\n        }\r\n        if (this.ignoreMutation) {\r\n            return;\r\n        }\r\n        this.ignoreMutation = true;\r\n        let newItems = this.sourceExpression.evaluate(this.scope, this.lookupFunctions);\r\n        this.observerLocator.taskQueue.queueMicroTask(() => this.ignoreMutation = false);\r\n        if (newItems === this.items) {\r\n            this.itemsChanged();\r\n        }\r\n        else {\r\n            this.items = newItems;\r\n        }\r\n    }\r\n    _observeInnerCollection() {\r\n        let items = this._getInnerCollection();\r\n        let strategy = this.strategyLocator.getStrategy(items);\r\n        if (!strategy) {\r\n            return false;\r\n        }\r\n        this.collectionObserver = strategy.getCollectionObserver(this.observerLocator, items);\r\n        if (!this.collectionObserver) {\r\n            return false;\r\n        }\r\n        this.callContext = 'handleInnerCollectionMutated';\r\n        this.collectionObserver.subscribe(this.callContext, this);\r\n        return true;\r\n    }\r\n    _observeCollection() {\r\n        let items = this.items;\r\n        this.collectionObserver = this.strategy.getCollectionObserver(this.observerLocator, items);\r\n        if (this.collectionObserver) {\r\n            this.callContext = 'handleCollectionMutated';\r\n            this.collectionObserver.subscribe(this.callContext, this);\r\n        }\r\n    }\r\n    _captureAndRemoveMatcherBinding() {\r\n        const viewFactory = this.viewFactory.viewFactory;\r\n        if (viewFactory) {\r\n            const template = viewFactory.template;\r\n            const instructions = viewFactory.instructions;\r\n            if (Repeat_1.useInnerMatcher) {\r\n                return extractMatcherBindingExpression(instructions);\r\n            }\r\n            if (getChildrenCount(template) > 1) {\r\n                return undefined;\r\n            }\r\n            const repeatedElement = getFirstElementChild(template);\r\n            if (!repeatedElement.hasAttribute('au-target-id')) {\r\n                return undefined;\r\n            }\r\n            const repeatedElementTargetId = repeatedElement.getAttribute('au-target-id');\r\n            return extractMatcherBindingExpression(instructions, repeatedElementTargetId);\r\n        }\r\n        return undefined;\r\n    }\r\n    viewCount() { return this.viewSlot.children.length; }\r\n    views() { return this.viewSlot.children; }\r\n    view(index) { return this.viewSlot.children[index]; }\r\n    matcher() {\r\n        const matcherBinding = this.matcherBinding;\r\n        return matcherBinding\r\n            ? matcherBinding.sourceExpression.evaluate(this.scope, matcherBinding.lookupFunctions)\r\n            : null;\r\n    }\r\n    addView(bindingContext, overrideContext) {\r\n        let view = this.viewFactory.create();\r\n        view.bind(bindingContext, overrideContext);\r\n        this.viewSlot.add(view);\r\n    }\r\n    insertView(index, bindingContext, overrideContext) {\r\n        let view = this.viewFactory.create();\r\n        view.bind(bindingContext, overrideContext);\r\n        this.viewSlot.insert(index, view);\r\n    }\r\n    moveView(sourceIndex, targetIndex) {\r\n        this.viewSlot.move(sourceIndex, targetIndex);\r\n    }\r\n    removeAllViews(returnToCache, skipAnimation) {\r\n        return this.viewSlot.removeAll(returnToCache, skipAnimation);\r\n    }\r\n    removeViews(viewsToRemove, returnToCache, skipAnimation) {\r\n        return this.viewSlot.removeMany(viewsToRemove, returnToCache, skipAnimation);\r\n    }\r\n    removeView(index, returnToCache, skipAnimation) {\r\n        return this.viewSlot.removeAt(index, returnToCache, skipAnimation);\r\n    }\r\n    updateBindings(view) {\r\n        const $view = view;\r\n        let j = $view.bindings.length;\r\n        while (j--) {\r\n            updateOneTimeBinding($view.bindings[j]);\r\n        }\r\n        j = $view.controllers.length;\r\n        while (j--) {\r\n            let k = $view.controllers[j].boundProperties.length;\r\n            while (k--) {\r\n                let binding = $view.controllers[j].boundProperties[k].binding;\r\n                updateOneTimeBinding(binding);\r\n            }\r\n        }\r\n    }\r\n};\r\nRepeat.useInnerMatcher = true;\r\n__decorate([\r\n    bindable\r\n], Repeat.prototype, \"items\", void 0);\r\n__decorate([\r\n    bindable\r\n], Repeat.prototype, \"local\", void 0);\r\n__decorate([\r\n    bindable\r\n], Repeat.prototype, \"key\", void 0);\r\n__decorate([\r\n    bindable\r\n], Repeat.prototype, \"value\", void 0);\r\nRepeat = Repeat_1 = __decorate([\r\n    customAttribute('repeat'),\r\n    templateController,\r\n    inject(BoundViewFactory, TargetInstruction, ViewSlot, ViewResources, ObserverLocator, RepeatStrategyLocator)\r\n], Repeat);\r\nconst extractMatcherBindingExpression = (instructions, targetedElementId) => {\r\n    const instructionIds = Object.keys(instructions);\r\n    for (let i = 0; i < instructionIds.length; i++) {\r\n        const instructionId = instructionIds[i];\r\n        if (targetedElementId !== undefined && instructionId !== targetedElementId) {\r\n            continue;\r\n        }\r\n        const expressions = instructions[instructionId].expressions;\r\n        if (expressions) {\r\n            for (let ii = 0; ii < expressions.length; ii++) {\r\n                if (expressions[ii].targetProperty === 'matcher') {\r\n                    const matcherBindingExpression = expressions[ii];\r\n                    expressions.splice(ii, 1);\r\n                    return matcherBindingExpression;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nconst getChildrenCount = (el) => {\r\n    const childNodes = el.childNodes;\r\n    let count = 0;\r\n    for (let i = 0, ii = childNodes.length; ii > i; ++i) {\r\n        if (childNodes[i].nodeType === 1) {\r\n            ++count;\r\n        }\r\n    }\r\n    return count;\r\n};\r\nconst getFirstElementChild = (el) => {\r\n    let firstChild = el.firstChild;\r\n    while (firstChild !== null) {\r\n        if (firstChild.nodeType === 1) {\r\n            return firstChild;\r\n        }\r\n        firstChild = firstChild.nextSibling;\r\n    }\r\n    return null;\r\n};\n\nconst aureliaHideClassName = 'aurelia-hide';\r\nconst aureliaHideClass = `.${aureliaHideClassName} { display:none !important; }`;\r\nfunction injectAureliaHideStyleAtHead() {\r\n    DOM.injectStyles(aureliaHideClass);\r\n}\r\nfunction injectAureliaHideStyleAtBoundary(domBoundary) {\r\n    if (FEATURE.shadowDOM && domBoundary && !domBoundary.hasAureliaHideStyle) {\r\n        domBoundary.hasAureliaHideStyle = true;\r\n        DOM.injectStyles(aureliaHideClass, domBoundary);\r\n    }\r\n}\n\nlet Show = class Show {\r\n    constructor(element, animator, domBoundary) {\r\n        this.element = element;\r\n        this.animator = animator;\r\n        this.domBoundary = domBoundary;\r\n    }\r\n    static inject() {\r\n        return [DOM.Element, Animator, Optional.of(DOM.boundary, true)];\r\n    }\r\n    created() {\r\n        injectAureliaHideStyleAtBoundary(this.domBoundary);\r\n    }\r\n    valueChanged(newValue) {\r\n        let element = this.element;\r\n        let animator = this.animator;\r\n        if (newValue) {\r\n            animator.removeClass(element, aureliaHideClassName);\r\n        }\r\n        else {\r\n            animator.addClass(element, aureliaHideClassName);\r\n        }\r\n    }\r\n    bind(bindingContext) {\r\n        this.valueChanged(this.value);\r\n    }\r\n};\r\nShow = __decorate([\r\n    customAttribute('show')\r\n], Show);\n\nlet Hide = class Hide {\r\n    constructor(element, animator, domBoundary) {\r\n        this.element = element;\r\n        this.animator = animator;\r\n        this.domBoundary = domBoundary;\r\n    }\r\n    static inject() {\r\n        return [DOM.Element, Animator, Optional.of(DOM.boundary, true)];\r\n    }\r\n    created() {\r\n        injectAureliaHideStyleAtBoundary(this.domBoundary);\r\n    }\r\n    valueChanged(newValue) {\r\n        if (newValue) {\r\n            this.animator.addClass(this.element, aureliaHideClassName);\r\n        }\r\n        else {\r\n            this.animator.removeClass(this.element, aureliaHideClassName);\r\n        }\r\n    }\r\n    bind(bindingContext) {\r\n        this.valueChanged(this.value);\r\n    }\r\n    value(value) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n};\r\nHide = __decorate([\r\n    customAttribute('hide')\r\n], Hide);\n\nconst SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\r\nlet needsToWarn = true;\r\nclass HTMLSanitizer {\r\n    sanitize(input) {\r\n        if (needsToWarn) {\r\n            needsToWarn = false;\r\n            getLogger('html-sanitizer')\r\n                .warn(`CAUTION: The default HTMLSanitizer does NOT provide security against a wide variety of sophisticated XSS attacks,\nand should not be relied on for sanitizing input from unknown sources.\nPlease see https://aurelia.io/docs/binding/basics#element-content for instructions on how to use a secure solution like DOMPurify or sanitize-html.`);\r\n        }\r\n        return input.replace(SCRIPT_REGEX, '');\r\n    }\r\n}\n\nlet SanitizeHTMLValueConverter = class SanitizeHTMLValueConverter {\r\n    constructor(sanitizer) {\r\n        this.sanitizer = sanitizer;\r\n    }\r\n    toView(untrustedMarkup) {\r\n        if (untrustedMarkup === null || untrustedMarkup === undefined) {\r\n            return null;\r\n        }\r\n        return this.sanitizer.sanitize(untrustedMarkup);\r\n    }\r\n};\r\nSanitizeHTMLValueConverter = __decorate([\r\n    valueConverter('sanitizeHTML'),\r\n    inject(HTMLSanitizer)\r\n], SanitizeHTMLValueConverter);\n\nlet Replaceable = class Replaceable {\r\n    constructor(viewFactory, viewSlot) {\r\n        this.viewFactory = viewFactory;\r\n        this.viewSlot = viewSlot;\r\n        this.view = null;\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        if (this.view === null) {\r\n            this.view = this.viewFactory.create();\r\n            this.viewSlot.add(this.view);\r\n        }\r\n        this.view.bind(bindingContext, overrideContext);\r\n    }\r\n    unbind() {\r\n        this.view.unbind();\r\n    }\r\n};\r\nReplaceable = __decorate([\r\n    customAttribute('replaceable'),\r\n    templateController,\r\n    inject(BoundViewFactory, ViewSlot)\r\n], Replaceable);\n\nlet Focus = class Focus {\r\n    constructor(element, taskQueue) {\r\n        this.element = element;\r\n        this.taskQueue = taskQueue;\r\n        this.isAttached = false;\r\n        this.needsApply = false;\r\n    }\r\n    static inject() {\r\n        return [DOM.Element, TaskQueue];\r\n    }\r\n    valueChanged(newValue) {\r\n        if (this.isAttached) {\r\n            this._apply();\r\n        }\r\n        else {\r\n            this.needsApply = true;\r\n        }\r\n    }\r\n    _apply() {\r\n        if (this.value) {\r\n            this.taskQueue.queueMicroTask(() => {\r\n                if (this.value) {\r\n                    this.element.focus();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.element.blur();\r\n        }\r\n    }\r\n    attached() {\r\n        this.isAttached = true;\r\n        if (this.needsApply) {\r\n            this.needsApply = false;\r\n            this._apply();\r\n        }\r\n        this.element.addEventListener('focus', this);\r\n        this.element.addEventListener('blur', this);\r\n    }\r\n    detached() {\r\n        this.isAttached = false;\r\n        this.element.removeEventListener('focus', this);\r\n        this.element.removeEventListener('blur', this);\r\n    }\r\n    handleEvent(e) {\r\n        if (e.type === 'focus') {\r\n            this.value = true;\r\n        }\r\n        else if (DOM.activeElement !== this.element) {\r\n            this.value = false;\r\n        }\r\n    }\r\n};\r\nFocus = __decorate([\r\n    customAttribute('focus', bindingMode.twoWay)\r\n], Focus);\n\nlet cssUrlMatcher = /url\\((?!['\"]data)([^)]+)\\)/gi;\r\nfunction fixupCSSUrls(address, css) {\r\n    if (typeof css !== 'string') {\r\n        throw new Error(`Failed loading required CSS file: ${address}`);\r\n    }\r\n    return css.replace(cssUrlMatcher, (match, p1) => {\r\n        let quote = p1.charAt(0);\r\n        if (quote === '\\'' || quote === '\"') {\r\n            p1 = p1.substr(1, p1.length - 2);\r\n        }\r\n        return 'url(\\'' + relativeToFile(p1, address) + '\\')';\r\n    });\r\n}\r\nclass CSSResource {\r\n    constructor(address) {\r\n        this.address = address;\r\n        this._scoped = null;\r\n        this._global = false;\r\n        this._alreadyGloballyInjected = false;\r\n    }\r\n    initialize(container, Target) {\r\n        this._scoped = new Target(this);\r\n    }\r\n    register(registry, name) {\r\n        if (name === 'scoped') {\r\n            registry.registerViewEngineHooks(this._scoped);\r\n        }\r\n        else {\r\n            this._global = true;\r\n        }\r\n    }\r\n    load(container) {\r\n        return container.get(Loader)\r\n            .loadText(this.address)\r\n            .catch(err => null)\r\n            .then(text => {\r\n            text = fixupCSSUrls(this.address, text);\r\n            this._scoped.css = text;\r\n            if (this._global) {\r\n                this._alreadyGloballyInjected = true;\r\n                DOM.injectStyles(text);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CSSViewEngineHooks {\r\n    constructor(owner) {\r\n        this.owner = owner;\r\n        this.css = null;\r\n    }\r\n    beforeCompile(content, resources, instruction) {\r\n        if (instruction.targetShadowDOM) {\r\n            DOM.injectStyles(this.css, content, true);\r\n        }\r\n        else if (FEATURE.scopedCSS) {\r\n            let styleNode = DOM.injectStyles(this.css, content, true);\r\n            styleNode.setAttribute('scoped', 'scoped');\r\n        }\r\n        else if (this._global && !this.owner._alreadyGloballyInjected) {\r\n            DOM.injectStyles(this.css);\r\n            this.owner._alreadyGloballyInjected = true;\r\n        }\r\n    }\r\n}\r\nfunction _createCSSResource(address) {\r\n    let ViewCSS = class ViewCSS extends CSSViewEngineHooks {\r\n    };\r\n    ViewCSS = __decorate([\r\n        resource(new CSSResource(address))\r\n    ], ViewCSS);\r\n    return ViewCSS;\r\n}\n\nlet AttrBindingBehavior = class AttrBindingBehavior {\r\n    bind(binding, source) {\r\n        binding.targetObserver = new DataAttributeObserver(binding.target, binding.targetProperty);\r\n    }\r\n    unbind(binding, source) {\r\n    }\r\n};\r\nAttrBindingBehavior = __decorate([\r\n    bindingBehavior('attr')\r\n], AttrBindingBehavior);\n\nlet modeBindingBehavior = {\r\n    bind(binding, source, lookupFunctions) {\r\n        binding.originalMode = binding.mode;\r\n        binding.mode = this.mode;\r\n    },\r\n    unbind(binding, source) {\r\n        binding.mode = binding.originalMode;\r\n        binding.originalMode = null;\r\n    }\r\n};\r\nlet OneTimeBindingBehavior = class OneTimeBindingBehavior {\r\n    constructor() {\r\n        this.mode = bindingMode.oneTime;\r\n    }\r\n};\r\nOneTimeBindingBehavior = __decorate([\r\n    mixin(modeBindingBehavior),\r\n    bindingBehavior('oneTime')\r\n], OneTimeBindingBehavior);\r\nlet OneWayBindingBehavior = class OneWayBindingBehavior {\r\n    constructor() {\r\n        this.mode = bindingMode.toView;\r\n    }\r\n};\r\nOneWayBindingBehavior = __decorate([\r\n    mixin(modeBindingBehavior),\r\n    bindingBehavior('oneWay')\r\n], OneWayBindingBehavior);\r\nlet ToViewBindingBehavior = class ToViewBindingBehavior {\r\n    constructor() {\r\n        this.mode = bindingMode.toView;\r\n    }\r\n};\r\nToViewBindingBehavior = __decorate([\r\n    mixin(modeBindingBehavior),\r\n    bindingBehavior('toView')\r\n], ToViewBindingBehavior);\r\nlet FromViewBindingBehavior = class FromViewBindingBehavior {\r\n    constructor() {\r\n        this.mode = bindingMode.fromView;\r\n    }\r\n};\r\nFromViewBindingBehavior = __decorate([\r\n    mixin(modeBindingBehavior),\r\n    bindingBehavior('fromView')\r\n], FromViewBindingBehavior);\r\nlet TwoWayBindingBehavior = class TwoWayBindingBehavior {\r\n    constructor() {\r\n        this.mode = bindingMode.twoWay;\r\n    }\r\n};\r\nTwoWayBindingBehavior = __decorate([\r\n    mixin(modeBindingBehavior),\r\n    bindingBehavior('twoWay')\r\n], TwoWayBindingBehavior);\n\nfunction throttle(newValue) {\r\n    let state = this.throttleState;\r\n    let elapsed = +new Date() - state.last;\r\n    if (elapsed >= state.delay) {\r\n        clearTimeout(state.timeoutId);\r\n        state.timeoutId = null;\r\n        state.last = +new Date();\r\n        this.throttledMethod(newValue);\r\n        return;\r\n    }\r\n    state.newValue = newValue;\r\n    if (state.timeoutId === null) {\r\n        state.timeoutId = setTimeout(() => {\r\n            state.timeoutId = null;\r\n            state.last = +new Date();\r\n            this.throttledMethod(state.newValue);\r\n        }, state.delay - elapsed);\r\n    }\r\n}\r\nlet ThrottleBindingBehavior = class ThrottleBindingBehavior {\r\n    bind(binding, source, delay = 200) {\r\n        let methodToThrottle = 'updateTarget';\r\n        if (binding.callSource) {\r\n            methodToThrottle = 'callSource';\r\n        }\r\n        else if (binding.updateSource && binding.mode === bindingMode.twoWay) {\r\n            methodToThrottle = 'updateSource';\r\n        }\r\n        binding.throttledMethod = binding[methodToThrottle];\r\n        binding.throttledMethod.originalName = methodToThrottle;\r\n        binding[methodToThrottle] = throttle;\r\n        binding.throttleState = {\r\n            delay: delay,\r\n            last: 0,\r\n            timeoutId: null\r\n        };\r\n    }\r\n    unbind(binding, source) {\r\n        let methodToRestore = binding.throttledMethod.originalName;\r\n        binding[methodToRestore] = binding.throttledMethod;\r\n        binding.throttledMethod = null;\r\n        clearTimeout(binding.throttleState.timeoutId);\r\n        binding.throttleState = null;\r\n    }\r\n};\r\nThrottleBindingBehavior = __decorate([\r\n    bindingBehavior('throttle')\r\n], ThrottleBindingBehavior);\n\nconst unset = {};\r\nfunction debounceCallSource(event) {\r\n    const state = this.debounceState;\r\n    clearTimeout(state.timeoutId);\r\n    state.timeoutId = setTimeout(() => this.debouncedMethod(event), state.delay);\r\n}\r\nfunction debounceCall(context, newValue, oldValue) {\r\n    const state = this.debounceState;\r\n    clearTimeout(state.timeoutId);\r\n    if (context !== state.callContextToDebounce) {\r\n        state.oldValue = unset;\r\n        this.debouncedMethod(context, newValue, oldValue);\r\n        return;\r\n    }\r\n    if (state.oldValue === unset) {\r\n        state.oldValue = oldValue;\r\n    }\r\n    state.timeoutId = setTimeout(() => {\r\n        const _oldValue = state.oldValue;\r\n        state.oldValue = unset;\r\n        this.debouncedMethod(context, newValue, _oldValue);\r\n    }, state.delay);\r\n}\r\nlet DebounceBindingBehavior = class DebounceBindingBehavior {\r\n    bind(binding, source, delay = 200) {\r\n        const isCallSource = binding.callSource !== undefined;\r\n        const methodToDebounce = isCallSource ? 'callSource' : 'call';\r\n        const debouncer = isCallSource ? debounceCallSource : debounceCall;\r\n        const mode = binding.mode;\r\n        const callContextToDebounce = mode === bindingMode.twoWay || mode === bindingMode.fromView ? targetContext : sourceContext;\r\n        binding.debouncedMethod = binding[methodToDebounce];\r\n        binding.debouncedMethod.originalName = methodToDebounce;\r\n        binding[methodToDebounce] = debouncer;\r\n        binding.debounceState = {\r\n            callContextToDebounce,\r\n            delay,\r\n            timeoutId: 0,\r\n            oldValue: unset\r\n        };\r\n    }\r\n    unbind(binding, source) {\r\n        const methodToRestore = binding.debouncedMethod.originalName;\r\n        binding[methodToRestore] = binding.debouncedMethod;\r\n        binding.debouncedMethod = null;\r\n        clearTimeout(binding.debounceState.timeoutId);\r\n        binding.debounceState = null;\r\n    }\r\n};\r\nDebounceBindingBehavior = __decorate([\r\n    bindingBehavior('debounce')\r\n], DebounceBindingBehavior);\n\nfunction findOriginalEventTarget(event) {\r\n    return (event.path && event.path[0]) || (event.deepPath && event.deepPath[0]) || event.target;\r\n}\r\nfunction handleSelfEvent(event) {\r\n    let target = findOriginalEventTarget(event);\r\n    if (this.target !== target) {\r\n        return;\r\n    }\r\n    this.selfEventCallSource(event);\r\n}\r\nlet SelfBindingBehavior = class SelfBindingBehavior {\r\n    bind(binding, source) {\r\n        if (!binding.callSource || !binding.targetEvent) {\r\n            throw new Error('Self binding behavior only supports event.');\r\n        }\r\n        binding.selfEventCallSource = binding.callSource;\r\n        binding.callSource = handleSelfEvent;\r\n    }\r\n    unbind(binding, source) {\r\n        binding.callSource = binding.selfEventCallSource;\r\n        binding.selfEventCallSource = null;\r\n    }\r\n};\r\nSelfBindingBehavior = __decorate([\r\n    bindingBehavior('self')\r\n], SelfBindingBehavior);\n\nclass BindingSignaler {\r\n    constructor() {\r\n        this.signals = {};\r\n    }\r\n    signal(name) {\r\n        let bindings = this.signals[name];\r\n        if (!bindings) {\r\n            return;\r\n        }\r\n        let i = bindings.length;\r\n        while (i--) {\r\n            bindings[i].call(sourceContext);\r\n        }\r\n    }\r\n}\n\nlet SignalBindingBehavior = class SignalBindingBehavior {\r\n    constructor(bindingSignaler) {\r\n        this.signals = bindingSignaler.signals;\r\n    }\r\n    static inject() { return [BindingSignaler]; }\r\n    bind(binding, source, ...names) {\r\n        if (!binding.updateTarget) {\r\n            throw new Error('Only property bindings and string interpolation bindings can be signaled.  Trigger, delegate and call bindings cannot be signaled.');\r\n        }\r\n        let signals = this.signals;\r\n        if (names.length === 1) {\r\n            let name = names[0];\r\n            let bindings = signals[name] || (signals[name] = []);\r\n            bindings.push(binding);\r\n            binding.signalName = name;\r\n        }\r\n        else if (names.length > 1) {\r\n            let i = names.length;\r\n            while (i--) {\r\n                let name = names[i];\r\n                let bindings = signals[name] || (signals[name] = []);\r\n                bindings.push(binding);\r\n            }\r\n            binding.signalName = names;\r\n        }\r\n        else {\r\n            throw new Error('Signal name is required.');\r\n        }\r\n    }\r\n    unbind(binding, source) {\r\n        let signals = this.signals;\r\n        let name = binding.signalName;\r\n        binding.signalName = null;\r\n        if (Array.isArray(name)) {\r\n            let names = name;\r\n            let i = names.length;\r\n            while (i--) {\r\n                let n = names[i];\r\n                let bindings = signals[n];\r\n                bindings.splice(bindings.indexOf(binding), 1);\r\n            }\r\n        }\r\n        else {\r\n            let bindings = signals[name];\r\n            bindings.splice(bindings.indexOf(binding), 1);\r\n        }\r\n    }\r\n};\r\nSignalBindingBehavior = __decorate([\r\n    bindingBehavior('signal')\r\n], SignalBindingBehavior);\n\nconst eventNamesRequired = 'The updateTrigger binding behavior requires at least one event name argument: eg <input value.bind=\"firstName & updateTrigger:\\'blur\\'\">';\r\nconst notApplicableMessage = 'The updateTrigger binding behavior can only be applied to two-way/ from-view bindings on input/select elements.';\r\nlet UpdateTriggerBindingBehavior = class UpdateTriggerBindingBehavior {\r\n    bind(binding, source, ...events) {\r\n        if (events.length === 0) {\r\n            throw new Error(eventNamesRequired);\r\n        }\r\n        if (binding.mode !== bindingMode.twoWay && binding.mode !== bindingMode.fromView) {\r\n            throw new Error(notApplicableMessage);\r\n        }\r\n        let targetObserver = binding.observerLocator.getObserver(binding.target, binding.targetProperty);\r\n        if (!targetObserver.handler) {\r\n            throw new Error(notApplicableMessage);\r\n        }\r\n        binding.targetObserver = targetObserver;\r\n        targetObserver.originalHandler = binding.targetObserver.handler;\r\n        let handler = new EventSubscriber(events);\r\n        targetObserver.handler = handler;\r\n    }\r\n    unbind(binding, source) {\r\n        let targetObserver = binding.targetObserver;\r\n        targetObserver.handler.dispose();\r\n        targetObserver.handler = targetObserver.originalHandler;\r\n        targetObserver.originalHandler = null;\r\n    }\r\n};\r\nUpdateTriggerBindingBehavior = __decorate([\r\n    bindingBehavior('updateTrigger')\r\n], UpdateTriggerBindingBehavior);\n\nfunction _createDynamicElement({ name, viewUrl, bindableNames, useShadowDOMmode }) {\r\n    let DynamicElement = class DynamicElement {\r\n        bind(bindingContext) {\r\n            this.$parent = bindingContext;\r\n        }\r\n    };\r\n    DynamicElement = __decorate([\r\n        customElement(name),\r\n        useView(viewUrl)\r\n    ], DynamicElement);\r\n    for (let i = 0, ii = bindableNames.length; i < ii; ++i) {\r\n        bindable(bindableNames[i])(DynamicElement);\r\n    }\r\n    switch (useShadowDOMmode) {\r\n        case 'open':\r\n            useShadowDOM({ mode: 'open' })(DynamicElement);\r\n            break;\r\n        case 'closed':\r\n            useShadowDOM({ mode: 'closed' })(DynamicElement);\r\n            break;\r\n        case '':\r\n            useShadowDOM(DynamicElement);\r\n            break;\r\n        case null:\r\n            break;\r\n        default:\r\n            getLogger('aurelia-html-only-element')\r\n                .warn(`Expected 'use-shadow-dom' value to be \"close\", \"open\" or \"\", received ${useShadowDOMmode}`);\r\n            break;\r\n    }\r\n    return DynamicElement;\r\n}\n\nfunction getElementName(address) {\r\n    return /([^\\/^\\?]+)\\.html/i.exec(address)[1].toLowerCase();\r\n}\r\nfunction configure(config) {\r\n    const viewEngine = config.container.get(ViewEngine);\r\n    const loader = config.aurelia.loader;\r\n    viewEngine.addResourcePlugin('.html', {\r\n        'fetch': function (viewUrl) {\r\n            return loader.loadTemplate(viewUrl).then(registryEntry => {\r\n                let bindableNames = registryEntry.template.getAttribute('bindable');\r\n                const useShadowDOMmode = registryEntry.template.getAttribute('use-shadow-dom');\r\n                const name = getElementName(viewUrl);\r\n                if (bindableNames) {\r\n                    bindableNames = bindableNames.split(',').map(x => x.trim());\r\n                    registryEntry.template.removeAttribute('bindable');\r\n                }\r\n                else {\r\n                    bindableNames = [];\r\n                }\r\n                return { [name]: _createDynamicElement({ name, viewUrl, bindableNames, useShadowDOMmode }) };\r\n            });\r\n        }\r\n    });\r\n}\n\nfunction configure$1(config) {\r\n    injectAureliaHideStyleAtHead();\r\n    config.globalResources(Compose, If, Else, With, Repeat, Show, Hide, Replaceable, Focus, SanitizeHTMLValueConverter, OneTimeBindingBehavior, OneWayBindingBehavior, ToViewBindingBehavior, FromViewBindingBehavior, TwoWayBindingBehavior, ThrottleBindingBehavior, DebounceBindingBehavior, SelfBindingBehavior, SignalBindingBehavior, UpdateTriggerBindingBehavior, AttrBindingBehavior);\r\n    configure(config);\r\n    let viewEngine = config.container.get(ViewEngine);\r\n    let styleResourcePlugin = {\r\n        fetch(address) {\r\n            return { [address]: _createCSSResource(address) };\r\n        }\r\n    };\r\n    ['.css', '.less', '.sass', '.scss', '.styl'].forEach(ext => viewEngine.addResourcePlugin(ext, styleResourcePlugin));\r\n}\n\nexport { AbstractRepeater, ArrayRepeatStrategy, AttrBindingBehavior, BindingSignaler, Compose, DebounceBindingBehavior, Else, Focus, FromViewBindingBehavior, HTMLSanitizer, Hide, If, MapRepeatStrategy, NullRepeatStrategy, NumberRepeatStrategy, OneTimeBindingBehavior, OneWayBindingBehavior, Repeat, RepeatStrategyLocator, Replaceable, SanitizeHTMLValueConverter, SelfBindingBehavior, SetRepeatStrategy, Show, SignalBindingBehavior, ThrottleBindingBehavior, ToViewBindingBehavior, TwoWayBindingBehavior, UpdateTriggerBindingBehavior, With, configure$1 as configure, createFullOverrideContext, getItemsSourceExpression, isOneTime, unwrapExpression, updateOneTimeBinding, updateOverrideContext, viewsRequireLifecycle };\n//# sourceMappingURL=aurelia-templating-resources.js.map\n","import { Router, RouteLoader, AppRouter } from 'aurelia-router';\nimport { Origin } from 'aurelia-metadata';\nimport { relativeToFile } from 'aurelia-path';\nimport { ViewSlot, ViewLocator, CompositionTransaction, CompositionEngine, BehaviorInstruction, ShadowDOM, SwapStrategies, inlineView, customElement, useView } from 'aurelia-templating';\nimport { Container } from 'aurelia-dependency-injection';\nimport { createOverrideContext } from 'aurelia-binding';\nimport { DOM } from 'aurelia-pal';\nimport { getLogger } from 'aurelia-logging';\n\nclass EmptyLayoutViewModel {\r\n}\r\n/**\r\n * Implementation of Aurelia Router ViewPort. Responsible for loading route, composing and swapping routes views\r\n */\r\nclass RouterView {\r\n    constructor(element, container, viewSlot, router, viewLocator, compositionTransaction, compositionEngine) {\r\n        this.element = element;\r\n        this.container = container;\r\n        this.viewSlot = viewSlot;\r\n        this.router = router;\r\n        this.viewLocator = viewLocator;\r\n        this.compositionTransaction = compositionTransaction;\r\n        this.compositionEngine = compositionEngine;\r\n        // add this <router-view/> to router view ports lookup based on name attribute\r\n        // when this router is the root router-view\r\n        // also trigger AppRouter registerViewPort extra flow\r\n        this.router.registerViewPort(this, this.element.getAttribute('name'));\r\n        // Each <router-view/> process its instruction as a composition transaction\r\n        // there are differences between intial composition and subsequent compositions\r\n        // also there are differences between root composition and child <router-view/> composition\r\n        // mark the first composition transaction with a property initialComposition to distinguish it\r\n        // when the root <router-view/> gets new instruction for the first time\r\n        if (!('initialComposition' in compositionTransaction)) {\r\n            compositionTransaction.initialComposition = true;\r\n            this.compositionTransactionNotifier = compositionTransaction.enlist();\r\n        }\r\n    }\r\n    /**@internal */\r\n    static inject() {\r\n        return [DOM.Element, Container, ViewSlot, Router, ViewLocator, CompositionTransaction, CompositionEngine];\r\n    }\r\n    created(owningView) {\r\n        this.owningView = owningView;\r\n    }\r\n    bind(bindingContext, overrideContext) {\r\n        // router needs to get access to view model of current route parent\r\n        // doing it in generic way via viewModel property on container\r\n        this.container.viewModel = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n    }\r\n    /**\r\n     * Implementation of `aurelia-router` ViewPort interface, responsible for templating related part in routing Pipeline\r\n     */\r\n    process($viewPortInstruction, waitToSwap) {\r\n        // have strong typings without exposing it in public typings, this is to ensure maximum backward compat\r\n        const viewPortInstruction = $viewPortInstruction;\r\n        const component = viewPortInstruction.component;\r\n        const childContainer = component.childContainer;\r\n        const viewModel = component.viewModel;\r\n        const viewModelResource = component.viewModelResource;\r\n        const metadata = viewModelResource.metadata;\r\n        const config = component.router.currentInstruction.config;\r\n        const viewPortConfig = config.viewPorts ? (config.viewPorts[viewPortInstruction.name] || {}) : {};\r\n        childContainer.get(RouterViewLocator)._notify(this);\r\n        // layoutInstruction is our layout viewModel\r\n        const layoutInstruction = {\r\n            viewModel: viewPortConfig.layoutViewModel || config.layoutViewModel || this.layoutViewModel,\r\n            view: viewPortConfig.layoutView || config.layoutView || this.layoutView,\r\n            model: viewPortConfig.layoutModel || config.layoutModel || this.layoutModel,\r\n            router: viewPortInstruction.component.router,\r\n            childContainer: childContainer,\r\n            viewSlot: this.viewSlot\r\n        };\r\n        // viewport will be a thin wrapper around composition engine\r\n        // to process instruction/configuration from users\r\n        // preparing all information related to a composition process\r\n        // first by getting view strategy of a ViewPortComponent View\r\n        const viewStrategy = this.viewLocator.getViewStrategy(component.view || viewModel);\r\n        if (viewStrategy && component.view) {\r\n            viewStrategy.makeRelativeTo(Origin.get(component.router.container.viewModel.constructor).moduleId);\r\n        }\r\n        // using metadata of a custom element view model to load appropriate view-factory instance\r\n        return metadata\r\n            .load(childContainer, viewModelResource.value, null, viewStrategy, true)\r\n            // for custom element, viewFactory typing is always ViewFactory\r\n            // for custom attribute, it will be HtmlBehaviorResource\r\n            .then((viewFactory) => {\r\n            // if this is not the first time that this <router-view/> is composing its instruction\r\n            // try to capture ownership of the composition transaction\r\n            // child <router-view/> will not be able to capture, since root <router-view/> typically captures\r\n            // the ownership token\r\n            if (!this.compositionTransactionNotifier) {\r\n                this.compositionTransactionOwnershipToken = this.compositionTransaction.tryCapture();\r\n            }\r\n            if (layoutInstruction.viewModel || layoutInstruction.view) {\r\n                viewPortInstruction.layoutInstruction = layoutInstruction;\r\n            }\r\n            const viewPortComponentBehaviorInstruction = BehaviorInstruction.dynamic(this.element, viewModel, viewFactory);\r\n            viewPortInstruction.controller = metadata.create(childContainer, viewPortComponentBehaviorInstruction);\r\n            if (waitToSwap) {\r\n                return null;\r\n            }\r\n            this.swap(viewPortInstruction);\r\n        });\r\n    }\r\n    swap($viewPortInstruction) {\r\n        // have strong typings without exposing it in public typings, this is to ensure maximum backward compat\r\n        const viewPortInstruction = $viewPortInstruction;\r\n        const viewPortController = viewPortInstruction.controller;\r\n        const layoutInstruction = viewPortInstruction.layoutInstruction;\r\n        const previousView = this.view;\r\n        // Final step of swapping a <router-view/> ViewPortComponent\r\n        const work = () => {\r\n            const swapStrategy = SwapStrategies[this.swapOrder] || SwapStrategies.after;\r\n            const viewSlot = this.viewSlot;\r\n            swapStrategy(viewSlot, previousView, () => Promise.resolve(viewSlot.add(this.view))).then(() => {\r\n                this._notify();\r\n            });\r\n        };\r\n        // Ensure all users setups have been completed\r\n        const ready = (owningView_or_layoutView) => {\r\n            viewPortController.automate(this.overrideContext, owningView_or_layoutView);\r\n            const transactionOwnerShipToken = this.compositionTransactionOwnershipToken;\r\n            // if this router-view is the root <router-view/> of a normal startup via aurelia.setRoot\r\n            // attemp to take control of the transaction\r\n            // if ownership can be taken\r\n            // wait for transaction to complete before swapping\r\n            if (transactionOwnerShipToken) {\r\n                return transactionOwnerShipToken\r\n                    .waitForCompositionComplete()\r\n                    .then(() => {\r\n                    this.compositionTransactionOwnershipToken = null;\r\n                    return work();\r\n                });\r\n            }\r\n            // otherwise, just swap\r\n            return work();\r\n        };\r\n        // If there is layout instruction, new to compose layout before processing ViewPortComponent\r\n        // layout controller/view/view-model is composed using composition engine APIs\r\n        if (layoutInstruction) {\r\n            if (!layoutInstruction.viewModel) {\r\n                // createController chokes if there's no viewmodel, so create a dummy one\r\n                // but avoid using a POJO as it creates unwanted metadata in Object constructor\r\n                layoutInstruction.viewModel = new EmptyLayoutViewModel();\r\n            }\r\n            // using composition engine to create compose layout\r\n            return this.compositionEngine\r\n                // first create controller from layoutInstruction\r\n                // and treat it as CompositionContext\r\n                // then emulate slot projection with ViewPortComponent view\r\n                .createController(layoutInstruction)\r\n                .then((layoutController) => {\r\n                const layoutView = layoutController.view;\r\n                ShadowDOM.distributeView(viewPortController.view, layoutController.slots || layoutView.slots);\r\n                // when there is a layout\r\n                // view hierarchy is: <router-view/> owner view -> layout view -> ViewPortComponent view\r\n                layoutController.automate(createOverrideContext(layoutInstruction.viewModel), this.owningView);\r\n                layoutView.children.push(viewPortController.view);\r\n                return layoutView || layoutController;\r\n            })\r\n                .then((newView) => {\r\n                this.view = newView;\r\n                return ready(newView);\r\n            });\r\n        }\r\n        // if there is no layout, then get ViewPortComponent view ready as view property\r\n        // and process controller/swapping\r\n        // when there is no layout\r\n        // view hierarchy is: <router-view/> owner view -> ViewPortComponent view\r\n        this.view = viewPortController.view;\r\n        return ready(this.owningView);\r\n    }\r\n    /**\r\n     * Notify composition transaction that this router has finished processing\r\n     * Happens when this <router-view/> is the root router-view\r\n     * @internal\r\n     */\r\n    _notify() {\r\n        const notifier = this.compositionTransactionNotifier;\r\n        if (notifier) {\r\n            notifier.done();\r\n            this.compositionTransactionNotifier = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @internal Actively avoid using decorator to reduce the amount of code generated\r\n *\r\n * There is no view to compose by default in a router view\r\n * This custom element is responsible for composing its own view, based on current config\r\n */\r\nRouterView.$view = null;\r\n/**\r\n * @internal Actively avoid using decorator to reduce the amount of code generated\r\n */\r\nRouterView.$resource = {\r\n    name: 'router-view',\r\n    bindables: ['swapOrder', 'layoutView', 'layoutViewModel', 'layoutModel', 'inherit-binding-context']\r\n};\r\n/**\r\n* Locator which finds the nearest RouterView, relative to the current dependency injection container.\r\n*/\r\nclass RouterViewLocator {\r\n    /**\r\n    * Creates an instance of the RouterViewLocator class.\r\n    */\r\n    constructor() {\r\n        this.promise = new Promise((resolve) => this.resolve = resolve);\r\n    }\r\n    /**\r\n    * Finds the nearest RouterView instance.\r\n    * @returns A promise that will be resolved with the located RouterView instance.\r\n    */\r\n    findNearest() {\r\n        return this.promise;\r\n    }\r\n    /**@internal */\r\n    _notify(routerView) {\r\n        this.resolve(routerView);\r\n    }\r\n}\n\n/**@internal exported for unit testing */\r\nclass EmptyClass {\r\n}\r\ninlineView('<template></template>')(EmptyClass);\r\n/**\r\n * Default implementation of `RouteLoader` used for loading component based on a route config\r\n */\r\nclass TemplatingRouteLoader extends RouteLoader {\r\n    constructor(compositionEngine) {\r\n        super();\r\n        this.compositionEngine = compositionEngine;\r\n    }\r\n    /**\r\n     * Resolve a view model from a RouteConfig\r\n     * Throws when there is neither \"moduleId\" nor \"viewModel\" property\r\n     * @internal\r\n     */\r\n    resolveViewModel(router, config) {\r\n        return new Promise((resolve, reject) => {\r\n            let viewModel;\r\n            if ('moduleId' in config) {\r\n                let moduleId = config.moduleId;\r\n                if (moduleId === null) {\r\n                    viewModel = EmptyClass;\r\n                }\r\n                else {\r\n                    // this requires container of router has passes a certain point\r\n                    // where a view model has been setup on the container\r\n                    // it will fail in enhance scenario because no viewport has been registered\r\n                    moduleId = relativeToFile(moduleId, Origin.get(router.container.viewModel.constructor).moduleId);\r\n                    if (/\\.html/i.test(moduleId)) {\r\n                        viewModel = createDynamicClass(moduleId);\r\n                    }\r\n                    else {\r\n                        viewModel = moduleId;\r\n                    }\r\n                }\r\n                return resolve(viewModel);\r\n            }\r\n            // todo: add if ('viewModel' in config) to support static view model resolution\r\n            reject(new Error('Invalid route config. No \"moduleId\" found.'));\r\n        });\r\n    }\r\n    /**\r\n     * Create child container based on a router container\r\n     * Also ensures that child router are properly constructed in the newly created child container\r\n     * @internal\r\n     */\r\n    createChildContainer(router) {\r\n        const childContainer = router.container.createChild();\r\n        childContainer.registerSingleton(RouterViewLocator);\r\n        childContainer.getChildRouter = function () {\r\n            let childRouter;\r\n            childContainer.registerHandler(Router, () => childRouter || (childRouter = router.createChild(childContainer)));\r\n            return childContainer.get(Router);\r\n        };\r\n        return childContainer;\r\n    }\r\n    /**\r\n     * Load corresponding component of a route config of a navigation instruction\r\n     */\r\n    loadRoute(router, config, _navInstruction) {\r\n        return this\r\n            .resolveViewModel(router, config)\r\n            .then(viewModel => this.compositionEngine.ensureViewModel({\r\n            viewModel: viewModel,\r\n            childContainer: this.createChildContainer(router),\r\n            view: config.view || config.viewStrategy,\r\n            router: router\r\n        }));\r\n    }\r\n}\r\n/**@internal */\r\nTemplatingRouteLoader.inject = [CompositionEngine];\r\n/**@internal exported for unit testing */\r\nfunction createDynamicClass(moduleId) {\r\n    const name = /([^\\/^\\?]+)\\.html/i.exec(moduleId)[1];\r\n    class DynamicClass {\r\n        bind(bindingContext) {\r\n            this.$parent = bindingContext;\r\n        }\r\n    }\r\n    customElement(name)(DynamicClass);\r\n    useView(moduleId)(DynamicClass);\r\n    return DynamicClass;\r\n}\n\nconst logger = getLogger('route-href');\r\n/**\r\n * Helper custom attribute to help associate an element with a route by name\r\n */\r\nclass RouteHref {\r\n    constructor(router, element) {\r\n        this.router = router;\r\n        this.element = element;\r\n        this.attribute = 'href';\r\n    }\r\n    /*@internal */\r\n    static inject() {\r\n        return [Router, DOM.Element];\r\n    }\r\n    bind() {\r\n        this.isActive = true;\r\n        this.processChange();\r\n    }\r\n    unbind() {\r\n        this.isActive = false;\r\n    }\r\n    attributeChanged(value, previous) {\r\n        if (previous) {\r\n            this.element.removeAttribute(previous);\r\n        }\r\n        return this.processChange();\r\n    }\r\n    processChange() {\r\n        return this.router\r\n            .ensureConfigured()\r\n            .then(() => {\r\n            if (!this.isActive) {\r\n                // returning null to avoid Bluebird warning\r\n                return null;\r\n            }\r\n            const element = this.element;\r\n            const href = this.router.generate(this.route, this.params);\r\n            if (element.au.controller) {\r\n                element.au.controller.viewModel[this.attribute] = href;\r\n            }\r\n            else {\r\n                element.setAttribute(this.attribute, href);\r\n            }\r\n            // returning null to avoid Bluebird warning\r\n            return null;\r\n        })\r\n            .catch((reason) => {\r\n            logger.error(reason);\r\n        });\r\n    }\r\n}\r\n/**\r\n * @internal Actively avoid using decorator to reduce the amount of code generated\r\n */\r\nRouteHref.$resource = {\r\n    type: 'attribute',\r\n    name: 'route-href',\r\n    bindables: [\r\n        { name: 'route', changeHandler: 'processChange', primaryProperty: true },\r\n        { name: 'params', changeHandler: 'processChange' },\r\n        'attribute'\r\n    ] // type definition of Aurelia templating is wrong\r\n};\n\nfunction configure(config) {\r\n    config\r\n        .singleton(RouteLoader, TemplatingRouteLoader)\r\n        .singleton(Router, AppRouter)\r\n        .globalResources(RouterView, RouteHref);\r\n    config.container.registerAlias(Router, AppRouter);\r\n}\n\nexport { RouteHref, RouterView, TemplatingRouteLoader, configure };\n//# sourceMappingURL=aurelia-templating-router.js.map\n","import 'aurelia-bootstrapper';\nimport { Aurelia, PLATFORM } from 'aurelia-framework';\n\nexport async function configure(aurelia: Aurelia): Promise<void> {\n  aurelia\n    .use\n    .developmentLogging()\n    .standardConfiguration()\n    .plugin(PLATFORM.moduleName('@aurelia-mdc-web/floating-label'))\n    .plugin(PLATFORM.moduleName('@aurelia-mdc-web/line-ripple'))\n    .plugin(PLATFORM.moduleName('@aurelia-mdc-web/notched-outline'))\n    .plugin(PLATFORM.moduleName('@aurelia-mdc-web/text-field'));\n\n  await aurelia.start();\n  await aurelia.setRoot(PLATFORM.moduleName('app'));\n}\n"],"sourceRoot":""}